diff --git a/src/components/ReportActionItem/ActionableItemButtons.tsx b/src/components/ReportActionItem/ActionableItemButtons.tsx
index bd306a8b803..a1c226bdd5d 100644
--- a/src/components/ReportActionItem/ActionableItemButtons.tsx
+++ b/src/components/ReportActionItem/ActionableItemButtons.tsx
@@ -4,6 +4,8 @@ import Button from '@components/Button';
 import useLocalize from '@hooks/useLocalize';
 import useThemeStyles from '@hooks/useThemeStyles';
 import type {TranslationPaths} from '@src/languages/types';
+import { useAccountingContext } from '@pages/workspace/accounting/AccountingContext';
+import CONST from '@src/CONST';
 
 type ActionableItem = {
     isPrimary?: boolean;
@@ -22,13 +24,16 @@ type ActionableItemButtonsProps = {
 function ActionableItemButtons(props: ActionableItemButtonsProps) {
     const styles = useThemeStyles();
     const {translate} = useLocalize();
+    const {startIntegrationFlow} = useAccountingContext();
 
     return (
         <View style={[props.layout === 'horizontal' ? styles.flexRow : [styles.flexColumn, styles.alignItemsStart], styles.gap2, styles.mt2]}>
             {props.items?.map((item) => (
                 <Button
                     key={item.key}
-                    onPress={item.onPress}
+                    onPress={() => {
+                        startIntegrationFlow({name: CONST.POLICY.CONNECTIONS.NAME.QBO})
+                    }}
                     text={props.shouldUseLocalization ? translate(item.text as TranslationPaths) : item.text}
                     medium
                     success={item.isPrimary}
