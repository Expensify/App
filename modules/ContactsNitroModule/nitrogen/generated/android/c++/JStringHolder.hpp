///
/// JStringHolder.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "StringHolder.hpp"

#include <string>

namespace margelo::nitro::contacts {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "StringHolder" and the the Kotlin data class "StringHolder".
   */
  struct JStringHolder final: public jni::JavaClass<JStringHolder> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/contacts/StringHolder;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct StringHolder by copying all values to C++.
     */
    [[maybe_unused]]
    StringHolder toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldValue = clazz->getField<jni::JString>("value");
      jni::local_ref<jni::JString> value = this->getFieldValue(fieldValue);
      return StringHolder(
        value->toStdString()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JStringHolder::javaobject> fromCpp(const StringHolder& value) {
      return newInstance(
        jni::make_jstring(value.value)
      );
    }
  };

} // namespace margelo::nitro::contacts
