name: Process new code merged to main

on:
  push:
    branches: [main]

jobs:
  chooseDeployActions:
    runs-on: ubuntu-latest
    outputs:
      mergedPullRequest: ${{ steps.getMergedPullRequest.outputs.number }}
      isStagingDeployLocked: ${{ steps.isStagingDeployLocked.outputs.IS_LOCKED }}
      isVersionBumpPR: ${{ steps.isVersionBumpPR.outputs.IS_VERSION_BUMP_PR }}

    steps:
      # Version: 2.3.4
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          fetch-depth: 0
          token: ${{ secrets.OS_BOTIFY_TOKEN }}

      - name: Get merged pull request
        id: getMergedPullRequest
        uses: actions-ecosystem/action-get-merged-pull-request@59afe90821bb0b555082ce8ff1e36b03f91553d9
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if StagingDeployCash is locked
        id: isStagingDeployLocked
        uses: Expensify/Expensify.cash/.github/actions/isStagingDeployLocked@main
        with:
          GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}

      - name: Check if merged pull request was an automatic version bump PR
        id: isVersionBumpPR
        run: echo "::set-output name=IS_VERSION_BUMP_PR::${{ github.actor == 'OSBotify' }}"

  skipDeploy:
    runs-on: ubuntu-latest
    needs: chooseDeployActions
    if: ${{ needs.chooseDeployActions.outputs.isStagingDeployLocked == 'true' && needs.chooseDeployActions.outputs.isVersionBumpPR == 'false' }}

    steps:
      - name: Comment on deferred PR
        uses: actions-ecosystem/action-create-comment@cd098164398331c50e7dfdd0dfa1b564a1873fac
        with:
          github_token: ${{ secrets.OS_BOTIFY_TOKEN }}
          number: ${{ needs.chooseDeployActions.outputs.mergedPullRequest }}
          body: |
            :hand: This PR was not deployed to staging yet because QA is ongoing. It will be automatically deployed to staging after the next production release.

  version:
    runs-on: macos-latest
    needs: chooseDeployActions
    if: ${{ needs.chooseDeployActions.outputs.isStagingDeployLocked == 'false' && needs.chooseDeployActions.outputs.isVersionBumpPR == 'false' }}

    steps:
      # Version: 2.3.4
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          fetch-depth: 0
          token: ${{ secrets.OS_BOTIFY_TOKEN }}

      - uses: softprops/turnstyle@8db075d65b19bf94e6e8687b504db69938dc3c65
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new BUILD version
        uses: Expensify/Expensify.cash/.github/actions/triggerWorkflowAndWait@main
        with:
          GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}
          WORKFLOW: createNewVersion.yml
          INPUTS: '{ "SEMVER_LEVEL": "BUILD" }'

      - name: Update staging branch
        uses: Expensify/Expensify.cash/.github/actions/triggerWorkflowAndWait@main
        with:
          GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}
          WORKFLOW: updateProtectedBranch.yml
          INPUTS: '{ "TARGET_BRANCH": "staging" }'

      - name: Pull main to get the new version
        run: |
          git pull origin main
          echo "NEW_VERSION=$(npm run print-version --silent)" >> $GITHUB_ENV
          echo "New version is ${{ env.NEW_VERSION }}"

      # Note: we need to create this tag but not push it, because of how GitUtils.getPullRequestsMergedBetween works
      - name: Tag version
        run: git tag ${{ env.NEW_VERSION }}

      - name: Update StagingDeployCash
        uses: Expensify/Expensify.cash/.github/actions/createOrUpdateStagingDeploy@main
        with:
          GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}
          NPM_VERSION: ${{ env.NEW_VERSION }}
          NEW_PULL_REQUESTS: https://github.com/Expensify/Expensify.cash/pull/${{ needs.chooseDeployActions.outputs.mergedPullRequest }}

      # This Slack step is duplicated in all workflows, if you make a change to this step, make sure to update all
      # the other workflows with the same change
      - uses: 8398a7/action-slack@v3
        name: Job failed Slack notification
        if: ${{ failure() }}
        with:
          status: custom
          fields: workflow, repo
          custom_payload: |
            {
              channel: '#announce',
              attachments: [{
                color: "#DB4545",
                pretext: `<!here>`,
                text: `ðŸ’¥ ${process.env.AS_REPO} failed on ${process.env.AS_WORKFLOW} workflow ðŸ’¥`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
