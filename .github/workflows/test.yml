name: Jest Unit Tests

on:
  workflow_call:
  pull_request:
    types: [opened, synchronize]
    branches-ignore: [staging, production]

env:
  CHUNKS: 3
jobs:
  config:
    runs-on: ubuntu-latest
    name: Define matrix parameters
    outputs:
      MATRIX: ${{ steps.set-matrix.outputs.MATRIX }}
    steps:
      - name: Set Matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            core.setOutput('MATRIX', Array.from({ length: process.env.CHUNKS + 1 }, (v, i) => i));

  test:
    needs: config
    if: ${{ github.actor != 'OSBotify' || github.event_name == 'workflow_call' }}
    runs-on: ubuntu-latest
    name: test (job ${{ matrix.chunk }})
    env:
      CI: true
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{fromJson(needs.config.outputs.MATRIX)}}

    steps:
      - uses: Expensify/App/.github/actions/composite/setupNode@main

      # If automatic signing is enabled, iOS builds will fail, so ensure we always have the proper profile specified
      - name: Check Provisioning Style
        run: |
          if grep -q 'PROVISIONING_PROFILE_SPECIFIER = chat_expensify_appstore' ios/NewExpensify.xcodeproj/project.pbxproj; then
            exit 0
          else
            echo "Error: Automatic provisioning style is not allowed!"
            exit 1
          fi

      - name: Cache Jest cache
        id: cache-jest-cache
        uses: actions/cache@v1
        with:
          path: .jest-cache
          key: ${{ runner.os }}-jest

      - name: All Unit Tests
        if: ${{ matrix.chunk < env.CHUNKS }}
        run: npx jest --listTests --json | jq -cM '[_nwise(length / ${{ env.CHUNKS }} | ceil)]' | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs npm test

      - name: Pull Request Tests
        # Pull request related tests will be run in separate runner in parallel.
        if: ${{ matrix.chunk == env.CHUNKS }}
        run: tests/unit/getPullRequestsMergedBetweenTest.sh

