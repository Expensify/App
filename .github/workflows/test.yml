name: Jest Unit Tests

on:
  workflow_call:
  pull_request:
    types: [opened, synchronize]
    branches-ignore: [staging, production]

jobs:
  test:
    if: ${{ github.actor != 'OSBotify' || github.event_name == 'workflow_call' }}
    runs-on: ubuntu-latest
    steps:
      - uses: Expensify/App/.github/actions/composite/setupNode@main

      # If automatic signing is enabled, iOS builds will fail, so ensure we always have the proper profile specified
      - name: Check Provisioning Style
        run: |
          if grep -q 'PROVISIONING_PROFILE_SPECIFIER = chat_expensify_appstore' ios/NewExpensify.xcodeproj/project.pbxproj; then
            exit 0
          else
            echo "Error: Automatic provisioning style is not allowed!"
            exit 1
          fi
      - name: Jest Unit Tests
        run: npm run test
        env:
          CI: true

      - name: Pull Request Tests
        run: tests/unit/getPullRequestsMergedBetweenTest.sh

      - name: Cache Jest cache
        id: cache-jest-cache
        uses: actions/cache@v1
        with:
          path: .jest-cache
          key: ${{ runner.os }}-jest

      - name: All Unit Tests
        if: ${{ fromJSON(matrix.chunk) < fromJSON(env.CHUNKS) }}
        # Split the jest based test files in multiple chunks/groups and then execute them in parallel in different jobs/runners.
        run: npx jest --listTests --json | jq -cM '[_nwise(length / ${{ fromJSON(needs.config.outputs.JEST_CHUNKS) }} | ceil)]' | jq '[[]] + .' | jq '.[${{ fromJSON(matrix.chunk) }}] | .[] | @text' | xargs npm test

      - name: Pull Request Tests
        # Pull request related tests will be run in separate runner in parallel.
        if: ${{ fromJSON(matrix.chunk) == fromJSON(env.CHUNKS) }}
        run: tests/unit/getPullRequestsMergedBetweenTest.sh
