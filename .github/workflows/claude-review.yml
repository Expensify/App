name: PR Reviews with Claude Code

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
      types: [opened, ready_for_review]
  pull_request_review_comment:
      types: [created]
  workflow_dispatch:
    inputs:
      PULL_REQUEST_URL:
        description: 'The full URL of the E/App pull request.'
        required: true
        type: string

jobs:
  review:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_dispatch' || (!github.event.pull_request.head.repo.fork && !github.event.pull_request.draft)) }}
    steps:
      - name: Check for excluded PRs
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[ "$PR_TITLE" == *"Revert"* ]]; then
            echo "::notice::Skipping review because the PR is a revert"
            exit 0
          fi

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          fetch-depth: 1

      - name: Filter paths
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
            filters: |
              code:
                - 'src/**'
              docs:
                - 'docs/**/*.md'
                - 'docs/**/*.csv'


      - name: Validate that user is an Expensify employee
        uses: ./.github/actions/composite/validateActor
        if: github.event_name == 'workflow_dispatch'
        with:
          REQUIRE_APP_DEPLOYER: false
          OS_BOTIFY_TOKEN: ${{ secrets.OS_BOTIFY_COMMIT_TOKEN }}

      - name: Get PR details
        if: github.event_name == 'workflow_dispatch'
        id: pr-data
        run: |
          echo "::notice::ðŸ”§ Manual workflow dispatch triggered"
          PR_INFO=$(gh pr view "${{ inputs.PULL_REQUEST_URL }}" --json number)
          {
            echo "PR_NUMBER=$(echo "$PR_INFO" | jq -r '.number')"
          } >> "$GITHUB_OUTPUT"
          echo "::notice::âœ… Processing PR #$(echo "$PR_INFO" | jq -r '.number')"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run Claude Code (code)
        if: steps.filter.outputs.code == 'true'
        uses: anthropics/claude-code-action@a3ff61d47aa5118a43b33ae44c4087d9eb51111a # v1.0.8
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: "/review-code-pr REPO: ${{ github.repository }} PR_NUMBER: ${{ steps.pr-data.outputs.PR_NUMBER || github.event.pull_request.number }}"
          claude_args: |
            --allowedTools "Read,Glob,Grep,mcp__github_inline_comment__create_inline_comment,Bash(gh pr *),Bash(gh issue *)"

      - name: Run Claude Code (docs)
        if: steps.filter.outputs.docs == 'true'
        uses: anthropics/claude-code-action@a3ff61d47aa5118a43b33ae44c4087d9eb51111a # v1.0.8
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: "/review-helpdot-pr REPO: ${{ github.repository }} PR_NUMBER: ${{ steps.pr-data.outputs.PR_NUMBER || github.event.pull_request.number }}"
          claude_args: |
            --allowedTools "Read,Glob,Grep,mcp__github_inline_comment__create_inline_comment,Bash(gh pr *),Bash(gh issue *)"
