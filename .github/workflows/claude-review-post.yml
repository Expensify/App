name: Claude Review - Post Comment

# This workflow runs after claude-review-generate.yml completes
# It retrieves the review artifact and posts it as a PR comment
# This runs in the context of the base repo with proper permissions

permissions:
    contents: read
    pull-requests: write

on:
    workflow_run:
        workflows: ["Claude Review - Generate"]
        types:
            - completed

jobs:
    post-review:
        runs-on: ubuntu-latest
        # Only run if the previous workflow succeeded
        if: github.event.workflow_run.conclusion == 'success'

        steps:
            - name: Download review artifact
              uses: actions/github-script@v7
              with:
                  script: |
                      const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        run_id: context.payload.workflow_run.id,
                      });

                      const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                        return artifact.name.startsWith('claude-review-');
                      })[0];

                      if (!matchArtifact) {
                        core.setFailed('No review artifact found');
                        return;
                      }

                      const download = await github.rest.actions.downloadArtifact({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        artifact_id: matchArtifact.id,
                        archive_format: 'zip',
                      });

                      const fs = require('fs');
                      fs.writeFileSync('${{github.workspace}}/review.zip', Buffer.from(download.data));

            - name: Extract artifact
              run: |
                  unzip review.zip -d review-output
                  ls -la review-output/

            - name: Read review metadata
              id: metadata
              run: |
                  PR_NUMBER=$(cat review-output/pr_number.txt)
                  PR_SHA=$(cat review-output/pr_sha.txt)
                  REPOSITORY=$(cat review-output/repository.txt)

                  echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
                  echo "pr_sha=$PR_SHA" >> $GITHUB_OUTPUT
                  echo "repository=$REPOSITORY" >> $GITHUB_OUTPUT

            - name: Post review comment
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const fs = require('fs');
                      const prNumber = '${{ steps.metadata.outputs.pr_number }}';

                      let reviewContent = '';
                      try {
                        reviewContent = fs.readFileSync('review-output/review.md', 'utf8');
                      } catch (error) {
                        console.log('Could not read review.md, posting simple message');
                        reviewContent = 'âœ… Claude code review completed. Check the workflow logs for details.';
                      }

                      // Create or update comment
                      const comment = `## ðŸ¤– Claude Code Review

                      ${reviewContent}

                      ---
                      *Review generated by [Claude Code Action](https://github.com/anthropics/claude-code-action)*
                      *Workflow run: [${context.runId}](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})*`;

                      // Check if we already have a comment from this bot
                      const { data: comments } = await github.rest.issues.listComments({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: prNumber,
                      });

                      const botComment = comments.find(comment => 
                        comment.user.login === 'github-actions[bot]' && 
                        comment.body.includes('ðŸ¤– Claude Code Review')
                      );

                      if (botComment) {
                        // Update existing comment
                        await github.rest.issues.updateComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: botComment.id,
                          body: comment,
                        });
                        console.log('Updated existing review comment');
                      } else {
                        // Create new comment
                        await github.rest.issues.createComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: prNumber,
                          body: comment,
                        });
                        console.log('Created new review comment');
                      }
