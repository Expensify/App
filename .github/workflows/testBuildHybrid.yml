name: Build and deploy hybrid apps for testing

on:
  workflow_dispatch:
    inputs:
      REVIEWED_CODE:
        description: I reviewed this pull request and verified that it does not contain any malicious code.
        type: boolean
        required: true
        default: false
      # Pull Request number from App repo for correct placement of ND app. If not specified defaults to main branch.
      APP_PULL_REQUEST_NUMBER:
        description: App PR number. Defaults to main.
        required: false
        default: ''
      # Pull Request number from Mobile-Expensify repo for correct placement of OD app. It will take precedence over MOBILE-EXPENSIFY from App's PR description if both are specified. If nothing is specified defaults to Mobile-Expensify's main
      HYBRIDAPP_PULL_REQUEST_NUMBER:
        description: Mobile-Expensify PR number. Defaults to main. Overrides MOBILE-EXPENSIFY set in App's PR description.
        required: false
        default: ''
      # Do not modify! GH preserves `workflow_dispatch` as the event that triggered this workflow even if it was called from `testBuild.yml`. This is a workaround for that issue.
      DISPATCHED_MANUALLY:
        description: Leave checked! This is a workaround for a GH workflow bug.
        type: boolean
        default: true
  workflow_call:
    inputs:
      APP_PR_NUMBER:
        description: Pull Request number from App repo needed for download link construction
        type: string
        required: true
      APP_REF:
        description: Git ref to checkout in App
        type: string
        required: true
      IOS:
        description: Should build iOS app?
        type: boolean
        default: true
      ANDROID:
        description: Should build Android app?
        type: boolean
        default: true

    outputs:
      ANDROID_LINK:
        value: ${{ jobs.androidHybrid.outputs.S3_APK_PATH }}
      IOS_LINK:
        value: ${{ jobs.iosHybrid.outputs.IOS_PATH }}

env:
  # This variable is needed for fastlane to construct correct path, -hybrid suffix is needed to distinguish hybrid apps from standalone New Dot
  PULL_REQUEST_NUMBER: ${{ github.event.inputs.APP_PULL_REQUEST_NUMBER || github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER || inputs.APP_PR_NUMBER}}-hybrid

jobs:
  prep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: Validate that user is an Expensify employee
        if: github.event.inputs.DISPATCHED_MANUALLY
        uses: ./.github/actions/composite/validateActor
        with:
          REQUIRE_APP_DEPLOYER: false
          OS_BOTIFY_TOKEN: ${{ secrets.OS_BOTIFY_COMMIT_TOKEN }}

      - name: Validate that the user reviewed the pull request before running a test build
        if: ${{ github.event_name == 'workflow_dispatch' && !inputs.REVIEWED_CODE }}
        run: |
          echo "::error::🕵️‍♀️ Please carefully review the pull request before running a test build to ensure it does not contain any malicious code"
          exit 1

      - name: Validate input
        if: github.event.inputs.DISPATCHED_MANUALLY
        run: |
          if [[ -z "${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}" && -z "${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER }}" ]]; then
            echo "Invalid input. You have to pass at least one PR number"
            exit 1
          fi

  getNewDotRef:
    runs-on: ubuntu-latest
    needs: [prep]
    outputs:
      REF: ${{ steps.getHeadRef.outputs.REF }}
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: Check if pull request number is correct
        id: getHeadRef
        run: |
          set -e

          if [[ -n "${{ inputs.APP_REF }}" ]]; then
            echo "REF=${{ inputs.APP_REF }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi 

          if [[ -z "${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}" ]]; then
            echo "REF=" >> "$GITHUB_OUTPUT"
          else
            echo "REF=$(gh pr view ${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }} -R Expensify/App --json headRefOid --jq '.headRefOid')" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

  getOldDotPR:
    runs-on: ubuntu-latest
    needs: [prep]
    outputs:
      OLD_DOT_PR: ${{ steps.old-dot-pr.outputs.result }}
    steps:
      - name: Check if author specifed Old Dot PR
        id: old-dot-pr
        # v7
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            if ('${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER}}') return '${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER}}';

            if (!'${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}' && !'${{ inputs.APP_PR_NUMBER }}') return '';

            const pullRequest = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: '${{ github.event.inputs.APP_PULL_REQUEST_NUMBER || inputs.APP_PR_NUMBER }}',
            });
            
            const body = pullRequest.data.body;
            const regex = /MOBILE-EXPENSIFY:\s*https:\/\/github.com\/Expensify\/Mobile-Expensify\/pull\/(?<prNumber>\d+)/;
            const found = body.match(regex)?.groups?.prNumber || "";

            return found.trim();

  getOldDotRef:
      runs-on: ubuntu-latest
      needs: [getOldDotPR]
      outputs:
        OLD_DOT_REF: ${{ steps.getHeadRef.outputs.REF }}
      steps:
        - name: Checkout
          # v4
          uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

        - name: Check if pull request number is correct
          id: getHeadRef
          run: |
            set -e
            if [[ -z "${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER }}" && -z "${{ needs.getOldDotPR.outputs.OLD_DOT_PR }}" ]]; then
              echo "REF=" >> "$GITHUB_OUTPUT"
            else
              echo "PR=${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER || needs.getOldDotPR.outputs.OLD_DOT_PR }}" >> "$GITHUB_OUTPUT"
              echo "REF=$(gh pr view ${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER || needs.getOldDotPR.outputs.OLD_DOT_PR }} -R Expensify/Mobile-Expensify --json headRefOid --jq '.headRefOid')" >> "$GITHUB_OUTPUT"
            fi
          env:
            GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}


  postGitHubCommentBuildStarted:
    name: Post build started comment
    uses: ./.github/workflows/postBuildStartedComment.yml
    needs: [getNewDotRef, getOldDotPR, getOldDotRef]
    secrets: inherit
    with:
      APP_PULL_REQUEST_NUMBER: ${{ inputs.APP_PULL_REQUEST_NUMBER }}
      HYBRIDAPP_PULL_REQUEST_NUMBER: ${{ github.event.inputs.HYBRIDAPP_PULL_REQUEST_NUMBER || needs.getOldDotPR.outputs.OLD_DOT_PR }}

  androidHybrid:
    name: Build Android HybridApp
    if: ${{ github.event.inputs.DISPATCHED_MANUALLY || inputs.ANDROID }}
    needs: [getNewDotRef, getOldDotPR, getOldDotRef]
    runs-on: ubuntu-latest-xl
    outputs:
      S3_APK_PATH: ${{ steps.exportAndroidS3Path.outputs.S3_APK_PATH }}
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true
          ref: ${{ needs.getNewDotRef.outputs.REF || 'main' }}
          token: ${{ secrets.OS_BOTIFY_TOKEN }}

      - name: Checkout Old Dot to author specified branch or commit
        if: ${{ needs.getOldDotRef.outputs.OLD_DOT_REF != '' }}
        run: |
          cd Mobile-Expensify
          git fetch origin ${{ needs.getOldDotRef.outputs.OLD_DOT_REF }}
          git checkout ${{ needs.getOldDotRef.outputs.OLD_DOT_REF }}
          echo "Building from https://github.com/Expensify/Mobile-Expensify/pull/${{ needs.getOldDotPR.outputs.OLD_DOT_PR }}"

      - name: Configure MapBox SDK
        run: ./scripts/setup-mapbox-sdk.sh ${{ secrets.MAPBOX_SDK_DOWNLOAD_TOKEN }}

      - name: Setup Node
        id: setup-node
        uses: ./.github/actions/composite/setupNode
        with:
          IS_HYBRID_BUILD: 'true'

      - name: Run grunt build
        run: |
            cd Mobile-Expensify
            npm run grunt:build:shared

      - name: Setup dotenv
        run: |
            cp .env.staging .env.adhoc
            sed -i 's/ENVIRONMENT=staging/ENVIRONMENT=adhoc/' .env.adhoc
            echo "PULL_REQUEST_NUMBER=${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}" >> .env.adhoc

      - name: Setup Java
        # v4
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Setup Ruby
        # v1.229.0
        uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252
        with:
          bundler-cache: true

      - name: Install 1Password CLI
        # v1
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f

      - name: Load files from 1Password
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          op read "op://${{ vars.OP_VAULT }}/upload-key.keystore/upload-key.keystore" --force --out-file ./upload-key.keystore
          op read "op://${{ vars.OP_VAULT }}/android-fastlane-json-key.json/android-fastlane-json-key.json" --force --out-file ./android-fastlane-json-key.json

          # Copy the keystore to the Android directory for Fullstory
          cp ./upload-key.keystore Mobile-Expensify/Android

      - name: Load Android upload keystore credentials from 1Password
        id: load-credentials
        # v2
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          ANDROID_UPLOAD_KEYSTORE_PASSWORD: op://${{ vars.OP_VAULT }}/Repository-Secrets/ANDROID_UPLOAD_KEYSTORE_PASSWORD
          ANDROID_UPLOAD_KEYSTORE_ALIAS: op://${{ vars.OP_VAULT }}/Repository-Secrets/ANDROID_UPLOAD_KEYSTORE_ALIAS
          ANDROID_UPLOAD_KEY_PASSWORD: op://${{ vars.OP_VAULT }}/Repository-Secrets/ANDROID_UPLOAD_KEY_PASSWORD

      - name: Build Android app
        id: build
        env:
          ANDROID_UPLOAD_KEYSTORE_PASSWORD: ${{ steps.load-credentials.outputs.ANDROID_UPLOAD_KEYSTORE_PASSWORD }}
          ANDROID_UPLOAD_KEYSTORE_ALIAS: ${{ steps.load-credentials.outputs.ANDROID_UPLOAD_KEYSTORE_ALIAS }}
          ANDROID_UPLOAD_KEY_PASSWORD: ${{ steps.load-credentials.outputs.ANDROID_UPLOAD_KEY_PASSWORD }}
        run: bundle exec fastlane android build_adhoc_hybrid

      - name: Configure AWS Credentials
        # v4
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload Android AdHoc build to S3
        run: bundle exec fastlane android upload_s3
        env:
          S3_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ad-hoc-expensify-cash
          S3_REGION: us-east-1

      - name: Export S3 path
        id: exportAndroidS3Path
        run: |
          # $s3APKPath is set from within the Fastfile, android upload_s3 lane
          echo "S3_APK_PATH=$s3APKPath" >> "$GITHUB_OUTPUT"

  iosHybrid:
    name: Build and deploy iOS for testing
    if: ${{ github.event.inputs.DISPATCHED_MANUALLY || inputs.IOS }}
    needs: [getNewDotRef, getOldDotPR, getOldDotRef]
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.2.0.app/Contents/Developer
    runs-on: macos-15-xlarge
    outputs:
      IOS_PATH: ${{ steps.export-ios-path.outputs.IOS_PATH }}
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true
          ref: ${{ needs.getNewDotRef.outputs.REF || 'main'}}
          token: ${{ secrets.OS_BOTIFY_TOKEN }}

      - name: Checkout Old Dot to author specified branch or commit
        if: ${{ needs.getOldDotRef.outputs.OLD_DOT_REF != '' }}
        run: |
          cd Mobile-Expensify
          git fetch origin ${{ needs.getOldDotRef.outputs.OLD_DOT_REF }}
          git checkout ${{ needs.getOldDotRef.outputs.OLD_DOT_REF }}
          echo "Building from https://github.com/Expensify/Mobile-Expensify/pull/${{ needs.getOldDotPR.outputs.OLD_DOT_PR }}"

      - name: Configure MapBox SDK
        run: ./scripts/setup-mapbox-sdk.sh ${{ secrets.MAPBOX_SDK_DOWNLOAD_TOKEN }}

      - name: Setup Node
        id: setup-node
        uses: ./.github/actions/composite/setupNode
        with:
          IS_HYBRID_BUILD: 'true'

      - name: Create .env.adhoc file based on staging and add PULL_REQUEST_NUMBER env to it
        run: |
          cp .env.staging .env.adhoc
          sed -i '' 's/ENVIRONMENT=staging/ENVIRONMENT=adhoc/' .env.adhoc
          echo "PULL_REQUEST_NUMBER=${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}" >> .env.adhoc

      - name: Setup Ruby
        # v1.229.0
        uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252
        with:
          bundler-cache: true

      - name: Install New Expensify Gems
        run: bundle install

      - name: Cache Pod dependencies
        # v4
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        id: pods-cache
        with:
          path: Mobile-Expensify/iOS/Pods
          key: ${{ runner.os }}-pods-cache-${{ hashFiles('Mobile-Expensify/iOS/Podfile.lock', 'firebase.json') }}

      - name: Compare Podfile.lock and Manifest.lock
        id: compare-podfile-and-manifest
        run: echo "IS_PODFILE_SAME_AS_MANIFEST=${{ hashFiles('Mobile-Expensify/iOS/Podfile.lock') == hashFiles('Mobile-Expensify/iOS/Manifest.lock') }}" >> "$GITHUB_OUTPUT"

      - name: Install cocoapods
        uses: nick-fields/retry@3f757583fb1b1f940bc8ef4bf4734c8dc02a5847
        if: steps.pods-cache.outputs.cache-hit != 'true' || steps.compare-podfile-and-manifest.outputs.IS_PODFILE_SAME_AS_MANIFEST != 'true' || steps.setup-node.outputs.cache-hit != 'true'
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: npm run pod-install

      - name: Install 1Password CLI
        # v1
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f

      - name: Load files from 1Password
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc/OldApp_AdHoc.mobileprovision" --force --out-file ./OldApp_AdHoc.mobileprovision
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc_Share_Extension/OldApp_AdHoc_Share_Extension.mobileprovision" --force --out-file ./OldApp_AdHoc_Share_Extension.mobileprovision
          op read "op://${{ vars.OP_VAULT }}/OldApp_AdHoc_Notification_Service/OldApp_AdHoc_Notification_Service.mobileprovision" --force --out-file ./OldApp_AdHoc_Notification_Service.mobileprovision
          op read "op://${{ vars.OP_VAULT }}/New Expensify Distribution Certificate/Certificates.p12" --force --out-file ./Certificates.p12

      - name: Build AdHoc app
        run: bundle exec fastlane ios build_adhoc_hybrid

      - name: Configure AWS Credentials
        # v4
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload AdHoc build to S3
        run: bundle exec fastlane ios upload_s3
        env:
          S3_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ad-hoc-expensify-cash
          S3_REGION: us-east-1

      - name: Export iOS path
        id: export-ios-path
        run: |
          content_ios="$(cat ./ios_paths.json)"
          content_ios="${content_ios//'%'/'%25'}"
          content_ios="${content_ios//$'\n'/'%0A'}"
          content_ios="${content_ios//$'\r'/'%0D'}"
          ios_path=$(echo "$content_ios" | jq -r '.html_path')
          echo "IOS_PATH=$ios_path" >> "$GITHUB_OUTPUT"

  postGithubComment:
    runs-on: ubuntu-latest
    name: Post a GitHub comment with app download links for testing
    if: github.event.inputs.DISPATCHED_MANUALLY
    needs: [getNewDotRef, getOldDotPR, androidHybrid, iosHybrid]
    steps:
      - name: Checkout
        # v4
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          ref: ${{ needs.getNewDotRef.outputs.REF }}

      - name: Publish links to apps for download on NewDot PR
        if: github.event.inputs.APP_PULL_REQUEST_NUMBER != ''
        uses: ./.github/actions/javascript/postTestBuildComment
        with:
          PR_NUMBER: ${{ github.event.inputs.APP_PULL_REQUEST_NUMBER }}
          REPO: App
          GITHUB_TOKEN: ${{ github.token }}
          ANDROID: ${{ needs.androidHybrid.result }}
          IOS: ${{ needs.iosHybrid.result }}
          ANDROID_LINK: ${{ needs.androidHybrid.outputs.S3_APK_PATH }}
          IOS_LINK: ${{ needs.iosHybrid.outputs.IOS_PATH }}

      - name: Publish links to apps for download on OldDot PR
        if: needs.getOldDotPR.outputs.OLD_DOT_PR != ''
        uses: ./.github/actions/javascript/postTestBuildComment
        with:
          PR_NUMBER: ${{ needs.getOldDotPR.outputs.OLD_DOT_PR }}
          REPO: Mobile-Expensify
          GITHUB_TOKEN: ${{ secrets.OS_BOTIFY_TOKEN }}
          ANDROID: ${{ needs.androidHybrid.result }}
          IOS: ${{ needs.iosHybrid.result }}
          ANDROID_LINK: ${{ needs.androidHybrid.outputs.S3_APK_PATH }}
          IOS_LINK: ${{ needs.iosHybrid.outputs.IOS_PATH }}
