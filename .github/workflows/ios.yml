name: Build and Deploy iOS

# This workflow is run when any tag is published
on:
    push:
        tags:
            - '*'
    release:
      types: [created]

env:
  DEVELOPER_DIR: /Applications/Xcode_12.3.app/Contents/Developer

jobs:
    build:
        if: github.actor == 'OSBotify'
        runs-on: macos-latest
        env:
          SHOULD_DEPLOY_PRODUCTION: ${{ github.event_name == 'release' }}
        steps:
            - uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                node-version: '14.x'

            - uses: actions/setup-ruby@v1
              with:
                  ruby-version: '2.7'

            - name: Install bundler
              run: gem install bundler

            - name: Install gems
              run: bundle install

            - name: Install node packages
              uses: nick-invision/retry@7c68161adf97a48beb850a595b8784ec57a98cbb
              with:
                timeout_minutes: 10
                max_attempts: 5
                command: npm ci

            - name: Install cocoapods
              run: cd ios && pod install

            - name: Decrypt profile
              run: cd ios && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output chat_expensify_appstore.mobileprovision chat_expensify_appstore.mobileprovision.gpg
              env:
                  LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

            - name: Decrypt certificate
              run: cd ios && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output Certificates.p12 Certificates.p12.gpg
              env:
                  LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

            - name: Decrypt App Store Connect API key
              run: cd ios && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output ios-fastlane-json-key.json ios-fastlane-json-key.json.gpg
              env:
                LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

            - name: Run Fastlane
              if: ${{ env.SHOULD_DEPLOY_PRODUCTION == 'false' }}
              run: bundle exec fastlane ios beta
              env:
                  APPLE_CONTACT_EMAIL: ${{ secrets.APPLE_CONTACT_EMAIL }}
                  APPLE_CONTACT_PHONE: ${{ secrets.APPLE_CONTACT_PHONE }}
                  APPLE_DEMO_EMAIL: ${{ secrets.APPLE_DEMO_EMAIL }}
                  APPLE_DEMO_PASSWORD: ${{ secrets.APPLE_DEMO_PASSWORD }}

            # TODO: uncomment when we want to release iOS to production
            - name: Run Fastlane for App Store release
#              if: ${{ env.SHOULD_DEPLOY_PRODUCTION == 'true' }}
              if: ${{ env.SHOULD_DEPLOY_PRODUCTION == 'true' && 'false' == 'true' }}
              run: bundle exec fastlane ios production
              env:
                VERSION: ${{ env.NEW_IOS_VERSION }}

            # These Slack steps are duplicated in all workflows, if you make a change to this step, make sure to update all
            # the other workflows with the same changes
            - uses: 8398a7/action-slack@v3
              name: Job failed Slack notification
              if: ${{ failure() }}
              with:
                  status: custom
                  fields: workflow, repo
                  custom_payload: |
                      {
                        channel: '#announce',
                        attachments: [{
                          color: "#DB4545",
                          pretext: `<!here>`,
                          text: `ðŸ’¥ ${process.env.AS_REPO} failed on ${process.env.AS_WORKFLOW} workflow ðŸ’¥`,
                        }]
                      }
              env:
                  GITHUB_TOKEN: ${{ github.token }}
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

            - name: Set version in ENV
              if: ${{ success() }}
              run: echo "VERSION=$(npm run print-version --silent)" >> $GITHUB_ENV
