# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

skip_docs
opt_out_usage

platform :android do
  desc "Generate a new local APK"
  lane :build do
    ENV["ENVFILE"]=".env.production"

    gradle(
      project_dir: './android',
      task: 'assemble',
      build_type: 'Release',
    )
  end

  desc "Build and upload app to Google Play"
  lane :beta do
    ENV["ENVFILE"]=".env.production"

    gradle(
        project_dir: './android',
        task: 'bundle',
        build_type: 'Release',
    )

    upload_to_play_store(
        package_name: "com.expensify.chat",
        json_key: './android/app/android-fastlane-json-key.json',
        aab: './android/app/build/outputs/bundle/release/app-release.aab',
        track: 'internal',
        rollout: '1.0'
    )
  end

  desc "Deploy app to Google Play production"
  lane :production do
    google_play_track_version_codes(
      package_name: "com.expensify.chat",
      json_key: './android/app/android-fastlane-json-key.json',
      track: 'internal'
    )

    upload_to_play_store(
      package_name: "com.expensify.chat",
      json_key: './android/app/android-fastlane-json-key.json',
      version_code: ENV["VERSION"],
      track: 'internal',
      track_promote_to: 'production',
      rollout: '1.0',
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end
end

platform :ios do
  desc "Generate a local iOS production build"
  lane :build do
    ENV["ENVFILE"]=".env.production"

    build_app(
        workspace: "./ios/ExpensifyCash.xcworkspace",
        scheme: "ExpensifyCash"
    )
  end

  desc "Build and upload app to TestFlight"
  lane :beta do
    require 'securerandom'
    ENV["ENVFILE"]=".env.production"

    keychain_password = SecureRandom.uuid

    create_keychain(
        name: "ios-build.keychain",
        password: keychain_password,
        default_keychain: "true",
        unlock: "true",
        timeout: "3600",
        add_to_search_list: "true"
    )

    import_certificate(
        certificate_path: "./ios/Certificates.p12",
        keychain_name: "ios-build.keychain",
        keychain_password: keychain_password
    )

    install_provisioning_profile(
        path: "./ios/chat_expensify_appstore.mobileprovision"
    )

    build_app(
        workspace: "./ios/ExpensifyCash.xcworkspace",
        scheme: "ExpensifyCash"
    )

    upload_to_testflight(
        api_key_path: "./ios/ios-fastlane-json-key.json",
        # TODO: Remove skip_waiting_for_build_processing when https://github.com/fastlane/fastlane/issues/18408 is resolved
        # See: https://github.com/Expensify/Expensify.cash/pull/1984 for more information
        skip_waiting_for_build_processing: true,
        # TODO: Set distribute_external back to true when https://github.com/fastlane/fastlane/issues/18408 is resolved
        # See: https://github.com/Expensify/Expensify.cash/pull/1984 for more information
        distribute_external: false,
        # TODO: Set reject_build_waiting_for_review back to true when https://github.com/fastlane/fastlane/issues/18408 is resolved
        # See: https://github.com/Expensify/Expensify.cash/pull/1984 for more information
        reject_build_waiting_for_review: false,
        changelog: "Thank you for beta testing Expensify.cash, this version includes bug fixes and improvements.",
        groups: ["Beta"],
        demo_account_required: true,
        beta_app_review_info: {
            contact_email: ENV["APPLE_CONTACT_EMAIL"],
            contact_first_name: "Andrew",
            contact_last_name: "Gable",
            contact_phone: ENV["APPLE_CONTACT_PHONE"],
            demo_account_name: ENV["APPLE_DEMO_EMAIL"],
            demo_account_password: ENV["APPLE_DEMO_PASSWORD"],
            notes: "Use the account provided. Thank you for the review."
        }
    )

    upload_symbols_to_crashlytics(
      dsym_path: lane_context[SharedValues::DSYM_OUTPUT_PATH],
      gsp_path: "./ios/GoogleService-Info.plist",
      binary_path: "./ios/Pods/FirebaseCrashlytics/upload-symbols"
    )
  end

  desc "Move app to App Store Review"
  lane :production do
    deliver(
      api_key_path: "./ios/ios-fastlane-json-key.json",
      build_number: ENV["VERSION"],
      submit_for_review: true,
      automatic_release: false,
      skip_metadata: true,
      skip_screenshots: true,
      skip_binary_upload: true,
      precheck_include_in_app_purchases: false,
      submission_information: {
        add_id_info_uses_idfa: false
      }
    )
  end
end
