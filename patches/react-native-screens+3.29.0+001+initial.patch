diff --git a/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt b/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
index d9e0e58..2d946c4 100644
--- a/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
+++ b/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
@@ -3,7 +3,6 @@ package com.swmansion.rnscreens
 import android.view.ViewGroup
 import androidx.annotation.UiThread
 import com.facebook.react.bridge.ReactContext
-import com.facebook.react.bridge.ReadableMap
 import com.facebook.react.bridge.WritableMap
 import com.facebook.react.bridge.WritableNativeMap
 import com.facebook.react.uimanager.FabricViewStateManager
@@ -13,6 +12,9 @@ import kotlin.math.abs
 abstract class FabricEnabledViewGroup constructor(context: ReactContext?) : ViewGroup(context), FabricViewStateManager.HasFabricViewStateManager {
     private val mFabricViewStateManager: FabricViewStateManager = FabricViewStateManager()
 
+    private var lastSetWidth = 0f
+    private var lastSetHeight = 0f
+
     override fun getFabricViewStateManager(): FabricViewStateManager {
         return mFabricViewStateManager
     }
@@ -28,17 +30,16 @@ abstract class FabricEnabledViewGroup constructor(context: ReactContext?) : View
 
         // Check incoming state values. If they're already the correct value, return early to prevent
         // infinite UpdateState/SetState loop.
-        val currentState: ReadableMap? = mFabricViewStateManager.getStateData()
-        if (currentState != null) {
-            val delta = 0.9f
-            val stateFrameHeight: Float = if (currentState.hasKey("frameHeight")) currentState.getDouble("frameHeight").toFloat() else 0f
-            val stateFrameWidth: Float = if (currentState.hasKey("frameWidth")) currentState.getDouble("frameWidth").toFloat() else 0f
-            if (abs(stateFrameWidth - realWidth) < delta &&
-                abs(stateFrameHeight - realHeight) < delta
-            ) {
-                return
-            }
+        val delta = 0.9f
+        if (abs(lastSetWidth - realWidth) < delta &&
+            abs(lastSetHeight - realHeight) < delta
+        ) {
+            return
         }
+
+        lastSetWidth = realWidth
+        lastSetHeight = realHeight
+
         mFabricViewStateManager.setState {
             val map: WritableMap = WritableNativeMap()
             map.putDouble("frameWidth", realWidth.toDouble())
