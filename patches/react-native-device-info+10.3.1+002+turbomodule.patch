diff --git a/node_modules/react-native-device-info/README.md b/node_modules/react-native-device-info/README.md
index 43f5292..962ed46 100644
--- a/node_modules/react-native-device-info/README.md
+++ b/node_modules/react-native-device-info/README.md
@@ -194,6 +194,7 @@ The example app in this repository shows an example usage of every single API, c
 | [isHeadphonesConnected()](#isHeadphonesConnected)                 | `Promise<boolean>`  |  ✅  |   ✅    |   ❌    | ❌  |
 | [isPinOrFingerprintSet()](#ispinorfingerprintset)                 | `Promise<boolean>`  |  ✅  |   ✅    |   ✅    | ❌  |
 | [isTablet()](#istablet)                                           | `boolean`           |  ✅  |   ✅    |   ✅    | ❌  |
+| [isDisplayZoomed()](#isdisplayzoomed)                             | `boolean`           |  ✅  |   ❌    |   ❌    | ❌  |
 | [isTabletMode()](#istabletmode)                                   | `Promise<bool>`     |  ❌  |   ❌    |   ✅    | ❌  |
 | [supported32BitAbis()](#supported32BitAbis)                       | `Promise<string[]>` |  ❌  |   ✅    |   ❌    | ❌  |
 | [supported64BitAbis()](#supported64BitAbis)                       | `Promise<string[]>` |  ❌  |   ✅    |   ❌    | ❌  |
@@ -1211,6 +1212,19 @@ let isTablet = DeviceInfo.isTablet();
 
 ---
 
+### isDisplayZoomed()
+
+Tells if the user changed Display Zoom to Zoomed
+
+#### Examples
+
+```js
+let isDisplayZoomed = DeviceInfo.isDisplayZoomed();
+// true
+```
+
+---
+
 ### isTabletMode()
 
 Tells if the device is in tablet mode.
diff --git a/node_modules/react-native-device-info/RNDeviceInfo.podspec b/node_modules/react-native-device-info/RNDeviceInfo.podspec
index d07bbad..c7a80fd 100644
--- a/node_modules/react-native-device-info/RNDeviceInfo.podspec
+++ b/node_modules/react-native-device-info/RNDeviceInfo.podspec
@@ -2,6 +2,8 @@ require 'json'
 
 package = JSON.parse(File.read(File.join(__dir__, 'package.json')))
 
+fabric_enabled = ENV['RCT_NEW_ARCH_ENABLED'] == '1'
+
 Pod::Spec.new do |s|
   s.name         = "RNDeviceInfo"
   s.version      = package['version']
@@ -15,7 +17,13 @@ Pod::Spec.new do |s|
   s.tvos.deployment_target = '10.0'
 
   s.source       = { :git => "https://github.com/react-native-device-info/react-native-device-info.git", :tag => "v#{s.version}" }
-  s.source_files  = "ios/**/*.{h,m}"
+  s.source_files  = "ios/**/*.{h,m,mm}"
+
+  if fabric_enabled
+    install_modules_dependencies(s)
+  else
+    s.platforms = { :ios => "9.0", :tvos => "9.0" }
 
-  s.dependency 'React-Core'
+    s.dependency "React-Core"
+  end
 end
diff --git a/node_modules/react-native-device-info/android/build.gradle b/node_modules/react-native-device-info/android/build.gradle
index de22598..9bfea4b 100644
--- a/node_modules/react-native-device-info/android/build.gradle
+++ b/node_modules/react-native-device-info/android/build.gradle
@@ -21,7 +21,58 @@ def safeExtGet(prop, fallback) {
     rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
 }
 
+
+def resolveReactNativeDirectory() {
+    // monorepo workaround
+    // react-native can be hoisted or in project's own node_modules
+    def reactNativeFromProjectNodeModules = file("${rootProject.projectDir}/../node_modules/react-native")
+    if (reactNativeFromProjectNodeModules.exists()) {
+        return reactNativeFromProjectNodeModules
+    }
+
+    def reactNativeFromNodeModulesWithLibrary = file("${projectDir}/../../react-native")
+    if (reactNativeFromNodeModulesWithLibrary.exists()) {
+        return reactNativeFromNodeModulesWithLibrary
+    }
+
+    throw new Exception(
+            "[react-native-clipboard] Unable to resolve react-native location in " +
+                    "node_modules. You should add project extension property (in app/build.gradle) " +
+                    "`REACT_NATIVE_NODE_MODULES_DIR` with path to react-native."
+    )
+}
+
+def REACT_NATIVE_DIR = resolveReactNativeDirectory()
+
+def reactProperties = new Properties()
+file("$REACT_NATIVE_DIR/ReactAndroid/gradle.properties").withInputStream { reactProperties.load(it) }
+
+def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.startsWith("0.0.0-") ? 1000 : REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
+
+if (isNewArchitectureEnabled()) {
+    apply plugin: "com.facebook.react"
+}
+
 android {
+
+    // Used to override the NDK path/version on internal CI or by allowing
+    // users to customize the NDK path/version from their root project (e.g. for M1 support)
+    if (rootProject.hasProperty("ndkPath")) {
+        ndkPath rootProject.ext.ndkPath
+    }
+    if (rootProject.hasProperty("ndkVersion")) {
+        ndkVersion rootProject.ext.ndkVersion
+    }
+
     compileSdkVersion safeExtGet('compileSdkVersion', 30)
 
     defaultConfig {
@@ -37,6 +88,14 @@ android {
     testOptions {
         unitTests.returnDefaultValues = true
     }
+
+    sourceSets.main {
+        java {
+            if (!isNewArchitectureEnabled()) {
+                srcDirs += 'src/paper/java'
+            }
+        }
+    }
 }
 
 repositories {
@@ -49,7 +108,12 @@ repositories {
 }
 
 dependencies {
-  implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
+  if (isNewArchitectureEnabled() && REACT_NATIVE_MINOR_VERSION < 71) {
+    implementation project(":ReactAndroid")
+  } else {
+    //noinspection GradleDynamicVersion
+    implementation 'com.facebook.react:react-native:+'
+  }
   implementation "com.android.installreferrer:installreferrer:${safeExtGet('installReferrerVersion', '1.1.2')}"
   def firebaseBomVersion = safeExtGet("firebaseBomVersion", null)
   def firebaseIidVersion = safeExtGet('firebaseIidVersion', null)
diff --git a/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfo.java b/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfo.java
deleted file mode 100644
index e9a08db..0000000
--- a/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfo.java
+++ /dev/null
@@ -1,39 +0,0 @@
-package com.learnium.RNDeviceInfo;
-
-import com.facebook.react.ReactPackage;
-import com.facebook.react.bridge.JavaScriptModule;
-import com.facebook.react.bridge.NativeModule;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.uimanager.ViewManager;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-import javax.annotation.Nonnull;
-
-@SuppressWarnings("unused")
-public class RNDeviceInfo implements ReactPackage {
-
-  @Override
-  @Nonnull
-  public List<NativeModule> createNativeModules(@Nonnull ReactApplicationContext reactContext) {
-    List<NativeModule> modules = new ArrayList<>();
-
-    modules.add(new RNDeviceModule(reactContext));
-
-    return modules;
-  }
-
-  // Deprecated RN 0.47
-  public List<Class<? extends JavaScriptModule>> createJSModules() {
-    return Collections.emptyList();
-  }
-
-  @Override
-  @Nonnull
-  public List<ViewManager> createViewManagers(@Nonnull ReactApplicationContext reactContext) {
-    return Collections.emptyList();
-  }
-
-}
diff --git a/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfoPackage.java b/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfoPackage.java
new file mode 100644
index 0000000..e91e5a2
--- /dev/null
+++ b/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceInfoPackage.java
@@ -0,0 +1,95 @@
+package com.learnium.RNDeviceInfo;
+
+import com.facebook.react.TurboReactPackage;
+import com.facebook.react.bridge.NativeModule;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.module.annotations.ReactModuleList;
+import com.facebook.react.module.model.ReactModuleInfo;
+import com.facebook.react.module.model.ReactModuleInfoProvider;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import com.facebook.react.uimanager.ViewManager;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.annotation.Nonnull;
+
+@ReactModuleList(
+        nativeModules = {
+                RNDeviceModule.class,
+        })
+public class RNDeviceInfoPackage extends TurboReactPackage {
+  @Override
+  @Nonnull
+  public List<NativeModule> createNativeModules(@Nonnull ReactApplicationContext reactContext) {
+    List<NativeModule> modules = new ArrayList<>();
+
+    modules.add(new RNDeviceModule(reactContext));
+
+    return modules;
+  }
+
+  @Override
+  public NativeModule getModule(String name, @Nonnull ReactApplicationContext reactContext) {
+    switch (name) {
+      case RNDeviceModule.NAME:
+        return new RNDeviceModule(reactContext);
+      default:
+        return null;
+    }
+  }
+
+  @Override
+  public ReactModuleInfoProvider getReactModuleInfoProvider() {
+    try {
+      Class<?> reactModuleInfoProviderClass =
+              Class.forName("com.learnium.RNDeviceInfo.RNDeviceInfoPackage$$ReactModuleInfoProvider");
+      return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();
+    } catch (ClassNotFoundException e) {
+      // ReactModuleSpecProcessor does not run at build-time. Create this ReactModuleInfoProvider by
+      // hand.
+      return new ReactModuleInfoProvider() {
+        @Override
+        public Map<String, ReactModuleInfo> getReactModuleInfos() {
+          final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();
+
+          Class<? extends NativeModule>[] moduleList =
+                  new Class[] {
+                          RNDeviceModule.class,
+                  };
+
+          for (Class<? extends NativeModule> moduleClass : moduleList) {
+            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);
+
+            reactModuleInfoMap.put(
+                    reactModule.name(),
+                    new ReactModuleInfo(
+                            reactModule.name(),
+                            moduleClass.getName(),
+                            reactModule.canOverrideExistingModule(),
+                            reactModule.needsEagerInit(),
+                            reactModule.hasConstants(),
+                            reactModule.isCxxModule(),
+                            TurboModule.class.isAssignableFrom(moduleClass)));
+          }
+
+          return reactModuleInfoMap;
+        }
+      };
+    } catch (InstantiationException | IllegalAccessException e) {
+      throw new RuntimeException(
+              "No ReactModuleInfoProvider for com.learnium.RNDeviceInfo.RNDeviceInfoPackage$$ReactModuleInfoProvider", e);
+    }
+  }
+
+  @Override
+  @Nonnull
+  public List<ViewManager> createViewManagers(@Nonnull ReactApplicationContext reactContext) {
+    return Collections.emptyList();
+  }
+
+}
diff --git a/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceModule.java b/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceModule.java
index b01e9d2..9ac1628 100644
--- a/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceModule.java
+++ b/node_modules/react-native-device-info/android/src/main/java/com/learnium/RNDeviceInfo/RNDeviceModule.java
@@ -20,8 +20,6 @@ import android.os.Environment;
 import android.os.PowerManager;
 import android.os.StatFs;
 import android.os.BatteryManager;
-import android.os.Debug;
-import android.os.Process;
 import android.provider.Settings;
 import android.webkit.WebSettings;
 import android.telephony.TelephonyManager;
@@ -35,7 +33,6 @@ import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.WritableArray;
@@ -66,7 +63,7 @@ import static android.os.BatteryManager.BATTERY_STATUS_FULL;
 import static android.provider.Settings.Secure.getString;
 
 @ReactModule(name = RNDeviceModule.NAME)
-public class RNDeviceModule extends ReactContextBaseJavaModule {
+public class RNDeviceModule extends NativeDeviceInfoModuleSpec {
   public static final String NAME = "RNDeviceInfo";
   private final DeviceTypeResolver deviceTypeResolver;
   private final DeviceIdResolver deviceIdResolver;
@@ -177,39 +174,13 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
     return null;
   }
 
-  @Override
-  public Map<String, Object> getConstants() {
-    String appVersion, buildNumber, appName;
-
-    try {
-      appVersion = getPackageInfo().versionName;
-      buildNumber = Integer.toString(getPackageInfo().versionCode);
-      appName = getReactApplicationContext().getApplicationInfo().loadLabel(getReactApplicationContext().getPackageManager()).toString();
-    } catch (Exception e) {
-      appVersion = "unknown";
-      buildNumber = "unknown";
-      appName = "unknown";
-    }
-
-    final Map<String, Object> constants = new HashMap<>();
-
-    constants.put("deviceId", Build.BOARD);
-    constants.put("bundleId", getReactApplicationContext().getPackageName());
-    constants.put("systemName", "Android");
-    constants.put("systemVersion", Build.VERSION.RELEASE);
-    constants.put("appVersion", appVersion);
-    constants.put("buildNumber", buildNumber);
-    constants.put("isTablet", deviceTypeResolver.isTablet());
-    constants.put("appName", appName);
-    constants.put("brand", Build.BRAND);
-    constants.put("model", Build.MODEL);
-    constants.put("deviceType", deviceTypeResolver.getDeviceType().getValue());
-
-    return constants;
+  @ReactMethod
+  public void addListener(String eventName) {
+    // Keep: Required for RN built in Event Emitter Calls.
   }
 
   @ReactMethod
-  public void addListener(String eventName) {
+  public void removeListeners(double count) {
     // Keep: Required for RN built in Event Emitter Calls.
   }
 
@@ -252,7 +223,7 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
   }
 
   @ReactMethod(isBlockingSynchronousMethod = true)
-  public float getFontScaleSync() { return getReactApplicationContext().getResources().getConfiguration().fontScale; }
+  public double getFontScaleSync() { return getReactApplicationContext().getResources().getConfiguration().fontScale; }
   @ReactMethod
   public void getFontScale(Promise p) { p.resolve(getFontScaleSync()); }
 
@@ -265,6 +236,68 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
     System.err.println("Unable to determine keyguard status. KeyguardManager was null");
     return false;
   }
+
+  @Override
+  public void isMouseConnected(Promise promise) {
+    promise.reject("DeviceInfo:isMouseConnected", "isMouseConnected is not supported on Android");
+  }
+
+  @Override
+  public boolean isMouseConnectedSync() {
+    return false;
+  }
+
+  @Override
+  public void isKeyboardConnected(Promise promise) {
+    promise.reject("DeviceInfo:isKeyboardConnected", "isKeyboardConnected is not supported on Android");
+  }
+
+  @Override
+  public boolean isKeyboardConnectedSync() {
+    return false;
+  }
+
+  @Override
+  public void isTabletMode(Promise promise) {
+promise.reject("DeviceInfo:isTabletMode", "isTabletMode is not supported on Android");
+  }
+
+  @Override
+  public void syncUniqueId(Promise promise) {
+promise.reject("DeviceInfo:syncUniqueId", "syncUniqueId is not supported on Android");
+  }
+
+  @Override
+  protected Map<String, Object> getTypedExportedConstants() {
+    String appVersion, buildNumber, appName;
+
+    try {
+      appVersion = getPackageInfo().versionName;
+      buildNumber = Integer.toString(getPackageInfo().versionCode);
+      appName = getReactApplicationContext().getApplicationInfo().loadLabel(getReactApplicationContext().getPackageManager()).toString();
+    } catch (Exception e) {
+      appVersion = "unknown";
+      buildNumber = "unknown";
+      appName = "unknown";
+    }
+
+    final Map<String, Object> constants = new HashMap<>();
+
+    constants.put("deviceId", Build.BOARD);
+    constants.put("bundleId", getReactApplicationContext().getPackageName());
+    constants.put("systemName", "Android");
+    constants.put("systemVersion", Build.VERSION.RELEASE);
+    constants.put("appVersion", appVersion);
+    constants.put("buildNumber", buildNumber);
+    constants.put("isTablet", deviceTypeResolver.isTablet());
+    constants.put("appName", appName);
+    constants.put("brand", Build.BRAND);
+    constants.put("model", Build.MODEL);
+    constants.put("deviceType", deviceTypeResolver.getDeviceType().getValue());
+
+    return constants;
+  }
+
   @ReactMethod
   public void isPinOrFingerprintSet(Promise p) { p.resolve(isPinOrFingerprintSetSync()); }
 
@@ -737,6 +770,12 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
 
   @ReactMethod(isBlockingSynchronousMethod = true)
   public String getDeviceSync() {  return Build.DEVICE; }
+
+  @Override
+  public void getDeviceToken(Promise promise) {
+    promise.reject("DeviceInfo:getDeviceToken", "getDeviceToken is not supported on Android");
+  }
+
   @ReactMethod
   public void getDevice(Promise p) { p.resolve(getDeviceSync()); }
 
@@ -746,7 +785,7 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
   public void getBuildId(Promise p) { p.resolve(getBuildIdSync()); }
 
   @ReactMethod(isBlockingSynchronousMethod = true)
-  public int getApiLevelSync() { return Build.VERSION.SDK_INT; }
+  public double getApiLevelSync() { return Build.VERSION.SDK_INT; }
   @ReactMethod
   public void getApiLevel(Promise p) { p.resolve(getApiLevelSync()); }
 
@@ -858,11 +897,11 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
   public void getBaseOs(Promise p) { p.resolve(getBaseOsSync()); }
 
   @ReactMethod(isBlockingSynchronousMethod = true)
-  public String getPreviewSdkIntSync() {
+  public double getPreviewSdkIntSync() {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-      return Integer.toString(Build.VERSION.PREVIEW_SDK_INT);
+      return Build.VERSION.PREVIEW_SDK_INT;
     }
-    return "unknown";
+    return -1;
   }
   @ReactMethod
   public void getPreviewSdkInt(Promise p) { p.resolve(getPreviewSdkIntSync()); }
@@ -889,6 +928,17 @@ public class RNDeviceModule extends ReactContextBaseJavaModule {
       return System.getProperty("http.agent");
     }
   }
+
+  @Override
+  public void getBrightness(Promise promise) {
+    promise.reject("DeviceInfo:getBrightness", "getBrightness is not supported on Android");
+  }
+
+  @Override
+  public double getBrightnessSync() {
+    return 0;
+  }
+
   @ReactMethod
   public void getUserAgent(Promise p) { p.resolve(getUserAgentSync()); }
 
diff --git a/node_modules/react-native-device-info/android/src/paper/java/com/learnium/RNDeviceInfo/NativeDeviceInfoModuleSpec.java b/node_modules/react-native-device-info/android/src/paper/java/com/learnium/RNDeviceInfo/NativeDeviceInfoModuleSpec.java
new file mode 100644
index 0000000..5aad02a
--- /dev/null
+++ b/node_modules/react-native-device-info/android/src/paper/java/com/learnium/RNDeviceInfo/NativeDeviceInfoModuleSpec.java
@@ -0,0 +1,565 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.learnium.RNDeviceInfo;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReactModuleWithSpec;
+import com.facebook.react.bridge.WritableArray;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.common.build.ReactBuildConfig;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import javax.annotation.Nullable;
+
+public abstract class NativeDeviceInfoModuleSpec extends ReactContextBaseJavaModule implements ReactModuleWithSpec, TurboModule {
+  public NativeDeviceInfoModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPowerState(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getPowerStateSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSupported32BitAbis(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableArray getSupported32BitAbisSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSupported64BitAbis(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableArray getSupported64BitAbisSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSupportedAbis(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableArray getSupportedAbisSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSystemManufacturer(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getSystemManufacturerSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getAndroidId(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getAndroidIdSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getApiLevel(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getApiLevelSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getAvailableLocationProviders(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getAvailableLocationProvidersSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getBaseOs(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getBaseOsSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getBatteryLevel(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getBatteryLevelSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getBootloader(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getBootloaderSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getBuildId(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getBuildIdSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getCarrier(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getCarrierSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getCodename(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getCodenameSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getDevice(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getDeviceName(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getDeviceNameSync();
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getDeviceSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getDeviceToken(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getDisplay(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getDisplaySync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getFingerprint(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getFingerprintSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getFirstInstallTime(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getFirstInstallTimeSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getFontScale(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getFontScaleSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getFreeDiskStorage(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getFreeDiskStorageOld(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getFreeDiskStorageSync();
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getFreeDiskStorageOldSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getHardware(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getHardwareSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getHost(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getHostSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getIncremental(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getIncrementalSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getInstallerPackageName(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getInstallerPackageNameSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getInstallReferrer(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getInstallReferrerSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getInstanceId(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getInstanceIdSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getIpAddress(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getIpAddressSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getLastUpdateTime(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getLastUpdateTimeSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getMacAddress(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getMacAddressSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getMaxMemory(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getMaxMemorySync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPhoneNumber(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getPhoneNumberSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPreviewSdkInt(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getPreviewSdkIntSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getProduct(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getProductSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSecurityPatch(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getSecurityPatchSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSerialNumber(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getSerialNumberSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getSystemAvailableFeatures(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableArray getSystemAvailableFeaturesSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getTags(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getTagsSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getTotalDiskCapacity(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getTotalDiskCapacityOld(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getTotalDiskCapacitySync();
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getTotalDiskCapacityOldSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getTotalMemory(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getTotalMemorySync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getType(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getTypeSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getUniqueId(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getUniqueIdSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getUsedMemory(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getUsedMemorySync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getUserAgent(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract String getUserAgentSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getBrightness(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getBrightnessSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void hasGms(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean hasGmsSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void hasHms(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean hasHmsSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void hasSystemFeature(String feature, Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean hasSystemFeatureSync(String feature);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isAirplaneMode(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isAirplaneModeSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isBatteryCharging(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isBatteryChargingSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isCameraPresent(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isCameraPresentSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isEmulator(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isEmulatorSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isHeadphonesConnected(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isHeadphonesConnectedSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isLocationEnabled(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isLocationEnabledSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isPinOrFingerprintSet(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isPinOrFingerprintSetSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isMouseConnected(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isMouseConnectedSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isKeyboardConnected(Promise promise);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isKeyboardConnectedSync();
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void isTabletMode(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void syncUniqueId(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void addListener(String eventName);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void removeListeners(double count);
+
+  protected abstract Map<String, Object> getTypedExportedConstants();
+
+  @Override
+  @DoNotStrip
+  public final @Nullable Map<String, Object> getConstants() {
+    Map<String, Object> constants = getTypedExportedConstants();
+    if (ReactBuildConfig.DEBUG || ReactBuildConfig.IS_INTERNAL_BUILD) {
+      Set<String> obligatoryFlowConstants = new HashSet<>(Arrays.asList(
+          "appName",
+          "appVersion",
+          "brand",
+          "buildNumber",
+          "bundleId",
+          "deviceId",
+          "deviceType",
+          "isTablet",
+          "model",
+          "systemName",
+          "systemVersion"
+      ));
+      Set<String> optionalFlowConstants = new HashSet<>(Arrays.asList(
+          "isDisplayZoomed"
+      ));
+      Set<String> undeclaredConstants = new HashSet<>(constants.keySet());
+      undeclaredConstants.removeAll(obligatoryFlowConstants);
+      undeclaredConstants.removeAll(optionalFlowConstants);
+      if (!undeclaredConstants.isEmpty()) {
+        throw new IllegalStateException(String.format("Native Module Flow doesn't declare constants: %s", undeclaredConstants));
+      }
+      undeclaredConstants = obligatoryFlowConstants;
+      undeclaredConstants.removeAll(constants.keySet());
+      if (!undeclaredConstants.isEmpty()) {
+        throw new IllegalStateException(String.format("Native Module doesn't fill in constants: %s", undeclaredConstants));
+      }
+    }
+    return constants;
+  }
+}
diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.h b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.h
index f77b052..01def34 100644
--- a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.h
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.h
@@ -9,11 +9,20 @@
 #import <UIKit/UIKit.h>
 #import <AVFoundation/AVFoundation.h>
 #import <sys/utsname.h>
+#ifdef RCT_NEW_ARCH_ENABLED
+#import <rndeviceinfomodule/rndeviceinfomodule.h>
+#else
 #import <React/RCTBridgeModule.h>
+#endif
 #import <React/RCTEventEmitter.h>
 #import <React/RCTLog.h>
 
-@interface RNDeviceInfo : RCTEventEmitter <RCTBridgeModule>
+@interface RNDeviceInfo : RCTEventEmitter
+#ifdef RCT_NEW_ARCH_ENABLED
+                                   <NativeDeviceInfoModuleSpec>
+#else
+                                   <RCTBridgeModule>
+#endif
 
 @property (nonatomic) float lowBatteryThreshold;
 
diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
index 67dbd7a..552a5e7 100644
--- a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
@@ -14,8 +14,9 @@
 #import <React/RCTUtils.h>
 #import "RNDeviceInfo.h"
 #import "DeviceUID.h"
-#import <DeviceCheck/DeviceCheck.h>
+//#import <DeviceCheck/DeviceCheck.h>
 #import "EnvironmentUtil.h"
+#import "RNDeviceInfoHelper.h"
 
 #if !(TARGET_OS_TV)
 #import <WebKit/WebKit.h>
@@ -32,11 +33,6 @@ typedef NS_ENUM(NSInteger, DeviceType) {
 
 #define DeviceTypeValues [NSArray arrayWithObjects: @"Handset", @"Tablet", @"Tv", @"Desktop", @"unknown", nil]
 
-#if !(TARGET_OS_TV)
-@import CoreTelephony;
-@import Darwin.sys.sysctl;
-#endif
-
 @implementation RNDeviceInfo
 {
     bool hasListeners;
@@ -67,6 +63,7 @@ - (NSDictionary *)constantsToExport {
          @"brand": @"Apple",
          @"model": [self getModel],
          @"deviceType": [self getDeviceTypeName],
+         @"isDisplayZoomed": @([self isDisplayZoomed]),
      };
 }
 
@@ -132,7 +129,7 @@ - (DeviceType) getDeviceType
 }
 
 - (NSDictionary *) getStorageDictionary {
-	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
+    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
     return [[NSFileManager defaultManager] attributesOfFileSystemForPath:[paths lastObject] error: nil];
 }
 
@@ -155,10 +152,14 @@ - (NSString *) getDeviceName {
     return self.getDeviceName;
 }
 
-RCT_EXPORT_METHOD(getDeviceName:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getDeviceName:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getDeviceName);
 }
 
+- (BOOL) isDisplayZoomed {
+    return [UIScreen mainScreen].scale != [UIScreen mainScreen].nativeScale;
+}
+
 - (NSString *) getAppName {
     NSString *displayName = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleDisplayName"];
     NSString *bundleName = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleName"];
@@ -324,42 +325,22 @@ - (NSString *) getModel {
 }
 
 - (NSString *) getCarrier {
-#if (TARGET_OS_TV || TARGET_OS_MACCATALYST)
-    return @"unknown";
-#else
-    CTTelephonyNetworkInfo *netinfo = [[CTTelephonyNetworkInfo alloc] init];
-    CTCarrier *carrier = [netinfo subscriberCellularProvider];
-    if (carrier.carrierName != nil) {
-        return carrier.carrierName;
-    }
-    return @"unknown";
-#endif
+    return [RNDeviceInfoHelper getCarrier];
 }
 
 RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(getCarrierSync) {
     return self.getCarrier;
 }
 
-RCT_EXPORT_METHOD(getCarrier:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getCarrier:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getCarrier);
 }
 
 - (NSString *) getBuildId {
-#if TARGET_OS_TV
-    return @"unknown";
-#else
-    size_t bufferSize = 64;
-    NSMutableData *buffer = [[NSMutableData alloc] initWithLength:bufferSize];
-    int status = sysctlbyname("kern.osversion", buffer.mutableBytes, &bufferSize, NULL, 0);
-    if (status != 0) {
-        return @"unknown";
-    }
-    NSString* buildId = [[NSString alloc] initWithCString:buffer.mutableBytes encoding:NSUTF8StringEncoding];
-    return buildId;
-#endif
+    return [RNDeviceInfoHelper getBuildId];
 }
 
-RCT_EXPORT_METHOD(getBuildId:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getBuildId:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getBuildId);
 }
 
@@ -375,11 +356,11 @@ - (NSString *) uniqueId {
     return self.uniqueId;
 }
 
-RCT_EXPORT_METHOD(getUniqueId:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getUniqueId:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.uniqueId);
 }
 
-RCT_EXPORT_METHOD(syncUniqueId:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(syncUniqueId:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve([DeviceUID syncUid]);
 }
 
@@ -407,7 +388,7 @@ - (BOOL) isEmulator {
     return @(self.isEmulator);
 }
 
-RCT_EXPORT_METHOD(isEmulator:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(isEmulator:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.isEmulator));
 }
 
@@ -419,28 +400,29 @@ - (BOOL) isTablet {
     }
 }
 
-RCT_EXPORT_METHOD(getDeviceToken:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getDeviceToken:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     if (@available(iOS 11.0, *)) {
         if (TARGET_IPHONE_SIMULATOR) {
             reject(@"NOT AVAILABLE", @"Device check is only available for physical devices", nil);
             return;
         }
 
-        DCDevice *device = DCDevice.currentDevice;
-
-        if ([device isSupported]) {
-            [DCDevice.currentDevice generateTokenWithCompletionHandler:^(NSData * _Nullable token, NSError * _Nullable error) {
-                if (error) {
-                    reject(@"ERROR GENERATING TOKEN", error.localizedDescription, error);
-                    return;
-                }
-
-                resolve([token base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed]);
-            }];
-        } else {
-            reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
-            return;
-        }
+        reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
+//        DCDevice *device = DCDevice.currentDevice;
+//
+//        if ([device isSupported]) {
+//            [DCDevice.currentDevice generateTokenWithCompletionHandler:^(NSData * _Nullable token, NSError * _Nullable error) {
+//                if (error) {
+//                    reject(@"ERROR GENERATING TOKEN", error.localizedDescription, error);
+//                    return;
+//                }
+//
+//                resolve([token base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed]);
+//            }];
+//        } else {
+//            reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
+//            return;
+//        }
     } else {
         reject(@"NOT AVAILABLE", @"Device check is only available for iOS > 11", nil);
         return;
@@ -484,7 +466,7 @@ - (float) getFontScale {
     return @(self.getFontScale);
 }
 
-RCT_EXPORT_METHOD(getFontScale:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getFontScale:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getFontScale));
 }
 
@@ -496,7 +478,7 @@ - (double) getTotalMemory {
     return @(self.getTotalMemory);
 }
 
-RCT_EXPORT_METHOD(getTotalMemory:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getTotalMemory:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getTotalMemory));
 }
 
@@ -515,7 +497,7 @@ - (double) getTotalDiskCapacity {
     return @(self.getTotalDiskCapacity);
 }
 
-RCT_EXPORT_METHOD(getTotalDiskCapacity:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getTotalDiskCapacity:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getTotalDiskCapacity));
 }
 
@@ -534,7 +516,7 @@ - (double) getFreeDiskStorage {
     return @(self.getFreeDiskStorage);
 }
 
-RCT_EXPORT_METHOD(getFreeDiskStorage:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getFreeDiskStorage:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getFreeDiskStorage));
 }
 
@@ -553,7 +535,7 @@ - (NSArray *) getSupportedAbis {
     return self.getSupportedAbis;
 }
 
-RCT_EXPORT_METHOD(getSupportedAbis:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getSupportedAbis:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getSupportedAbis);
 }
 
@@ -602,7 +584,7 @@ - (NSString *) getIpAddress {
     return self.getIpAddress;
 }
 
-RCT_EXPORT_METHOD(getIpAddress:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getIpAddress:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getIpAddress);
 }
 
@@ -619,7 +601,7 @@ - (BOOL) isPinOrFingerprintSet {
     return @(self.isPinOrFingerprintSet);
 }
 
-RCT_EXPORT_METHOD(isPinOrFingerprintSet:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(isPinOrFingerprintSet:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.isPinOrFingerprintSet));
 }
 
@@ -688,7 +670,7 @@ - (NSDictionary *) powerState {
     return self.powerState;
 }
 
-RCT_EXPORT_METHOD(getPowerState:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getPowerState:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.powerState);
 }
 
@@ -704,7 +686,7 @@ - (float) getBatteryLevel {
     return @(self.getBatteryLevel);
 }
 
-RCT_EXPORT_METHOD(getBatteryLevel:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getBatteryLevel:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getBatteryLevel));
 }
 
@@ -716,7 +698,7 @@ - (BOOL) isBatteryCharging {
     return @(self.isBatteryCharging);
 }
 
-RCT_EXPORT_METHOD(isBatteryCharging:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(isBatteryCharging:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.isBatteryCharging));
 }
 
@@ -728,7 +710,7 @@ - (BOOL) isLocationEnabled {
     return @(self.isLocationEnabled);
 }
 
-RCT_EXPORT_METHOD(isLocationEnabled:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(isLocationEnabled:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.isLocationEnabled));
 }
 
@@ -752,7 +734,7 @@ - (BOOL) isHeadphonesConnected {
     return @(self.isHeadphonesConnected);
 }
 
-RCT_EXPORT_METHOD(isHeadphonesConnected:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(isHeadphonesConnected:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.isHeadphonesConnected));
 }
 
@@ -770,7 +752,7 @@ - (unsigned long) getUsedMemory {
     return (unsigned long)info.resident_size;
 }
 
-RCT_EXPORT_METHOD(getUsedMemory:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getUsedMemory:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     unsigned long usedMemory = self.getUsedMemory;
     if (usedMemory == -1) {
         reject(@"fetch_error", @"task_info failed", nil);
@@ -783,7 +765,7 @@ - (unsigned long) getUsedMemory {
     return @(self.getUsedMemory);
 }
 
-RCT_EXPORT_METHOD(getUserAgent:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getUserAgent:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
 #if TARGET_OS_TV
     reject(@"not_available_error", @"not available on tvOS", nil);
 #else
@@ -827,7 +809,7 @@ - (NSDictionary *) getAvailableLocationProviders {
     return self.getAvailableLocationProviders;
 }
 
-RCT_EXPORT_METHOD(getAvailableLocationProviders:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getAvailableLocationProviders:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getAvailableLocationProviders);
 }
 
@@ -837,7 +819,7 @@ - (NSDictionary *) getAvailableLocationProviders {
     return [EnvironmentValues objectAtIndex:[EnvironmentUtil currentAppEnvironment]];
 }
 
-RCT_EXPORT_METHOD(getInstallerPackageName:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getInstallerPackageName:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve([EnvironmentValues objectAtIndex:[EnvironmentUtil currentAppEnvironment]]);
 }
 
@@ -853,7 +835,7 @@ - (NSNumber *) getBrightness {
     return self.getBrightness;
 }
 
-RCT_EXPORT_METHOD(getBrightness:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getBrightness:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(self.getBrightness);
 }
 
@@ -861,10 +843,415 @@ - (NSNumber *) getBrightness {
     return @(self.getFirstInstallTime);
 }
 
-RCT_EXPORT_METHOD(getFirstInstallTime:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
+RCT_EXPORT_METHOD(getFirstInstallTime:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject) {
     resolve(@(self.getFirstInstallTime));
 }
 
+- (void)getAndroidId:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getAndroidId", @"getAndroidId is not supported on iOS", nil);
+}
+
+
+- (NSString *)getAndroidIdSync {
+    RCTLogError(@"DeviceInfo:getAndroidIdSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getApiLevel:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getApiLevel", @"getApiLevel is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getApiLevelSync {
+    RCTLogError(@"DeviceInfo:getApiLevelSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getBaseOs:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getBaseOs", @"getBaseOs is not supported on iOS", nil);
+}
+
+
+- (NSString *)getBaseOsSync {
+    RCTLogError(@"DeviceInfo:getBaseOsSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getBootloader:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getBootloader", @"getBootloader is not supported on iOS", nil);
+}
+
+
+- (NSString *)getBootloaderSync {
+    RCTLogError(@"DeviceInfo:getBootloaderSync is not supported on iOS");
+    return nil;
+}
+
+- (void)getCodename:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getCodename", @"getCodename is not supported on iOS", nil);
+}
+
+
+- (NSString *)getCodenameSync {
+    RCTLogError(@"DeviceInfo:getCodenameSync is not supported on iOS");
+    return nil;
+}
+
+
+- (NSDictionary *)getConstants {
+    return [self constantsToExport];
+}
+
+
+- (void)getDevice:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getDevice", @"getDevice is not supported on iOS", nil);
+}
+
+- (NSString *)getDeviceSync {
+    RCTLogError(@"DeviceInfo:getDeviceSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getDisplay:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getDisplay", @"getDisplay is not supported on iOS", nil);
+}
+
+
+- (NSString *)getDisplaySync {
+    RCTLogError(@"DeviceInfo:getDisplaySync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getFingerprint:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getFingerprint", @"getFingerprint is not supported on iOS", nil);
+}
+
+
+- (NSString *)getFingerprintSync {
+    RCTLogError(@"DeviceInfo:getFingerprintSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getFreeDiskStorageOld:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getFreeDiskStorageOld", @"getFreeDiskStorageOld is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getFreeDiskStorageOldSync {
+    RCTLogError(@"DeviceInfo:getFreeDiskStorageOldSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getHardware:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getHardware", @"getHardware is not supported on iOS", nil);
+}
+
+
+- (NSString *)getHardwareSync {
+    RCTLogError(@"DeviceInfo:getHardwareSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getHost:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getHost", @"getHost is not supported on iOS", nil);
+}
+
+
+- (NSString *)getHostSync {
+    RCTLogError(@"DeviceInfo:getHostSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getIncremental:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getIncremental", @"getIncremental is not supported on iOS", nil);
+}
+
+
+- (NSString *)getIncrementalSync {
+    RCTLogError(@"DeviceInfo:getIncrementalSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getInstallReferrer:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getInstallReferrer", @"getInstallReferrer is not supported on iOS", nil);
+}
+
+
+- (NSString *)getInstallReferrerSync {
+    RCTLogError(@"DeviceInfo:getInstallReferrerSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getInstanceId:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getInstanceId", @"getInstanceId is not supported on iOS", nil);
+}
+
+
+- (NSString *)getInstanceIdSync {
+    RCTLogError(@"DeviceInfo:getInstanceIdSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getLastUpdateTime:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getLastUpdateTime", @"getLastUpdateTime is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getLastUpdateTimeSync {
+    RCTLogError(@"DeviceInfo:getLastUpdateTimeSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getMacAddress:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getMacAddress", @"getMacAddress is not supported on iOS", nil);
+}
+
+
+- (NSString *)getMacAddressSync {
+    RCTLogError(@"DeviceInfo:getMacAddressSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getMaxMemory:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getMaxMemory", @"getMaxMemory is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getMaxMemorySync {
+    RCTLogError(@"DeviceInfo:getMaxMemorySync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getPhoneNumber:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getPhoneNumber", @"getPhoneNumber is not supported on iOS", nil);
+}
+
+
+- (NSString *)getPhoneNumberSync {
+    RCTLogError(@"DeviceInfo:getPhoneNumberSync is not supported on iOS");
+    return nil;
+}
+
+- (void)getPreviewSdkInt:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getPreviewSdkInt", @"getPreviewSdkInt is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getPreviewSdkIntSync {
+    RCTLogError(@"DeviceInfo:getPreviewSdkIntSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getProduct:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getProduct", @"getProduct is not supported on iOS", nil);
+}
+
+
+- (NSString *)getProductSync {
+    RCTLogError(@"DeviceInfo:getProductSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getSecurityPatch:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSecurityPatch", @"getSecurityPatch is not supported on iOS", nil);
+}
+
+
+- (NSString *)getSecurityPatchSync {
+    RCTLogError(@"DeviceInfo:getSecurityPatchSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getSerialNumber:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSerialNumber", @"getSerialNumber is not supported on iOS", nil);
+}
+
+
+- (NSString *)getSerialNumberSync {
+    RCTLogError(@"DeviceInfo:getSerialNumberSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getSupported32BitAbis:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSupported32BitAbis", @"getSupported32BitAbis is not supported on iOS", nil);
+}
+
+
+- (NSArray<NSString *> *)getSupported32BitAbisSync {
+    RCTLogError(@"DeviceInfo:getSupported32BitAbisSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getSupported64BitAbis:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSupported64BitAbis", @"getSupported64BitAbis is not supported on iOS", nil);
+}
+
+
+- (NSArray<NSString *> *)getSupported64BitAbisSync {
+    RCTLogError(@"DeviceInfo:getSupported64BitAbisSync is not supported on iOS");
+    return nil;
+}
+
+- (void)getSystemAvailableFeatures:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSystemAvailableFeatures", @"getSystemAvailableFeatures is not supported on iOS", nil);
+}
+
+
+- (NSArray<NSString *> *)getSystemAvailableFeaturesSync {
+    RCTLogError(@"DeviceInfo:getSystemAvailableFeaturesSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getSystemManufacturer:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getSystemManufacturer", @"getSystemManufacturer is not supported on iOS", nil);
+}
+
+
+- (NSString *)getSystemManufacturerSync {
+    RCTLogError(@"DeviceInfo:getSystemManufacturerSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getTags:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getTags", @"getTags is not supported on iOS", nil);
+}
+
+
+- (NSString *)getTagsSync {
+    RCTLogError(@"DeviceInfo:getTagsSync is not supported on iOS");
+    return nil;
+}
+
+- (void)getTotalDiskCapacityOld:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getTotalDiskCapacityOld", @"getTotalDiskCapacityOld is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)getTotalDiskCapacityOldSync {
+    RCTLogError(@"DeviceInfo:getTotalDiskCapacityOldSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)getType:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:getType", @"getType is not supported on iOS", nil);
+}
+
+
+- (NSString *)getTypeSync {
+    RCTLogError(@"DeviceInfo:getTypeSync is not supported on iOS");
+    return nil;
+}
+
+- (NSString *)getUserAgentSync {
+    RCTLogError(@"DeviceInfo:getUserAgentSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)hasGms:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:hasGms", @"hasGms is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)hasGmsSync {
+    RCTLogError(@"DeviceInfo:hasGmsSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)hasHms:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:hasHms", @"hasHms is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)hasHmsSync {
+    RCTLogError(@"DeviceInfo:hasHmsSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)hasSystemFeature:(NSString *)feature resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:hasSystemFeature", @"hasSystemFeature is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)hasSystemFeatureSync:(NSString *)feature {
+    RCTLogError(@"DeviceInfo:hasSystemFeatureSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)isAirplaneMode:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:isAirplaneMode", @"isAirplaneMode is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)isAirplaneModeSync {
+    RCTLogError(@"DeviceInfo:isAirplaneModeSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)isCameraPresent:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:isCameraPresent", @"isCameraPresent is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)isCameraPresentSync {
+    RCTLogError(@"DeviceInfo:isCameraPresentSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)isKeyboardConnected:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:isKeyboardConnected", @"isKeyboardConnected is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)isKeyboardConnectedSync {
+    RCTLogError(@"DeviceInfo:isKeyboardConnectedSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)isMouseConnected:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:isMouseConnected", @"isMouseConnected is not supported on iOS", nil);
+}
+
+
+- (NSNumber *)isMouseConnectedSync {
+    RCTLogError(@"DeviceInfo:isMouseConnectedSync is not supported on iOS");
+    return nil;
+}
+
+
+- (void)isTabletMode:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    reject(@"DeviceInfo:isTabletMode", @"isTabletMode is not supported on iOS", nil);
+}
+
 - (long long) getFirstInstallTime {
     NSURL* urlToDocumentsFolder = [[[NSFileManager defaultManager] URLsForDirectory:NSDocumentDirectory inDomains:NSUserDomainMask] lastObject];
     NSError *error;
@@ -879,4 +1266,12 @@ - (void)dealloc
     [[NSNotificationCenter defaultCenter] removeObserver:self];
 }
 
+#ifdef RCT_NEW_ARCH_ENABLED
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:
+    (const facebook::react::ObjCTurboModule::InitParams &)params
+{
+    return std::make_shared<facebook::react::NativeDeviceInfoModuleSpecJSI>(params);
+}
+#endif
+
 @end
diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.h b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.h
new file mode 100644
index 0000000..71e7a26
--- /dev/null
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.h
@@ -0,0 +1,6 @@
+#import <Foundation/Foundation.h>
+
+@interface RNDeviceInfoHelper : NSObject
++ (NSString *)getCarrier;
++ (NSString *)getBuildId;
+@end
diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.m b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.m
new file mode 100644
index 0000000..398bc04
--- /dev/null
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfoHelper.m
@@ -0,0 +1,38 @@
+#import "RNDeviceInfoHelper.h"
+
+#if !(TARGET_OS_TV)
+@import CoreTelephony;
+@import Darwin.sys.sysctl;
+#endif
+
+@implementation RNDeviceInfoHelper
+
++ (NSString *)getCarrier {
+#if (TARGET_OS_TV || TARGET_OS_MACCATALYST)
+    return @"unknown";
+#else
+    CTTelephonyNetworkInfo *netinfo = [[CTTelephonyNetworkInfo alloc] init];
+    CTCarrier *carrier = [netinfo subscriberCellularProvider];
+    if (carrier.carrierName != nil) {
+        return carrier.carrierName;
+    }
+    return @"unknown";
+#endif
+}
+
++ (NSString *)getBuildId {
+#if TARGET_OS_TV
+    return @"unknown";
+#else
+    size_t bufferSize = 64;
+    NSMutableData *buffer = [[NSMutableData alloc] initWithLength:bufferSize];
+    int status = sysctlbyname("kern.osversion", buffer.mutableBytes, &bufferSize, NULL, 0);
+    if (status != 0) {
+        return @"unknown";
+    }
+    NSString* buildId = [[NSString alloc] initWithCString:(const char *)buffer.mutableBytes encoding:NSUTF8StringEncoding];
+    return buildId;
+#endif
+}
+
+@end
diff --git a/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js b/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js
new file mode 100644
index 0000000..f5d7b6c
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js
@@ -0,0 +1,13 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.default = void 0;
+
+var _reactNative = require("react-native");
+
+var _default = _reactNative.TurboModuleRegistry.get('RNDeviceInfo');
+
+exports.default = _default;
+//# sourceMappingURL=NativeDeviceInfoModule.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js.map b/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js.map
new file mode 100644
index 0000000..e0d9c9d
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/commonjs/fabric/NativeDeviceInfoModule.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["NativeDeviceInfoModule.ts"],"names":["TurboModuleRegistry","getEnforcing"],"mappings":";;;;;;;AAAA;;eAuJeA,iCAAoBC,YAApB,CAAuC,cAAvC,C","sourcesContent":["import { TurboModuleRegistry, TurboModule } from 'react-native';\n\nexport interface Spec extends TurboModule {\n  getPowerState: () => Promise<{\n    batteryLevel: number;\n    batteryState: string;\n    lowPowerMode: boolean;\n  }>;\n  getPowerStateSync: () => {\n    batteryLevel: number;\n    batteryState: string;\n    lowPowerMode: boolean;\n  }; // should be PowerState\n  getSupported32BitAbis: () => Promise<string[]>;\n  getSupported32BitAbisSync: () => string[];\n  getSupported64BitAbis: () => Promise<string[]>;\n  getSupported64BitAbisSync: () => string[];\n  getSupportedAbis: () => Promise<string[]>;\n  getSupportedAbisSync: () => string[];\n  getSystemManufacturer: () => Promise<string>;\n  getSystemManufacturerSync: () => string;\n  getAndroidId: () => Promise<string>;\n  getAndroidIdSync: () => string;\n  getApiLevel: () => Promise<number>;\n  getApiLevelSync: () => number;\n  getAvailableLocationProviders: () => Promise<Object>;\n  getAvailableLocationProvidersSync: () => Object; // should be LocationProviderInfo\n  getBaseOs: () => Promise<string>;\n  getBaseOsSync: () => string;\n  getBatteryLevel: () => Promise<number>;\n  getBatteryLevelSync: () => number;\n  getBootloader: () => Promise<string>;\n  getBootloaderSync: () => string;\n  getBuildId: () => Promise<string>;\n  getBuildIdSync: () => string;\n  getCarrier: () => Promise<string>;\n  getCarrierSync: () => string;\n  getCodename: () => Promise<string>;\n  getCodenameSync: () => string;\n  getDevice: () => Promise<string>;\n  getDeviceName: () => Promise<string>;\n  getDeviceNameSync: () => string;\n  getDeviceSync: () => string;\n  getDeviceToken: () => Promise<string>;\n  getDisplay: () => Promise<string>;\n  getDisplaySync: () => string;\n  getFingerprint: () => Promise<string>;\n  getFingerprintSync: () => string;\n  getFirstInstallTime: () => Promise<number>;\n  getFirstInstallTimeSync: () => number;\n  getFontScale: () => Promise<number>;\n  getFontScaleSync: () => number;\n  getFreeDiskStorage: () => Promise<number>;\n  getFreeDiskStorageOld: () => Promise<number>;\n  getFreeDiskStorageSync: () => number;\n  getFreeDiskStorageOldSync: () => number;\n  getHardware: () => Promise<string>;\n  getHardwareSync: () => string;\n  getHost: () => Promise<string>;\n  getHostSync: () => string;\n  getIncremental: () => Promise<string>;\n  getIncrementalSync: () => string;\n  getInstallerPackageName: () => Promise<string>;\n  getInstallerPackageNameSync: () => string;\n  getInstallReferrer: () => Promise<string>;\n  getInstallReferrerSync: () => string;\n  getInstanceId: () => Promise<string>;\n  getInstanceIdSync: () => string;\n  getIpAddress: () => Promise<string>;\n  getIpAddressSync: () => string;\n  getLastUpdateTime: () => Promise<number>;\n  getLastUpdateTimeSync: () => number;\n  getMacAddress: () => Promise<string>;\n  getMacAddressSync: () => string;\n  getMaxMemory: () => Promise<number>;\n  getMaxMemorySync: () => number;\n  getPhoneNumber: () => Promise<string>;\n  getPhoneNumberSync: () => string;\n  getPreviewSdkInt: () => Promise<number>;\n  getPreviewSdkIntSync: () => number;\n  getProduct: () => Promise<string>;\n  getProductSync: () => string;\n  getSecurityPatch: () => Promise<string>;\n  getSecurityPatchSync: () => string;\n  getSerialNumber: () => Promise<string>;\n  getSerialNumberSync: () => string;\n  getSystemAvailableFeatures: () => Promise<string[]>;\n  getSystemAvailableFeaturesSync: () => string[];\n  getTags: () => Promise<string>;\n  getTagsSync: () => string;\n  getTotalDiskCapacity: () => Promise<number>;\n  getTotalDiskCapacityOld: () => Promise<number>;\n  getTotalDiskCapacitySync: () => number;\n  getTotalDiskCapacityOldSync: () => number;\n  getTotalMemory: () => Promise<number>;\n  getTotalMemorySync: () => number;\n  getType: () => Promise<string>;\n  getTypeSync: () => string;\n  getUniqueId: () => Promise<string>;\n  getUniqueIdSync: () => string;\n  getUsedMemory: () => Promise<number>;\n  getUsedMemorySync: () => number;\n  getUserAgent: () => Promise<string>;\n  getUserAgentSync: () => string;\n  getBrightness: () => Promise<number>;\n  getBrightnessSync: () => number;\n  hasGms: () => Promise<boolean>;\n  hasGmsSync: () => boolean;\n  hasHms: () => Promise<boolean>;\n  hasHmsSync: () => boolean;\n  hasSystemFeature: (feature: string) => Promise<boolean>;\n  hasSystemFeatureSync: (feature: string) => boolean;\n  isAirplaneMode: () => Promise<boolean>;\n  isAirplaneModeSync: () => boolean;\n  isBatteryCharging: () => Promise<boolean>;\n  isBatteryChargingSync: () => boolean;\n  isCameraPresent: () => Promise<boolean>;\n  isCameraPresentSync: () => boolean;\n  isEmulator: () => Promise<boolean>;\n  isEmulatorSync: () => boolean;\n  isHeadphonesConnected: () => Promise<boolean>;\n  isHeadphonesConnectedSync: () => boolean;\n  isLocationEnabled: () => Promise<boolean>;\n  isLocationEnabledSync: () => boolean;\n  isPinOrFingerprintSet: () => Promise<boolean>;\n  isPinOrFingerprintSetSync: () => boolean;\n  isMouseConnected: () => Promise<boolean>;\n  isMouseConnectedSync: () => boolean;\n  isKeyboardConnected: () => Promise<boolean>;\n  isKeyboardConnectedSync: () => boolean;\n  isTabletMode: () => Promise<boolean>;\n  syncUniqueId: () => Promise<string>;\n\n  addListener(eventName: string): void;\n  removeListeners(count: number): void;\n  getConstants(): {\n    appName: string;\n    appVersion: string;\n    brand: string;\n    buildNumber: string;\n    bundleId: string;\n    deviceId: string;\n    deviceType: string;\n    isTablet: boolean;\n    isDisplayZoomed?: boolean;\n    model: string;\n    systemName: string;\n    systemVersion: string;\n  };\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNDeviceInfo');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/index.js b/node_modules/react-native-device-info/lib/commonjs/index.js
index b305e00..46d3643 100644
--- a/node_modules/react-native-device-info/lib/commonjs/index.js
+++ b/node_modules/react-native-device-info/lib/commonjs/index.js
@@ -3,34 +3,43 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.syncUniqueId = syncUniqueId;
+exports.getDeviceSync = exports.getDeviceNameSync = exports.getDeviceName = exports.getDeviceId = exports.getDevice = exports.getCodenameSync = exports.getCodename = exports.getCarrierSync = exports.getCarrier = exports.getBundleId = exports.getBuildNumber = exports.getBuildIdSync = exports.getBuildId = exports.getBrightnessSync = exports.getBrightness = exports.getBrand = exports.getBootloaderSync = exports.getBootloader = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.getBaseOsSync = exports.getBaseOs = exports.getAvailableLocationProvidersSync = exports.getAvailableLocationProviders = exports.getApplicationName = exports.getApiLevelSync = exports.getApiLevel = exports.getAndroidIdSync = exports.getAndroidId = exports.default = void 0;
+exports.getDeviceToken = getDeviceToken;
+exports.getFreeDiskStorage = exports.getFontScaleSync = exports.getFontScale = exports.getFirstInstallTimeSync = exports.getFirstInstallTime = exports.getFingerprintSync = exports.getFingerprint = exports.getDisplaySync = exports.getDisplay = exports.getDeviceTypeSync = exports.getDeviceType = void 0;
+exports.getFreeDiskStorageOld = getFreeDiskStorageOld;
+exports.getFreeDiskStorageOldSync = getFreeDiskStorageOldSync;
+exports.getLastUpdateTimeSync = exports.getLastUpdateTime = exports.getIpAddressSync = exports.getIpAddress = exports.getInstanceIdSync = exports.getInstanceId = exports.getInstallerPackageNameSync = exports.getInstallerPackageName = exports.getInstallReferrerSync = exports.getInstallReferrer = exports.getIncrementalSync = exports.getIncremental = exports.getHostSync = exports.getHost = exports.getHardwareSync = exports.getHardware = exports.getFreeDiskStorageSync = void 0;
 exports.getMacAddress = getMacAddress;
 exports.getMacAddressSync = getMacAddressSync;
+exports.getProductSync = exports.getProduct = exports.getPreviewSdkIntSync = exports.getPreviewSdkInt = exports.getPowerStateSync = exports.getPowerState = exports.getPhoneNumberSync = exports.getPhoneNumber = exports.getModel = exports.getMaxMemorySync = exports.getMaxMemory = exports.getManufacturerSync = exports.getManufacturer = void 0;
 exports.getReadableVersion = getReadableVersion;
-exports.hasNotch = hasNotch;
-exports.hasDynamicIsland = hasDynamicIsland;
+exports.getTotalDiskCapacity = exports.getTagsSync = exports.getTags = exports.getSystemVersion = exports.getSystemName = exports.getSystemAvailableFeaturesSync = exports.getSystemAvailableFeatures = exports.getSerialNumberSync = exports.getSerialNumber = exports.getSecurityPatchSync = exports.getSecurityPatch = void 0;
 exports.getTotalDiskCapacityOld = getTotalDiskCapacityOld;
 exports.getTotalDiskCapacityOldSync = getTotalDiskCapacityOldSync;
-exports.getFreeDiskStorageOld = getFreeDiskStorageOld;
-exports.getFreeDiskStorageOldSync = getFreeDiskStorageOldSync;
-exports.isLandscape = isLandscape;
-exports.isLandscapeSync = isLandscapeSync;
+exports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getUniqueIdSync = exports.getUniqueId = exports.getTypeSync = exports.getType = exports.getTotalMemorySync = exports.getTotalMemory = exports.getTotalDiskCapacitySync = void 0;
+exports.getVersion = exports.getUserAgentSync = exports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getUniqueIdSync = exports.getUniqueId = exports.getTypeSync = exports.getType = exports.getTotalMemorySync = exports.getTotalMemory = exports.getTotalDiskCapacitySync = void 0;
+exports.hasDynamicIsland = hasDynamicIsland;
+exports.hasHmsSync = exports.hasHms = exports.hasGmsSync = exports.hasGms = void 0;
+exports.hasNotch = hasNotch;
 exports.hasSystemFeature = hasSystemFeature;
 exports.hasSystemFeatureSync = hasSystemFeatureSync;
+exports.isKeyboardConnectedSync = exports.isKeyboardConnected = exports.isHeadphonesConnectedSync = exports.isHeadphonesConnected = exports.isEmulatorSync = exports.isEmulator = exports.isDisplayZoomed = exports.isCameraPresentSync = exports.isCameraPresent = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.isAirplaneModeSync = exports.isAirplaneMode = void 0;
+exports.isLandscape = isLandscape;
+exports.isLandscapeSync = isLandscapeSync;
+exports.isLocationEnabledSync = exports.isLocationEnabled = void 0;
 exports.isLowBatteryLevel = isLowBatteryLevel;
-exports.getDeviceToken = getDeviceToken;
+exports.supportedAbisSync = exports.supportedAbis = exports.supported64BitAbisSync = exports.supported64BitAbis = exports.supported32BitAbisSync = exports.supported32BitAbis = exports.isTabletMode = exports.isTablet = exports.isPinOrFingerprintSetSync = exports.isPinOrFingerprintSet = exports.isMouseConnectedSync = exports.isMouseConnected = void 0;
+exports.syncUniqueId = syncUniqueId;
 exports.useBatteryLevel = useBatteryLevel;
 exports.useBatteryLevelIsLow = useBatteryLevelIsLow;
-exports.usePowerState = usePowerState;
-exports.useIsHeadphonesConnected = useIsHeadphonesConnected;
-exports.useFirstInstallTime = useFirstInstallTime;
+exports.useBrightness = useBrightness;
 exports.useDeviceName = useDeviceName;
+exports.useFirstInstallTime = useFirstInstallTime;
 exports.useHasSystemFeature = useHasSystemFeature;
 exports.useIsEmulator = useIsEmulator;
+exports.useIsHeadphonesConnected = useIsHeadphonesConnected;
 exports.useManufacturer = useManufacturer;
-exports.useBrightness = useBrightness;
-exports.isAirplaneModeSync = exports.isAirplaneMode = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.getPowerStateSync = exports.getPowerState = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.getFreeDiskStorageSync = exports.getFreeDiskStorage = exports.getTotalDiskCapacitySync = exports.getTotalDiskCapacity = exports.getMaxMemorySync = exports.getMaxMemory = exports.getTotalMemorySync = exports.getTotalMemory = exports.getCarrierSync = exports.getCarrier = exports.getPhoneNumberSync = exports.getPhoneNumber = exports.getLastUpdateTimeSync = exports.getLastUpdateTime = exports.getInstallReferrerSync = exports.getInstallReferrer = exports.getFirstInstallTimeSync = exports.getFirstInstallTime = exports.hasHmsSync = exports.hasHms = exports.hasGmsSync = exports.hasGms = exports.isPinOrFingerprintSetSync = exports.isPinOrFingerprintSet = exports.isTablet = exports.isEmulatorSync = exports.isEmulator = exports.getIncrementalSync = exports.getIncremental = exports.getCodenameSync = exports.getCodename = exports.getSecurityPatchSync = exports.getSecurityPatch = exports.getPreviewSdkIntSync = exports.getPreviewSdkInt = exports.getBaseOsSync = exports.getBaseOs = exports.getTypeSync = exports.getType = exports.getTagsSync = exports.getTags = exports.getProductSync = exports.getProduct = exports.getHostSync = exports.getHost = exports.getHardwareSync = exports.getHardware = exports.getFingerprintSync = exports.getFingerprint = exports.getDisplaySync = exports.getDisplay = exports.getDeviceSync = exports.getDevice = exports.getBootloaderSync = exports.getBootloader = exports.getFontScaleSync = exports.getFontScale = exports.getUserAgentSync = exports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getDeviceNameSync = exports.getDeviceName = exports.getVersion = exports.getBuildNumber = exports.getApplicationName = exports.getInstallerPackageNameSync = exports.getInstallerPackageName = exports.getBundleId = exports.getApiLevelSync = exports.getApiLevel = exports.getBuildIdSync = exports.getBuildId = exports.getSystemVersion = exports.getSystemName = exports.getBrand = exports.getModel = exports.getManufacturerSync = exports.getManufacturer = exports.getDeviceId = exports.isCameraPresentSync = exports.isCameraPresent = exports.getIpAddressSync = exports.getIpAddress = exports.getAndroidIdSync = exports.getAndroidId = exports.getSerialNumberSync = exports.getSerialNumber = exports.getInstanceIdSync = exports.getInstanceId = exports.getUniqueIdSync = exports.getUniqueId = void 0;
-exports.default = exports.getBrightnessSync = exports.getBrightness = exports.getAvailableLocationProvidersSync = exports.getAvailableLocationProviders = exports.isTabletMode = exports.isKeyboardConnectedSync = exports.isKeyboardConnected = exports.isMouseConnectedSync = exports.isMouseConnected = exports.isHeadphonesConnectedSync = exports.isHeadphonesConnected = exports.isLocationEnabledSync = exports.isLocationEnabled = exports.getSystemAvailableFeaturesSync = exports.getSystemAvailableFeatures = exports.supported64BitAbisSync = exports.supported64BitAbis = exports.supported32BitAbisSync = exports.supported32BitAbis = exports.supportedAbisSync = exports.supportedAbis = exports.getDeviceTypeSync = exports.getDeviceType = void 0;
+exports.usePowerState = usePowerState;
 
 var _react = require("react");
 
@@ -48,6 +57,16 @@ var _supportedPlatformInfo = require("./internal/supported-platform-info");
 
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
+let constants;
+
+function getConstants() {
+  if (constants === undefined) {
+    constants = _nativeInterface.default.getConstants();
+  }
+
+  return constants;
+}
+
 const [getUniqueId, getUniqueIdSync] = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({
   memoKey: 'uniqueId',
   supportedPlatforms: ['android', 'ios', 'windows'],
@@ -136,7 +155,7 @@ function getMacAddressSync() {
 const getDeviceId = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({
   defaultValue: 'unknown',
   memoKey: 'deviceId',
-  getter: () => _nativeInterface.default.deviceId,
+  getter: () => getConstants().deviceId,
   supportedPlatforms: ['android', 'ios', 'windows']
 });
 
@@ -155,7 +174,7 @@ const getModel = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)(
   memoKey: 'model',
   defaultValue: 'unknown',
   supportedPlatforms: ['ios', 'android', 'windows'],
-  getter: () => _nativeInterface.default.model
+  getter: () => getConstants().model
 });
 
 exports.getModel = getModel;
@@ -164,7 +183,7 @@ const getBrand = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)(
   memoKey: 'brand',
   supportedPlatforms: ['android', 'ios', 'windows'],
   defaultValue: 'unknown',
-  getter: () => _nativeInterface.default.brand
+  getter: () => getConstants().brand
 });
 
 exports.getBrand = getBrand;
@@ -174,7 +193,7 @@ const getSystemName = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoS
   supportedPlatforms: ['ios', 'android', 'windows'],
   memoKey: 'systemName',
   getter: () => _reactNative.Platform.select({
-    ios: _nativeInterface.default.systemName,
+    ios: getConstants().systemName,
     android: 'Android',
     windows: 'Windows',
     default: 'unknown'
@@ -185,7 +204,7 @@ exports.getSystemName = getSystemName;
 
 const getSystemVersion = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({
   defaultValue: 'unknown',
-  getter: () => _nativeInterface.default.systemVersion,
+  getter: () => getConstants().systemVersion,
   supportedPlatforms: ['android', 'ios', 'windows'],
   memoKey: 'systemVersion'
 });
@@ -214,7 +233,7 @@ const getBundleId = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSyn
   memoKey: 'bundleId',
   supportedPlatforms: ['android', 'ios', 'windows'],
   defaultValue: 'unknown',
-  getter: () => _nativeInterface.default.bundleId
+  getter: () => getConstants().bundleId
 });
 
 exports.getBundleId = getBundleId;
@@ -231,7 +250,7 @@ exports.getInstallerPackageName = getInstallerPackageName;
 const getApplicationName = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({
   memoKey: 'appName',
   defaultValue: 'unknown',
-  getter: () => _nativeInterface.default.appName,
+  getter: () => getConstants().appName,
   supportedPlatforms: ['android', 'ios', 'windows']
 });
 
@@ -240,7 +259,7 @@ exports.getApplicationName = getApplicationName;
 const getBuildNumber = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({
   memoKey: 'buildNumber',
   supportedPlatforms: ['android', 'ios', 'windows'],
-  getter: () => _nativeInterface.default.buildNumber,
+  getter: () => getConstants().buildNumber,
   defaultValue: 'unknown'
 });
 
@@ -250,7 +269,7 @@ const getVersion = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync
   memoKey: 'version',
   defaultValue: 'unknown',
   supportedPlatforms: ['android', 'ios', 'windows'],
-  getter: () => _nativeInterface.default.appVersion
+  getter: () => getConstants().appVersion
 });
 
 exports.getVersion = getVersion;
@@ -441,10 +460,19 @@ const isTablet = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)(
   defaultValue: false,
   supportedPlatforms: ['android', 'ios', 'windows'],
   memoKey: 'tablet',
-  getter: () => _nativeInterface.default.isTablet
+  getter: () => getConstants().isTablet
 });
 
 exports.isTablet = isTablet;
+
+const isDisplayZoomed = () => (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({
+  defaultValue: false,
+  supportedPlatforms: ['ios'],
+  memoKey: 'zoomed',
+  getter: () => getConstants().isDisplayZoomed
+});
+
+exports.isDisplayZoomed = isDisplayZoomed;
 const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({
   supportedPlatforms: ['android', 'ios', 'windows'],
   getter: () => _nativeInterface.default.isPinOrFingerprintSet(),
@@ -457,6 +485,8 @@ let notch;
 
 function hasNotch() {
   if (notch === undefined) {
+    console.log(_nativeInterface.default);
+
     let _brand = getBrand();
 
     let _model = getModel();
@@ -676,7 +706,7 @@ const getDeviceType = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => _nativeInterface.default.deviceType
+    getter: () => getConstants().deviceType
   });
 };
 
@@ -687,7 +717,7 @@ const getDeviceTypeSync = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => _nativeInterface.default.deviceType
+    getter: () => getConstants().deviceType
   });
 };
 
@@ -817,7 +847,7 @@ async function getDeviceToken() {
   return 'unknown';
 }
 
-const deviceInfoEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);
+const deviceInfoEmitter = new _reactNative.NativeEventEmitter(_nativeInterface.default);
 
 function useBatteryLevel() {
   const [batteryLevel, setBatteryLevel] = (0, _react.useState)(null);
@@ -1052,6 +1082,7 @@ const DeviceInfo = {
   isKeyboardConnectedSync,
   isTabletMode,
   isTablet,
+  isDisplayZoomed,
   supported32BitAbis,
   supported32BitAbisSync,
   supported64BitAbis,
diff --git a/node_modules/react-native-device-info/lib/commonjs/index.js.flow b/node_modules/react-native-device-info/lib/commonjs/index.js.flow
index 02fbb10..fdb85b0 100644
--- a/node_modules/react-native-device-info/lib/commonjs/index.js.flow
+++ b/node_modules/react-native-device-info/lib/commonjs/index.js.flow
@@ -153,6 +153,7 @@ declare module.exports: {
   isKeyboardConnectedSync: () => boolean,
   isTabletMode: () => Promise<boolean>,
   isTablet: () => boolean,
+  isDisplayZoomed: () => boolean,
   supported32BitAbis: () => Promise<string[]>,
   supported32BitAbisSync: () => string[],
   supported64BitAbis: () => Promise<string[]>,
diff --git a/node_modules/react-native-device-info/lib/commonjs/index.js.map b/node_modules/react-native-device-info/lib/commonjs/index.js.map
index dc07090..0d79f29 100644
--- a/node_modules/react-native-device-info/lib/commonjs/index.js.map
+++ b/node_modules/react-native-device-info/lib/commonjs/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.ts"],"names":["getUniqueId","getUniqueIdSync","memoKey","supportedPlatforms","getter","RNDeviceInfo","syncGetter","defaultValue","uniqueId","syncUniqueId","Platform","OS","getInstanceId","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","getManufacturer","getManufacturerSync","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","undefined","_brand","_model","devicesWithNotch","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","devicesWithDynamicIsland","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","height","width","Dimensions","get","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","supportedAbis","supportedAbisSync","getSupportedAbis","getSupportedAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","NativeEventEmitter","NativeModules","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","DeviceInfo"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst DeviceInfo: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default DeviceInfo;\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.ts"],"names":["constants","getConstants","undefined","RNDeviceInfo","getUniqueId","getUniqueIdSync","memoKey","supportedPlatforms","getter","syncGetter","defaultValue","uniqueId","syncUniqueId","Platform","OS","getInstanceId","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","getManufacturer","getManufacturerSync","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isDisplayZoomed","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","console","log","_brand","_model","devicesWithNotch","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","devicesWithDynamicIsland","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","height","width","Dimensions","get","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","supportedAbis","supportedAbisSync","getSupportedAbis","getSupportedAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","NativeEventEmitter","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","DeviceInfo"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from './internal/devicesWithDynamicIsland';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule, NativeConstants } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nlet constants: NativeConstants;\n\nfunction getConstants() {\n  if (constants === undefined) {\n    constants = RNDeviceInfo.getConstants() as NativeConstants;\n  }\n  return constants;\n}\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => getConstants().deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => getConstants().model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: getConstants().systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => getConstants().systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => getConstants().appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => getConstants().buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => getConstants().appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => getConstants().isTablet,\n  });\n\nexport const isDisplayZoomed = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['ios'],\n    memoKey: 'zoomed',\n    getter: () => getConstants().isDisplayZoomed,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    console.log(RNDeviceInfo);\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState() as Promise<Partial<PowerState>>,\n  syncGetter: () => RNDeviceInfo.getPowerStateSync() as Partial<PowerState>,\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders() as Promise<LocationProviderInfo>,\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync() as LocationProviderInfo,\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst DeviceInfo: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  isDisplayZoomed,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default DeviceInfo;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js b/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js
index 2998179..c792b00 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js
@@ -3,14 +3,18 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.useOnMount = useOnMount;
-exports.useOnEvent = useOnEvent;
 exports.deviceInfoEmitter = void 0;
+exports.useOnEvent = useOnEvent;
+exports.useOnMount = useOnMount;
 
 var _react = require("react");
 
 var _reactNative = require("react-native");
 
+var _nativeInterface = _interopRequireDefault(require("./nativeInterface"));
+
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
+
 /**
  * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once
  * @param asyncGetter async function that 'gets' something
@@ -36,7 +40,7 @@ function useOnMount(asyncGetter, initialResult) {
   return response;
 }
 
-const deviceInfoEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);
+const deviceInfoEmitter = new _reactNative.NativeEventEmitter(_nativeInterface.default);
 /**
  * simple hook wrapper for handling events
  * @param eventName
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js.map b/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js.map
index 1dfb0e4..733e774 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js.map
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/asyncHookWrappers.js.map
@@ -1 +1 @@
-{"version":3,"sources":["asyncHookWrappers.ts"],"names":["useOnMount","asyncGetter","initialResult","response","setResponse","loading","result","getAsync","deviceInfoEmitter","NativeEventEmitter","NativeModules","RNDeviceInfo","useOnEvent","eventName","initialValueAsyncGetter","defaultValue","setResult","subscription","addListener","remove"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASA,UAAT,CAAuBC,WAAvB,EAAsDC,aAAtD,EAA4F;AACjG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,qBAA6B;AAC3DC,IAAAA,OAAO,EAAE,IADkD;AAE3DC,IAAAA,MAAM,EAAEJ;AAFmD,GAA7B,CAAhC;AAKA,wBAAU,MAAM;AACd;AACA,UAAMK,QAAQ,GAAG,YAAY;AAC3B,YAAMD,MAAM,GAAG,MAAML,WAAW,EAAhC;AACAG,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,CAAX;AACD,KAHD;;AAKAC,IAAAA,QAAQ;AACT,GARD,EAQG,CAACN,WAAD,CARH;AAUA,SAAOE,QAAP;AACD;;AAEM,MAAMK,iBAAiB,GAAG,IAAIC,+BAAJ,CAAuBC,2BAAcC,YAArC,CAA1B;AAEP;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,UAAT,CACLC,SADK,EAELC,uBAFK,EAGLC,YAHK,EAIe;AACpB,QAAM;AAAEV,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAEJ;AAAnB,MAAqCF,UAAU,CAACc,uBAAD,EAA0BC,YAA1B,CAArD;AACA,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsB,qBAAYD,YAAZ,CAA5B,CAFoB,CAIpB;;AACA,wBAAU,MAAM;AACdC,IAAAA,SAAS,CAACd,aAAD,CAAT;AACD,GAFD,EAEG,CAACA,aAAD,CAFH,EALoB,CASpB;AACA;;AACA,wBAAU,MAAM;AACd,UAAMe,YAAY,GAAGT,iBAAiB,CAACU,WAAlB,CAA8BL,SAA9B,EAAyCG,SAAzC,CAArB;AACA,WAAO,MAAMC,YAAY,CAACE,MAAb,EAAb;AACD,GAHD,EAGG,CAACN,SAAD,CAHH,EAXoB,CAgBpB;;AACA,SAAO;AAAER,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NativeEventEmitter, NativeModules } from 'react-native';\nimport type { AsyncHookResult } from './types';\n\n/**\n * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once\n * @param asyncGetter async function that 'gets' something\n * @param initialResult -1 | false | 'unknown'\n */\nexport function useOnMount<T>(asyncGetter: () => Promise<T>, initialResult: T): AsyncHookResult<T> {\n  const [response, setResponse] = useState<AsyncHookResult<T>>({\n    loading: true,\n    result: initialResult,\n  });\n\n  useEffect(() => {\n    // async function cuz react complains if useEffect's effect param is an async function\n    const getAsync = async () => {\n      const result = await asyncGetter();\n      setResponse({ loading: false, result });\n    };\n\n    getAsync();\n  }, [asyncGetter]);\n\n  return response;\n}\n\nexport const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\n/**\n * simple hook wrapper for handling events\n * @param eventName\n * @param initialValueAsyncGetter\n * @param defaultValue\n */\nexport function useOnEvent<T>(\n  eventName: string,\n  initialValueAsyncGetter: () => Promise<T>,\n  defaultValue: T\n): AsyncHookResult<T> {\n  const { loading, result: initialResult } = useOnMount(initialValueAsyncGetter, defaultValue);\n  const [result, setResult] = useState<T>(defaultValue);\n\n  // sets the result to what the intial value is on mount\n  useEffect(() => {\n    setResult(initialResult);\n  }, [initialResult]);\n\n  // - set up the event listener to set the result\n  // - set up the clean up function to remove subscription on unmount\n  useEffect(() => {\n    const subscription = deviceInfoEmitter.addListener(eventName, setResult);\n    return () => subscription.remove();\n  }, [eventName]);\n\n  // loading will only be true while getting the inital value. After that, it will always be false, but a new result may occur\n  return { loading, result };\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["asyncHookWrappers.ts"],"names":["useOnMount","asyncGetter","initialResult","response","setResponse","loading","result","getAsync","deviceInfoEmitter","NativeEventEmitter","RNDeviceInfo","useOnEvent","eventName","initialValueAsyncGetter","defaultValue","setResult","subscription","addListener","remove"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASA,UAAT,CAAuBC,WAAvB,EAAsDC,aAAtD,EAA4F;AACjG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,qBAA6B;AAC3DC,IAAAA,OAAO,EAAE,IADkD;AAE3DC,IAAAA,MAAM,EAAEJ;AAFmD,GAA7B,CAAhC;AAKA,wBAAU,MAAM;AACd;AACA,UAAMK,QAAQ,GAAG,YAAY;AAC3B,YAAMD,MAAM,GAAG,MAAML,WAAW,EAAhC;AACAG,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,CAAX;AACD,KAHD;;AAKAC,IAAAA,QAAQ;AACT,GARD,EAQG,CAACN,WAAD,CARH;AAUA,SAAOE,QAAP;AACD;;AAEM,MAAMK,iBAAiB,GAAG,IAAIC,+BAAJ,CAAuBC,wBAAvB,CAA1B;AAEP;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,UAAT,CACLC,SADK,EAELC,uBAFK,EAGLC,YAHK,EAIe;AACpB,QAAM;AAAET,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAEJ;AAAnB,MAAqCF,UAAU,CAACa,uBAAD,EAA0BC,YAA1B,CAArD;AACA,QAAM,CAACR,MAAD,EAASS,SAAT,IAAsB,qBAAYD,YAAZ,CAA5B,CAFoB,CAIpB;;AACA,wBAAU,MAAM;AACdC,IAAAA,SAAS,CAACb,aAAD,CAAT;AACD,GAFD,EAEG,CAACA,aAAD,CAFH,EALoB,CASpB;AACA;;AACA,wBAAU,MAAM;AACd,UAAMc,YAAY,GAAGR,iBAAiB,CAACS,WAAlB,CAA8BL,SAA9B,EAAyCG,SAAzC,CAArB;AACA,WAAO,MAAMC,YAAY,CAACE,MAAb,EAAb;AACD,GAHD,EAGG,CAACN,SAAD,CAHH,EAXoB,CAgBpB;;AACA,SAAO;AAAEP,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NativeEventEmitter } from 'react-native';\nimport RNDeviceInfo from './nativeInterface';\nimport type { AsyncHookResult } from './types';\n\n/**\n * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once\n * @param asyncGetter async function that 'gets' something\n * @param initialResult -1 | false | 'unknown'\n */\nexport function useOnMount<T>(asyncGetter: () => Promise<T>, initialResult: T): AsyncHookResult<T> {\n  const [response, setResponse] = useState<AsyncHookResult<T>>({\n    loading: true,\n    result: initialResult,\n  });\n\n  useEffect(() => {\n    // async function cuz react complains if useEffect's effect param is an async function\n    const getAsync = async () => {\n      const result = await asyncGetter();\n      setResponse({ loading: false, result });\n    };\n\n    getAsync();\n  }, [asyncGetter]);\n\n  return response;\n}\n\nexport const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);\n\n/**\n * simple hook wrapper for handling events\n * @param eventName\n * @param initialValueAsyncGetter\n * @param defaultValue\n */\nexport function useOnEvent<T>(\n  eventName: string,\n  initialValueAsyncGetter: () => Promise<T>,\n  defaultValue: T\n): AsyncHookResult<T> {\n  const { loading, result: initialResult } = useOnMount(initialValueAsyncGetter, defaultValue);\n  const [result, setResult] = useState<T>(defaultValue);\n\n  // sets the result to what the intial value is on mount\n  useEffect(() => {\n    setResult(initialResult);\n  }, [initialResult]);\n\n  // - set up the event listener to set the result\n  // - set up the clean up function to remove subscription on unmount\n  useEffect(() => {\n    const subscription = deviceInfoEmitter.addListener(eventName, setResult);\n    return () => subscription.remove();\n  }, [eventName]);\n\n  // loading will only be true while getting the inital value. After that, it will always be false, but a new result may occur\n  return { loading, result };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js
index f00bade..155dc1c 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js
@@ -7,11 +7,7 @@ exports.default = void 0;
 
 var _reactNative = require("react-native");
 
-let RNDeviceInfo = _reactNative.NativeModules.RNDeviceInfo; // @ts-ignore
-
-if (_reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'dom') {
-  RNDeviceInfo = require('../web');
-}
+let RNDeviceInfo = require('../web');
 
 if (!RNDeviceInfo) {
   // Produce an error if we don't have the native module
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js.map b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js.map
index ef378b6..d6ccc7f 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js.map
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.js.map
@@ -1 +1 @@
-{"version":3,"sources":["nativeInterface.ts"],"names":["RNDeviceInfo","NativeModules","Platform","OS","require","Error"],"mappings":";;;;;;;AAAA;;AAGA,IAAIA,YAAgD,GAAGC,2BAAcD,YAArE,C,CAEA;;AACA,IAAIE,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASC,EAAT,KAAgB,KAA7C,EAAoD;AAClDH,EAAAA,YAAY,GAAGI,OAAO,CAAC,QAAD,CAAtB;AACD;;AAED,IAAI,CAACJ,YAAL,EAAmB;AACjB;AACA,MACEE,sBAASC,EAAT,KAAgB,SAAhB,IACAD,sBAASC,EAAT,KAAgB,KADhB,IAEAD,sBAASC,EAAT,KAAgB,KAFhB,IAGA;AACAD,wBAASC,EAAT,KAAgB,KALlB,EAME;AACA,UAAM,IAAIE,KAAJ,CAAW;AACrB;AACA;AACA;AACA,sJAJU,CAAN;AAKD;AACF;;eAEcL,Y","sourcesContent":["import { Platform, NativeModules } from 'react-native';\nimport { DeviceInfoNativeModule } from './privateTypes';\n\nlet RNDeviceInfo: DeviceInfoNativeModule | undefined = NativeModules.RNDeviceInfo;\n\n// @ts-ignore\nif (Platform.OS === 'web' || Platform.OS === 'dom') {\n  RNDeviceInfo = require('../web');\n}\n\nif (!RNDeviceInfo) {\n  // Produce an error if we don't have the native module\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'web' ||\n    // @ts-ignore\n    Platform.OS === 'dom'\n  ) {\n    throw new Error(`react-native-device-info: NativeModule.RNDeviceInfo is null. To fix this issue try these steps:\n  • For react-native <= 0.59: Run \\`react-native link react-native-device-info\\` in the project root.\n  • Rebuild and re-run the app.\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n  If none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-device-info/react-native-device-info`);\n  }\n}\n\nexport default RNDeviceInfo as DeviceInfoNativeModule;\n"]}
\ No newline at end of file
+{"version":3,"sources":["nativeInterface.ts"],"names":["RNDeviceInfo","RNDeviceInfoModule","Platform","OS","require","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,YAAY,GAAGC,+BAAnB,C,CAEA;;AACA,IAAIC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASC,EAAT,KAAgB,KAA7C,EAAoD;AAClDH,EAAAA,YAAY,GAAGI,OAAO,CAAC,QAAD,CAAtB;AACD;;AAED,IAAI,CAACJ,YAAL,EAAmB;AACjB;AACA,MACEE,sBAASC,EAAT,KAAgB,SAAhB,IACAD,sBAASC,EAAT,KAAgB,KADhB,IAEAD,sBAASC,EAAT,KAAgB,KAFhB,IAGA;AACAD,wBAASC,EAAT,KAAgB,KALlB,EAME;AACA,UAAM,IAAIE,KAAJ,CAAW;AACrB;AACA;AACA;AACA,sJAJU,CAAN;AAKD;AACF;;eAEcL,Y","sourcesContent":["import { Platform } from 'react-native';\nimport RNDeviceInfoModule from '../fabric/NativeDeviceInfoModule';\n\nlet RNDeviceInfo = RNDeviceInfoModule;\n\n// @ts-ignore\nif (Platform.OS === 'web' || Platform.OS === 'dom') {\n  RNDeviceInfo = require('../web');\n}\n\nif (!RNDeviceInfo) {\n  // Produce an error if we don't have the native module\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'web' ||\n    // @ts-ignore\n    Platform.OS === 'dom'\n  ) {\n    throw new Error(`react-native-device-info: NativeModule.RNDeviceInfo is null. To fix this issue try these steps:\n  • For react-native <= 0.59: Run \\`react-native link react-native-device-info\\` in the project root.\n  • Rebuild and re-run the app.\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n  If none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-device-info/react-native-device-info`);\n  }\n}\n\nexport default RNDeviceInfo;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.native.js b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.native.js
new file mode 100644
index 0000000..6e8494e
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/nativeInterface.native.js
@@ -0,0 +1,18 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.default = void 0;
+
+var _reactNative = require("react-native");
+
+var _NativeDeviceInfoModule = _interopRequireDefault(require("../fabric/NativeDeviceInfoModule"));
+
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
+
+let RNDeviceInfo = _NativeDeviceInfoModule.default; // @ts-ignore
+
+var _default = RNDeviceInfo;
+exports.default = _default;
+//# sourceMappingURL=nativeInterface.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js b/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js
index 3053d7f..bb43c78 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js
@@ -4,9 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.clearMemo = clearMemo;
-exports.getSupportedPlatformInfoSync = getSupportedPlatformInfoSync;
 exports.getSupportedPlatformInfoAsync = getSupportedPlatformInfoAsync;
 exports.getSupportedPlatformInfoFunctions = getSupportedPlatformInfoFunctions;
+exports.getSupportedPlatformInfoSync = getSupportedPlatformInfoSync;
 
 var _reactNative = require("react-native");
 
@@ -37,12 +37,14 @@ function getSupportedFunction(supportedPlatforms, getter, defaultGetter) {
  */
 
 
-function getSupportedPlatformInfoSync({
-  getter,
-  supportedPlatforms,
-  defaultValue,
-  memoKey
-}) {
+function getSupportedPlatformInfoSync(_ref) {
+  let {
+    getter,
+    supportedPlatforms,
+    defaultValue,
+    memoKey
+  } = _ref;
+
   if (memoKey && memo[memoKey] != undefined) {
     return memo[memoKey];
   } else {
@@ -61,12 +63,14 @@ function getSupportedPlatformInfoSync({
  */
 
 
-async function getSupportedPlatformInfoAsync({
-  getter,
-  supportedPlatforms,
-  defaultValue,
-  memoKey
-}) {
+async function getSupportedPlatformInfoAsync(_ref2) {
+  let {
+    getter,
+    supportedPlatforms,
+    defaultValue,
+    memoKey
+  } = _ref2;
+
   if (memoKey && memo[memoKey] != undefined) {
     return memo[memoKey];
   } else {
@@ -85,10 +89,11 @@ async function getSupportedPlatformInfoAsync({
  */
 
 
-function getSupportedPlatformInfoFunctions({
-  syncGetter,
-  ...asyncParams
-}) {
+function getSupportedPlatformInfoFunctions(_ref3) {
+  let {
+    syncGetter,
+    ...asyncParams
+  } = _ref3;
   return [() => getSupportedPlatformInfoAsync(asyncParams), () => getSupportedPlatformInfoSync({ ...asyncParams,
     getter: syncGetter
   })];
diff --git a/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js.map b/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js.map
index 4b5bf6e..079791a 100644
--- a/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js.map
+++ b/node_modules/react-native-device-info/lib/commonjs/internal/supported-platform-info.js.map
@@ -1 +1 @@
-{"version":3,"sources":["supported-platform-info.ts"],"names":["memo","clearMemo","getSupportedFunction","supportedPlatforms","getter","defaultGetter","supportedMap","filter","key","Platform","OS","forEach","select","default","getSupportedPlatformInfoSync","defaultValue","memoKey","undefined","output","getSupportedPlatformInfoAsync","Promise","resolve","getSupportedPlatformInfoFunctions","syncGetter","asyncParams"],"mappings":";;;;;;;;;;AAAA;;AAWA;AACA,IAAIA,IAAc,GAAG,EAArB;;AAEO,SAASC,SAAT,GAAqB;AAC1BD,EAAAA,IAAI,GAAG,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,oBAAT,CACEC,kBADF,EAEEC,MAFF,EAGEC,aAHF,EAIa;AACX,MAAIC,YAAiB,GAAG,EAAxB;AACAH,EAAAA,kBAAkB,CACfI,MADH,CACWC,GAAD,IAASC,sBAASC,EAAT,IAAeF,GADlC,EAEGG,OAFH,CAEYH,GAAD,IAAUF,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,MAFzC;AAGA,SAAOK,sBAASG,MAAT,CAAgB,EACrB,GAAGN,YADkB;AAErBO,IAAAA,OAAO,EAAER;AAFY,GAAhB,CAAP;AAID;AAED;AACA;AACA;AACA;;;AACO,SAASS,4BAAT,CAAyC;AAC9CV,EAAAA,MAD8C;AAE9CD,EAAAA,kBAF8C;AAG9CY,EAAAA,YAH8C;AAI9CC,EAAAA;AAJ8C,CAAzC,EAKsC;AAC3C,MAAIA,OAAO,IAAIhB,IAAI,CAACgB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOjB,IAAI,CAACgB,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAGhB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MAAMW,YAAnC,CAApB,EAAf;;AACA,QAAIC,OAAJ,EAAa;AACXhB,MAAAA,IAAI,CAACgB,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AACD,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACO,eAAeC,6BAAf,CAAgD;AACrDf,EAAAA,MADqD;AAErDD,EAAAA,kBAFqD;AAGrDY,EAAAA,YAHqD;AAIrDC,EAAAA;AAJqD,CAAhD,EAKgD;AACrD,MAAIA,OAAO,IAAIhB,IAAI,CAACgB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOjB,IAAI,CAACgB,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAG,MAAMhB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MACpEgB,OAAO,CAACC,OAAR,CAAgBN,YAAhB,CADuC,CAApB,EAArB;;AAGA,QAAIC,OAAJ,EAAa;AACXhB,MAAAA,IAAI,CAACgB,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AAED,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACO,SAASI,iCAAT,CAA8C;AACnDC,EAAAA,UADmD;AAEnD,KAAGC;AAFgD,CAA9C,EAGyE;AAC9E,SAAO,CACL,MAAML,6BAA6B,CAACK,WAAD,CAD9B,EAEL,MAAMV,4BAA4B,CAAC,EAAE,GAAGU,WAAL;AAAkBpB,IAAAA,MAAM,EAAEmB;AAA1B,GAAD,CAF7B,CAAP;AAID","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  PlatformArray,\n  Getter,\n  GetSupportedPlatformInfoAsyncParams,\n  GetSupportedPlatformInfoSyncParams,\n  GetSupportedPlatformInfoFunctionsParams,\n} from './privateTypes';\n\ntype MemoType = { [key: string]: any };\n// centralized memo object\nlet memo: MemoType = {};\n\nexport function clearMemo() {\n  memo = {};\n}\n\n/**\n * function returns the proper getter based current platform X supported platforms\n * @param supportedPlatforms array of supported platforms (OS)\n * @param getter desired function used to get info\n * @param defaultGetter getter that returns a default value if desired getter is not supported by current platform\n */\nfunction getSupportedFunction<T>(\n  supportedPlatforms: PlatformArray,\n  getter: Getter<T>,\n  defaultGetter: Getter<T>\n): Getter<T> {\n  let supportedMap: any = {};\n  supportedPlatforms\n    .filter((key) => Platform.OS == key)\n    .forEach((key) => (supportedMap[key] = getter));\n  return Platform.select({\n    ...supportedMap,\n    default: defaultGetter,\n  });\n}\n\n/**\n * function used to get desired info synchronously — with optional memoization\n * @param param0\n */\nexport function getSupportedPlatformInfoSync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoSyncParams<T>): T {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = getSupportedFunction(supportedPlatforms, getter, () => defaultValue)();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\n\n/**\n * function used to get desired info asynchronously — with optional memoization\n * @param param0\n */\nexport async function getSupportedPlatformInfoAsync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoAsyncParams<T>): Promise<T> {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = await getSupportedFunction(supportedPlatforms, getter, () =>\n      Promise.resolve(defaultValue)\n    )();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n\n    return output;\n  }\n}\n\n/**\n * function that returns array of getter functions [async, sync]\n * @param param0\n */\nexport function getSupportedPlatformInfoFunctions<T>({\n  syncGetter,\n  ...asyncParams\n}: GetSupportedPlatformInfoFunctionsParams<T>): [Getter<Promise<T>>, Getter<T>] {\n  return [\n    () => getSupportedPlatformInfoAsync(asyncParams),\n    () => getSupportedPlatformInfoSync({ ...asyncParams, getter: syncGetter }),\n  ];\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["supported-platform-info.ts"],"names":["memo","clearMemo","getSupportedFunction","supportedPlatforms","getter","defaultGetter","supportedMap","filter","key","Platform","OS","forEach","select","default","getSupportedPlatformInfoSync","defaultValue","memoKey","undefined","output","getSupportedPlatformInfoAsync","Promise","resolve","getSupportedPlatformInfoFunctions","syncGetter","asyncParams"],"mappings":";;;;;;;;;;AAAA;;AAWA;AACA,IAAIA,IAAc,GAAG,EAArB;;AAEO,SAASC,SAAT,GAAqB;AAC1BD,EAAAA,IAAI,GAAG,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,oBAAT,CACEC,kBADF,EAEEC,MAFF,EAGEC,aAHF,EAIa;AACX,MAAIC,YAAiB,GAAG,EAAxB;AACAH,EAAAA,kBAAkB,CACfI,MADH,CACWC,GAAD,IAASC,sBAASC,EAAT,IAAeF,GADlC,EAEGG,OAFH,CAEYH,GAAD,IAAUF,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,MAFzC;AAGA,SAAOK,sBAASG,MAAT,CAAgB,EACrB,GAAGN,YADkB;AAErBO,IAAAA,OAAO,EAAER;AAFY,GAAhB,CAAP;AAID;AAED;AACA;AACA;AACA;;;AACO,SAASS,4BAAT,OAKsC;AAAA,MALG;AAC9CV,IAAAA,MAD8C;AAE9CD,IAAAA,kBAF8C;AAG9CY,IAAAA,YAH8C;AAI9CC,IAAAA;AAJ8C,GAKH;;AAC3C,MAAIA,OAAO,IAAIhB,IAAI,CAACgB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOjB,IAAI,CAACgB,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAGhB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MAAMW,YAAnC,CAApB,EAAf;;AACA,QAAIC,OAAJ,EAAa;AACXhB,MAAAA,IAAI,CAACgB,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AACD,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACO,eAAeC,6BAAf,QAKgD;AAAA,MALA;AACrDf,IAAAA,MADqD;AAErDD,IAAAA,kBAFqD;AAGrDY,IAAAA,YAHqD;AAIrDC,IAAAA;AAJqD,GAKA;;AACrD,MAAIA,OAAO,IAAIhB,IAAI,CAACgB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOjB,IAAI,CAACgB,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAG,MAAMhB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MACpEgB,OAAO,CAACC,OAAR,CAAgBN,YAAhB,CADuC,CAApB,EAArB;;AAGA,QAAIC,OAAJ,EAAa;AACXhB,MAAAA,IAAI,CAACgB,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AAED,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACO,SAASI,iCAAT,QAGyE;AAAA,MAH3B;AACnDC,IAAAA,UADmD;AAEnD,OAAGC;AAFgD,GAG2B;AAC9E,SAAO,CACL,MAAML,6BAA6B,CAACK,WAAD,CAD9B,EAEL,MAAMV,4BAA4B,CAAC,EAAE,GAAGU,WAAL;AAAkBpB,IAAAA,MAAM,EAAEmB;AAA1B,GAAD,CAF7B,CAAP;AAID","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  PlatformArray,\n  Getter,\n  GetSupportedPlatformInfoAsyncParams,\n  GetSupportedPlatformInfoSyncParams,\n  GetSupportedPlatformInfoFunctionsParams,\n} from './privateTypes';\n\ntype MemoType = { [key: string]: any };\n// centralized memo object\nlet memo: MemoType = {};\n\nexport function clearMemo() {\n  memo = {};\n}\n\n/**\n * function returns the proper getter based current platform X supported platforms\n * @param supportedPlatforms array of supported platforms (OS)\n * @param getter desired function used to get info\n * @param defaultGetter getter that returns a default value if desired getter is not supported by current platform\n */\nfunction getSupportedFunction<T>(\n  supportedPlatforms: PlatformArray,\n  getter: Getter<T>,\n  defaultGetter: Getter<T>\n): Getter<T> {\n  let supportedMap: any = {};\n  supportedPlatforms\n    .filter((key) => Platform.OS == key)\n    .forEach((key) => (supportedMap[key] = getter));\n  return Platform.select({\n    ...supportedMap,\n    default: defaultGetter,\n  });\n}\n\n/**\n * function used to get desired info synchronously — with optional memoization\n * @param param0\n */\nexport function getSupportedPlatformInfoSync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoSyncParams<T>): T {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = getSupportedFunction(supportedPlatforms, getter, () => defaultValue)();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\n\n/**\n * function used to get desired info asynchronously — with optional memoization\n * @param param0\n */\nexport async function getSupportedPlatformInfoAsync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoAsyncParams<T>): Promise<T> {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = await getSupportedFunction(supportedPlatforms, getter, () =>\n      Promise.resolve(defaultValue)\n    )();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n\n    return output;\n  }\n}\n\n/**\n * function that returns array of getter functions [async, sync]\n * @param param0\n */\nexport function getSupportedPlatformInfoFunctions<T>({\n  syncGetter,\n  ...asyncParams\n}: GetSupportedPlatformInfoFunctionsParams<T>): [Getter<Promise<T>>, Getter<T>] {\n  return [\n    () => getSupportedPlatformInfoAsync(asyncParams),\n    () => getSupportedPlatformInfoSync({ ...asyncParams, getter: syncGetter }),\n  ];\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/commonjs/web/index.js b/node_modules/react-native-device-info/lib/commonjs/web/index.js
index d222f30..656b19a 100644
--- a/node_modules/react-native-device-info/lib/commonjs/web/index.js
+++ b/node_modules/react-native-device-info/lib/commonjs/web/index.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.getPowerStateSync = exports.getPowerState = exports.getTotalMemory = exports.getUsedMemory = exports.getMaxMemory = exports.getFreeDiskStorageSync = exports.getFreeDiskStorage = exports.getTotalDiskCapacitySync = exports.getTotalDiskCapacity = exports.getBaseOs = exports.isAirplaneMode = exports.isLocationEnabled = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.isCameraPresentSync = exports.isCameraPresent = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.getUserAgent = exports.getInstallReferrer = exports.getUsedMemorySync = exports.getTotalMemorySync = exports.isLocationEnabledSync = exports.getUserAgentSync = exports.isAirplaneModeSync = exports.getInstallReferrerSync = exports.getMaxMemorySync = void 0;
+exports.isLocationEnabledSync = exports.isLocationEnabled = exports.isCameraPresentSync = exports.isCameraPresent = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.isAirplaneModeSync = exports.isAirplaneMode = exports.getUserAgentSync = exports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getTotalMemorySync = exports.getTotalMemory = exports.getTotalDiskCapacitySync = exports.getTotalDiskCapacity = exports.getPowerStateSync = exports.getPowerState = exports.getMaxMemorySync = exports.getMaxMemory = exports.getInstallReferrerSync = exports.getInstallReferrer = exports.getFreeDiskStorageSync = exports.getFreeDiskStorage = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.getBaseOs = void 0;
 
 var _reactNative = require("react-native");
 
@@ -220,9 +220,12 @@ exports.getBaseOs = getBaseOs;
 
 const getTotalDiskCapacity = async () => {
   if (navigator.storage && navigator.storage.estimate) {
-    return navigator.storage.estimate().then(({
-      quota
-    }) => quota);
+    return navigator.storage.estimate().then(_ref => {
+      let {
+        quota
+      } = _ref;
+      return quota;
+    });
   }
 
   return -1;
@@ -239,10 +242,13 @@ exports.getTotalDiskCapacitySync = getTotalDiskCapacitySync;
 
 const getFreeDiskStorage = async () => {
   if (navigator.storage && navigator.storage.estimate) {
-    return navigator.storage.estimate().then(({
-      quota,
-      usage
-    }) => quota - usage);
+    return navigator.storage.estimate().then(_ref2 => {
+      let {
+        quota,
+        usage
+      } = _ref2;
+      return quota - usage;
+    });
   }
 
   return -1;
diff --git a/node_modules/react-native-device-info/lib/commonjs/web/index.js.map b/node_modules/react-native-device-info/lib/commonjs/web/index.js.map
index 7c4991f..a0e32de 100644
--- a/node_modules/react-native-device-info/lib/commonjs/web/index.js.map
+++ b/node_modules/react-native-device-info/lib/commonjs/web/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.js"],"names":["deviceInfoEmitter","NativeEventEmitter","NativeModules","RNDeviceInfo","batteryCharging","batteryLevel","powerState","_readPowerState","battery","level","charging","chargingtime","dischargingtime","lowPowerMode","batteryState","getMaxMemorySync","window","performance","memory","jsHeapSizeLimit","getInstallReferrerSync","document","referrer","isAirplaneModeSync","navigator","onLine","getUserAgentSync","userAgent","isLocationEnabledSync","geolocation","getTotalMemorySync","deviceMemory","getUsedMemorySync","usedJSHeapSize","init","getBattery","then","addEventListener","emit","getBaseOsSync","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","mediaDevices","enumerateDevices","devices","find","d","kind","isCameraPresentSync","console","log","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","storage","estimate","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = () => {\n  if (typeof navigator === 'undefined' || !navigator.getBattery) return;\n\n  navigator.getBattery().then((battery) => {\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  });\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.charging);\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices().then(devices => {\n      return !!devices.find((d) => d.kind === 'videoinput');\n    });\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.level);\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota }) => quota)\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota, usage }) => quota - usage)\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then((battery) => _readPowerState(battery))\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.js"],"names":["deviceInfoEmitter","NativeEventEmitter","NativeModules","RNDeviceInfo","batteryCharging","batteryLevel","powerState","_readPowerState","battery","level","charging","chargingtime","dischargingtime","lowPowerMode","batteryState","getMaxMemorySync","window","performance","memory","jsHeapSizeLimit","getInstallReferrerSync","document","referrer","isAirplaneModeSync","navigator","onLine","getUserAgentSync","userAgent","isLocationEnabledSync","geolocation","getTotalMemorySync","deviceMemory","getUsedMemorySync","usedJSHeapSize","init","getBattery","then","addEventListener","emit","getBaseOsSync","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","mediaDevices","enumerateDevices","devices","find","d","kind","isCameraPresentSync","console","log","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","storage","estimate","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = () => {\n  if (typeof navigator === 'undefined' || !navigator.getBattery) return;\n\n  navigator.getBattery().then((battery) => {\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  });\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.charging);\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices().then(devices => {\n      return !!devices.find((d) => d.kind === 'videoinput');\n    });\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.level);\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota }) => quota)\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota, usage }) => quota - usage)\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then((battery) => _readPowerState(battery))\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js b/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js
new file mode 100644
index 0000000..9455226
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js
@@ -0,0 +1,3 @@
+import { TurboModuleRegistry } from 'react-native';
+export default TurboModuleRegistry.get('RNDeviceInfo');
+//# sourceMappingURL=NativeDeviceInfoModule.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js.map b/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js.map
new file mode 100644
index 0000000..7915f74
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/module/fabric/NativeDeviceInfoModule.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["NativeDeviceInfoModule.ts"],"names":["TurboModuleRegistry","getEnforcing"],"mappings":"AAAA,SAASA,mBAAT,QAAiD,cAAjD;AAuJA,eAAeA,mBAAmB,CAACC,YAApB,CAAuC,cAAvC,CAAf","sourcesContent":["import { TurboModuleRegistry, TurboModule } from 'react-native';\n\nexport interface Spec extends TurboModule {\n  getPowerState: () => Promise<{\n    batteryLevel: number;\n    batteryState: string;\n    lowPowerMode: boolean;\n  }>;\n  getPowerStateSync: () => {\n    batteryLevel: number;\n    batteryState: string;\n    lowPowerMode: boolean;\n  }; // should be PowerState\n  getSupported32BitAbis: () => Promise<string[]>;\n  getSupported32BitAbisSync: () => string[];\n  getSupported64BitAbis: () => Promise<string[]>;\n  getSupported64BitAbisSync: () => string[];\n  getSupportedAbis: () => Promise<string[]>;\n  getSupportedAbisSync: () => string[];\n  getSystemManufacturer: () => Promise<string>;\n  getSystemManufacturerSync: () => string;\n  getAndroidId: () => Promise<string>;\n  getAndroidIdSync: () => string;\n  getApiLevel: () => Promise<number>;\n  getApiLevelSync: () => number;\n  getAvailableLocationProviders: () => Promise<Object>;\n  getAvailableLocationProvidersSync: () => Object; // should be LocationProviderInfo\n  getBaseOs: () => Promise<string>;\n  getBaseOsSync: () => string;\n  getBatteryLevel: () => Promise<number>;\n  getBatteryLevelSync: () => number;\n  getBootloader: () => Promise<string>;\n  getBootloaderSync: () => string;\n  getBuildId: () => Promise<string>;\n  getBuildIdSync: () => string;\n  getCarrier: () => Promise<string>;\n  getCarrierSync: () => string;\n  getCodename: () => Promise<string>;\n  getCodenameSync: () => string;\n  getDevice: () => Promise<string>;\n  getDeviceName: () => Promise<string>;\n  getDeviceNameSync: () => string;\n  getDeviceSync: () => string;\n  getDeviceToken: () => Promise<string>;\n  getDisplay: () => Promise<string>;\n  getDisplaySync: () => string;\n  getFingerprint: () => Promise<string>;\n  getFingerprintSync: () => string;\n  getFirstInstallTime: () => Promise<number>;\n  getFirstInstallTimeSync: () => number;\n  getFontScale: () => Promise<number>;\n  getFontScaleSync: () => number;\n  getFreeDiskStorage: () => Promise<number>;\n  getFreeDiskStorageOld: () => Promise<number>;\n  getFreeDiskStorageSync: () => number;\n  getFreeDiskStorageOldSync: () => number;\n  getHardware: () => Promise<string>;\n  getHardwareSync: () => string;\n  getHost: () => Promise<string>;\n  getHostSync: () => string;\n  getIncremental: () => Promise<string>;\n  getIncrementalSync: () => string;\n  getInstallerPackageName: () => Promise<string>;\n  getInstallerPackageNameSync: () => string;\n  getInstallReferrer: () => Promise<string>;\n  getInstallReferrerSync: () => string;\n  getInstanceId: () => Promise<string>;\n  getInstanceIdSync: () => string;\n  getIpAddress: () => Promise<string>;\n  getIpAddressSync: () => string;\n  getLastUpdateTime: () => Promise<number>;\n  getLastUpdateTimeSync: () => number;\n  getMacAddress: () => Promise<string>;\n  getMacAddressSync: () => string;\n  getMaxMemory: () => Promise<number>;\n  getMaxMemorySync: () => number;\n  getPhoneNumber: () => Promise<string>;\n  getPhoneNumberSync: () => string;\n  getPreviewSdkInt: () => Promise<number>;\n  getPreviewSdkIntSync: () => number;\n  getProduct: () => Promise<string>;\n  getProductSync: () => string;\n  getSecurityPatch: () => Promise<string>;\n  getSecurityPatchSync: () => string;\n  getSerialNumber: () => Promise<string>;\n  getSerialNumberSync: () => string;\n  getSystemAvailableFeatures: () => Promise<string[]>;\n  getSystemAvailableFeaturesSync: () => string[];\n  getTags: () => Promise<string>;\n  getTagsSync: () => string;\n  getTotalDiskCapacity: () => Promise<number>;\n  getTotalDiskCapacityOld: () => Promise<number>;\n  getTotalDiskCapacitySync: () => number;\n  getTotalDiskCapacityOldSync: () => number;\n  getTotalMemory: () => Promise<number>;\n  getTotalMemorySync: () => number;\n  getType: () => Promise<string>;\n  getTypeSync: () => string;\n  getUniqueId: () => Promise<string>;\n  getUniqueIdSync: () => string;\n  getUsedMemory: () => Promise<number>;\n  getUsedMemorySync: () => number;\n  getUserAgent: () => Promise<string>;\n  getUserAgentSync: () => string;\n  getBrightness: () => Promise<number>;\n  getBrightnessSync: () => number;\n  hasGms: () => Promise<boolean>;\n  hasGmsSync: () => boolean;\n  hasHms: () => Promise<boolean>;\n  hasHmsSync: () => boolean;\n  hasSystemFeature: (feature: string) => Promise<boolean>;\n  hasSystemFeatureSync: (feature: string) => boolean;\n  isAirplaneMode: () => Promise<boolean>;\n  isAirplaneModeSync: () => boolean;\n  isBatteryCharging: () => Promise<boolean>;\n  isBatteryChargingSync: () => boolean;\n  isCameraPresent: () => Promise<boolean>;\n  isCameraPresentSync: () => boolean;\n  isEmulator: () => Promise<boolean>;\n  isEmulatorSync: () => boolean;\n  isHeadphonesConnected: () => Promise<boolean>;\n  isHeadphonesConnectedSync: () => boolean;\n  isLocationEnabled: () => Promise<boolean>;\n  isLocationEnabledSync: () => boolean;\n  isPinOrFingerprintSet: () => Promise<boolean>;\n  isPinOrFingerprintSetSync: () => boolean;\n  isMouseConnected: () => Promise<boolean>;\n  isMouseConnectedSync: () => boolean;\n  isKeyboardConnected: () => Promise<boolean>;\n  isKeyboardConnectedSync: () => boolean;\n  isTabletMode: () => Promise<boolean>;\n  syncUniqueId: () => Promise<string>;\n\n  addListener(eventName: string): void;\n  removeListeners(count: number): void;\n  getConstants(): {\n    appName: string;\n    appVersion: string;\n    brand: string;\n    buildNumber: string;\n    bundleId: string;\n    deviceId: string;\n    deviceType: string;\n    isTablet: boolean;\n    isDisplayZoomed?: boolean;\n    model: string;\n    systemName: string;\n    systemVersion: string;\n  };\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNDeviceInfo');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/index.js b/node_modules/react-native-device-info/lib/module/index.js
index 9db4a5c..6ba1b7f 100644
--- a/node_modules/react-native-device-info/lib/module/index.js
+++ b/node_modules/react-native-device-info/lib/module/index.js
@@ -1,10 +1,20 @@
 import { useCallback, useEffect, useState } from 'react';
-import { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';
+import { Dimensions, NativeEventEmitter, Platform } from 'react-native';
 import { useOnEvent, useOnMount } from './internal/asyncHookWrappers';
-import devicesWithDynamicIsland from "./internal/devicesWithDynamicIsland";
+import devicesWithDynamicIsland from './internal/devicesWithDynamicIsland';
 import devicesWithNotch from './internal/devicesWithNotch';
 import RNDeviceInfo from './internal/nativeInterface';
 import { getSupportedPlatformInfoAsync, getSupportedPlatformInfoFunctions, getSupportedPlatformInfoSync } from './internal/supported-platform-info';
+let constants;
+
+function getConstants() {
+  if (constants === undefined) {
+    constants = RNDeviceInfo.getConstants();
+  }
+
+  return constants;
+}
+
 export const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({
   memoKey: 'uniqueId',
   supportedPlatforms: ['android', 'ios', 'windows'],
@@ -76,7 +86,7 @@ export function getMacAddressSync() {
 export const getDeviceId = () => getSupportedPlatformInfoSync({
   defaultValue: 'unknown',
   memoKey: 'deviceId',
-  getter: () => RNDeviceInfo.deviceId,
+  getter: () => getConstants().deviceId,
   supportedPlatforms: ['android', 'ios', 'windows']
 });
 export const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({
@@ -90,20 +100,20 @@ export const getModel = () => getSupportedPlatformInfoSync({
   memoKey: 'model',
   defaultValue: 'unknown',
   supportedPlatforms: ['ios', 'android', 'windows'],
-  getter: () => RNDeviceInfo.model
+  getter: () => getConstants().model
 });
 export const getBrand = () => getSupportedPlatformInfoSync({
   memoKey: 'brand',
   supportedPlatforms: ['android', 'ios', 'windows'],
   defaultValue: 'unknown',
-  getter: () => RNDeviceInfo.brand
+  getter: () => getConstants().brand
 });
 export const getSystemName = () => getSupportedPlatformInfoSync({
   defaultValue: 'unknown',
   supportedPlatforms: ['ios', 'android', 'windows'],
   memoKey: 'systemName',
   getter: () => Platform.select({
-    ios: RNDeviceInfo.systemName,
+    ios: getConstants().systemName,
     android: 'Android',
     windows: 'Windows',
     default: 'unknown'
@@ -111,7 +121,7 @@ export const getSystemName = () => getSupportedPlatformInfoSync({
 });
 export const getSystemVersion = () => getSupportedPlatformInfoSync({
   defaultValue: 'unknown',
-  getter: () => RNDeviceInfo.systemVersion,
+  getter: () => getConstants().systemVersion,
   supportedPlatforms: ['android', 'ios', 'windows'],
   memoKey: 'systemVersion'
 });
@@ -133,7 +143,7 @@ export const getBundleId = () => getSupportedPlatformInfoSync({
   memoKey: 'bundleId',
   supportedPlatforms: ['android', 'ios', 'windows'],
   defaultValue: 'unknown',
-  getter: () => RNDeviceInfo.bundleId
+  getter: () => getConstants().bundleId
 });
 export const [getInstallerPackageName, getInstallerPackageNameSync] = getSupportedPlatformInfoFunctions({
   memoKey: 'installerPackageName',
@@ -145,20 +155,20 @@ export const [getInstallerPackageName, getInstallerPackageNameSync] = getSupport
 export const getApplicationName = () => getSupportedPlatformInfoSync({
   memoKey: 'appName',
   defaultValue: 'unknown',
-  getter: () => RNDeviceInfo.appName,
+  getter: () => getConstants().appName,
   supportedPlatforms: ['android', 'ios', 'windows']
 });
 export const getBuildNumber = () => getSupportedPlatformInfoSync({
   memoKey: 'buildNumber',
   supportedPlatforms: ['android', 'ios', 'windows'],
-  getter: () => RNDeviceInfo.buildNumber,
+  getter: () => getConstants().buildNumber,
   defaultValue: 'unknown'
 });
 export const getVersion = () => getSupportedPlatformInfoSync({
   memoKey: 'version',
   defaultValue: 'unknown',
   supportedPlatforms: ['android', 'ios', 'windows'],
-  getter: () => RNDeviceInfo.appVersion
+  getter: () => getConstants().appVersion
 });
 export function getReadableVersion() {
   return getVersion() + '.' + getBuildNumber();
@@ -302,7 +312,13 @@ export const isTablet = () => getSupportedPlatformInfoSync({
   defaultValue: false,
   supportedPlatforms: ['android', 'ios', 'windows'],
   memoKey: 'tablet',
-  getter: () => RNDeviceInfo.isTablet
+  getter: () => getConstants().isTablet
+});
+export const isDisplayZoomed = () => getSupportedPlatformInfoSync({
+  defaultValue: false,
+  supportedPlatforms: ['ios'],
+  memoKey: 'zoomed',
+  getter: () => getConstants().isDisplayZoomed
 });
 export const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions({
   supportedPlatforms: ['android', 'ios', 'windows'],
@@ -313,6 +329,8 @@ export const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPl
 let notch;
 export function hasNotch() {
   if (notch === undefined) {
+    console.log(RNDeviceInfo);
+
     let _brand = getBrand();
 
     let _model = getModel();
@@ -488,7 +506,7 @@ export const getDeviceType = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.deviceType
+    getter: () => getConstants().deviceType
   });
 };
 export const getDeviceTypeSync = () => {
@@ -496,7 +514,7 @@ export const getDeviceTypeSync = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.deviceType
+    getter: () => getConstants().deviceType
   });
 };
 export const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({
@@ -595,7 +613,7 @@ export async function getDeviceToken() {
 
   return 'unknown';
 }
-const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);
+const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);
 export function useBatteryLevel() {
   const [batteryLevel, setBatteryLevel] = useState(null);
   useEffect(() => {
@@ -819,6 +837,7 @@ const DeviceInfo = {
   isKeyboardConnectedSync,
   isTabletMode,
   isTablet,
+  isDisplayZoomed,
   supported32BitAbis,
   supported32BitAbisSync,
   supported64BitAbis,
diff --git a/node_modules/react-native-device-info/lib/module/index.js.flow b/node_modules/react-native-device-info/lib/module/index.js.flow
index 02fbb10..fdb85b0 100644
--- a/node_modules/react-native-device-info/lib/module/index.js.flow
+++ b/node_modules/react-native-device-info/lib/module/index.js.flow
@@ -153,6 +153,7 @@ declare module.exports: {
   isKeyboardConnectedSync: () => boolean,
   isTabletMode: () => Promise<boolean>,
   isTablet: () => boolean,
+  isDisplayZoomed: () => boolean,
   supported32BitAbis: () => Promise<string[]>,
   supported32BitAbisSync: () => string[],
   supported64BitAbis: () => Promise<string[]>,
diff --git a/node_modules/react-native-device-info/lib/module/index.js.map b/node_modules/react-native-device-info/lib/module/index.js.map
index ee4ed0f..05b2714 100644
--- a/node_modules/react-native-device-info/lib/module/index.js.map
+++ b/node_modules/react-native-device-info/lib/module/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.ts"],"names":["useCallback","useEffect","useState","Dimensions","NativeEventEmitter","NativeModules","Platform","useOnEvent","useOnMount","devicesWithDynamicIsland","devicesWithNotch","RNDeviceInfo","getSupportedPlatformInfoAsync","getSupportedPlatformInfoFunctions","getSupportedPlatformInfoSync","getUniqueId","getUniqueIdSync","memoKey","supportedPlatforms","getter","syncGetter","defaultValue","uniqueId","syncUniqueId","OS","getInstanceId","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","getManufacturer","getManufacturerSync","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","undefined","_brand","_model","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","height","width","get","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","supportedAbis","supportedAbisSync","getSupportedAbis","getSupportedAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","DeviceInfo"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst DeviceInfo: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default DeviceInfo;\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.ts"],"names":["useCallback","useEffect","useState","Dimensions","NativeEventEmitter","Platform","useOnEvent","useOnMount","devicesWithDynamicIsland","devicesWithNotch","RNDeviceInfo","getSupportedPlatformInfoAsync","getSupportedPlatformInfoFunctions","getSupportedPlatformInfoSync","constants","getConstants","undefined","getUniqueId","getUniqueIdSync","memoKey","supportedPlatforms","getter","syncGetter","defaultValue","uniqueId","syncUniqueId","OS","getInstanceId","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","getManufacturer","getManufacturerSync","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isDisplayZoomed","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","console","log","_brand","_model","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","height","width","get","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","supportedAbis","supportedAbisSync","getSupportedAbis","getSupportedAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","DeviceInfo"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from './internal/devicesWithDynamicIsland';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule, NativeConstants } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nlet constants: NativeConstants;\n\nfunction getConstants() {\n  if (constants === undefined) {\n    constants = RNDeviceInfo.getConstants() as NativeConstants;\n  }\n  return constants;\n}\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => getConstants().deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => getConstants().model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: getConstants().systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => getConstants().systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => getConstants().appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => getConstants().buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => getConstants().appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => getConstants().isTablet,\n  });\n\nexport const isDisplayZoomed = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['ios'],\n    memoKey: 'zoomed',\n    getter: () => getConstants().isDisplayZoomed,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    console.log(RNDeviceInfo);\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState() as Promise<Partial<PowerState>>,\n  syncGetter: () => RNDeviceInfo.getPowerStateSync() as Partial<PowerState>,\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => getConstants().deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders() as Promise<LocationProviderInfo>,\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync() as LocationProviderInfo,\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst DeviceInfo: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  isDisplayZoomed,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default DeviceInfo;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js b/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js
index 0d5dca5..1a7cae1 100644
--- a/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js
+++ b/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js
@@ -1,5 +1,6 @@
 import { useState, useEffect } from 'react';
-import { NativeEventEmitter, NativeModules } from 'react-native';
+import { NativeEventEmitter } from 'react-native';
+import RNDeviceInfo from './nativeInterface';
 
 /**
  * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once
@@ -25,7 +26,7 @@ export function useOnMount(asyncGetter, initialResult) {
   }, [asyncGetter]);
   return response;
 }
-export const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);
+export const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);
 /**
  * simple hook wrapper for handling events
  * @param eventName
diff --git a/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js.map b/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js.map
index 87af78b..9705ec1 100644
--- a/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js.map
+++ b/node_modules/react-native-device-info/lib/module/internal/asyncHookWrappers.js.map
@@ -1 +1 @@
-{"version":3,"sources":["asyncHookWrappers.ts"],"names":["useState","useEffect","NativeEventEmitter","NativeModules","useOnMount","asyncGetter","initialResult","response","setResponse","loading","result","getAsync","deviceInfoEmitter","RNDeviceInfo","useOnEvent","eventName","initialValueAsyncGetter","defaultValue","setResult","subscription","addListener","remove"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,cAAlD;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAT,CAAuBC,WAAvB,EAAsDC,aAAtD,EAA4F;AACjG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAqB;AAC3DS,IAAAA,OAAO,EAAE,IADkD;AAE3DC,IAAAA,MAAM,EAAEJ;AAFmD,GAArB,CAAxC;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMD,MAAM,GAAG,MAAML,WAAW,EAAhC;AACAG,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,CAAX;AACD,KAHD;;AAKAC,IAAAA,QAAQ;AACT,GARQ,EAQN,CAACN,WAAD,CARM,CAAT;AAUA,SAAOE,QAAP;AACD;AAED,OAAO,MAAMK,iBAAiB,GAAG,IAAIV,kBAAJ,CAAuBC,aAAa,CAACU,YAArC,CAA1B;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CACLC,SADK,EAELC,uBAFK,EAGLC,YAHK,EAIe;AACpB,QAAM;AAAER,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAEJ;AAAnB,MAAqCF,UAAU,CAACY,uBAAD,EAA0BC,YAA1B,CAArD;AACA,QAAM,CAACP,MAAD,EAASQ,SAAT,IAAsBlB,QAAQ,CAAIiB,YAAJ,CAApC,CAFoB,CAIpB;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAACZ,aAAD,CAAT;AACD,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT,CALoB,CASpB;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,YAAY,GAAGP,iBAAiB,CAACQ,WAAlB,CAA8BL,SAA9B,EAAyCG,SAAzC,CAArB;AACA,WAAO,MAAMC,YAAY,CAACE,MAAb,EAAb;AACD,GAHQ,EAGN,CAACN,SAAD,CAHM,CAAT,CAXoB,CAgBpB;;AACA,SAAO;AAAEN,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NativeEventEmitter, NativeModules } from 'react-native';\nimport type { AsyncHookResult } from './types';\n\n/**\n * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once\n * @param asyncGetter async function that 'gets' something\n * @param initialResult -1 | false | 'unknown'\n */\nexport function useOnMount<T>(asyncGetter: () => Promise<T>, initialResult: T): AsyncHookResult<T> {\n  const [response, setResponse] = useState<AsyncHookResult<T>>({\n    loading: true,\n    result: initialResult,\n  });\n\n  useEffect(() => {\n    // async function cuz react complains if useEffect's effect param is an async function\n    const getAsync = async () => {\n      const result = await asyncGetter();\n      setResponse({ loading: false, result });\n    };\n\n    getAsync();\n  }, [asyncGetter]);\n\n  return response;\n}\n\nexport const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\n/**\n * simple hook wrapper for handling events\n * @param eventName\n * @param initialValueAsyncGetter\n * @param defaultValue\n */\nexport function useOnEvent<T>(\n  eventName: string,\n  initialValueAsyncGetter: () => Promise<T>,\n  defaultValue: T\n): AsyncHookResult<T> {\n  const { loading, result: initialResult } = useOnMount(initialValueAsyncGetter, defaultValue);\n  const [result, setResult] = useState<T>(defaultValue);\n\n  // sets the result to what the intial value is on mount\n  useEffect(() => {\n    setResult(initialResult);\n  }, [initialResult]);\n\n  // - set up the event listener to set the result\n  // - set up the clean up function to remove subscription on unmount\n  useEffect(() => {\n    const subscription = deviceInfoEmitter.addListener(eventName, setResult);\n    return () => subscription.remove();\n  }, [eventName]);\n\n  // loading will only be true while getting the inital value. After that, it will always be false, but a new result may occur\n  return { loading, result };\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["asyncHookWrappers.ts"],"names":["useState","useEffect","NativeEventEmitter","RNDeviceInfo","useOnMount","asyncGetter","initialResult","response","setResponse","loading","result","getAsync","deviceInfoEmitter","useOnEvent","eventName","initialValueAsyncGetter","defaultValue","setResult","subscription","addListener","remove"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAT,CAAuBC,WAAvB,EAAsDC,aAAtD,EAA4F;AACjG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAqB;AAC3DS,IAAAA,OAAO,EAAE,IADkD;AAE3DC,IAAAA,MAAM,EAAEJ;AAFmD,GAArB,CAAxC;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMD,MAAM,GAAG,MAAML,WAAW,EAAhC;AACAG,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,CAAX;AACD,KAHD;;AAKAC,IAAAA,QAAQ;AACT,GARQ,EAQN,CAACN,WAAD,CARM,CAAT;AAUA,SAAOE,QAAP;AACD;AAED,OAAO,MAAMK,iBAAiB,GAAG,IAAIV,kBAAJ,CAAuBC,YAAvB,CAA1B;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASU,UAAT,CACLC,SADK,EAELC,uBAFK,EAGLC,YAHK,EAIe;AACpB,QAAM;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAEJ;AAAnB,MAAqCF,UAAU,CAACW,uBAAD,EAA0BC,YAA1B,CAArD;AACA,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsBjB,QAAQ,CAAIgB,YAAJ,CAApC,CAFoB,CAIpB;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,SAAS,CAACX,aAAD,CAAT;AACD,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT,CALoB,CASpB;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,YAAY,GAAGN,iBAAiB,CAACO,WAAlB,CAA8BL,SAA9B,EAAyCG,SAAzC,CAArB;AACA,WAAO,MAAMC,YAAY,CAACE,MAAb,EAAb;AACD,GAHQ,EAGN,CAACN,SAAD,CAHM,CAAT,CAXoB,CAgBpB;;AACA,SAAO;AAAEL,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NativeEventEmitter } from 'react-native';\nimport RNDeviceInfo from './nativeInterface';\nimport type { AsyncHookResult } from './types';\n\n/**\n * simple hook wrapper for async functions for 'on-mount / componentDidMount' that only need to fired once\n * @param asyncGetter async function that 'gets' something\n * @param initialResult -1 | false | 'unknown'\n */\nexport function useOnMount<T>(asyncGetter: () => Promise<T>, initialResult: T): AsyncHookResult<T> {\n  const [response, setResponse] = useState<AsyncHookResult<T>>({\n    loading: true,\n    result: initialResult,\n  });\n\n  useEffect(() => {\n    // async function cuz react complains if useEffect's effect param is an async function\n    const getAsync = async () => {\n      const result = await asyncGetter();\n      setResponse({ loading: false, result });\n    };\n\n    getAsync();\n  }, [asyncGetter]);\n\n  return response;\n}\n\nexport const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);\n\n/**\n * simple hook wrapper for handling events\n * @param eventName\n * @param initialValueAsyncGetter\n * @param defaultValue\n */\nexport function useOnEvent<T>(\n  eventName: string,\n  initialValueAsyncGetter: () => Promise<T>,\n  defaultValue: T\n): AsyncHookResult<T> {\n  const { loading, result: initialResult } = useOnMount(initialValueAsyncGetter, defaultValue);\n  const [result, setResult] = useState<T>(defaultValue);\n\n  // sets the result to what the intial value is on mount\n  useEffect(() => {\n    setResult(initialResult);\n  }, [initialResult]);\n\n  // - set up the event listener to set the result\n  // - set up the clean up function to remove subscription on unmount\n  useEffect(() => {\n    const subscription = deviceInfoEmitter.addListener(eventName, setResult);\n    return () => subscription.remove();\n  }, [eventName]);\n\n  // loading will only be true while getting the inital value. After that, it will always be false, but a new result may occur\n  return { loading, result };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js
index 6b443c3..a6a0640 100644
--- a/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js
+++ b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js
@@ -1,9 +1,5 @@
-import { Platform, NativeModules } from 'react-native';
-let RNDeviceInfo = NativeModules.RNDeviceInfo; // @ts-ignore
-
-if (Platform.OS === 'web' || Platform.OS === 'dom') {
-  RNDeviceInfo = require('../web');
-}
+import { Platform } from 'react-native';
+let RNDeviceInfo = require('../web');
 
 if (!RNDeviceInfo) {
   // Produce an error if we don't have the native module
diff --git a/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js.map b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js.map
index 0cd28c5..bd0d8fa 100644
--- a/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js.map
+++ b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.js.map
@@ -1 +1 @@
-{"version":3,"sources":["nativeInterface.ts"],"names":["Platform","NativeModules","RNDeviceInfo","OS","require","Error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,cAAxC;AAGA,IAAIC,YAAgD,GAAGD,aAAa,CAACC,YAArE,C,CAEA;;AACA,IAAIF,QAAQ,CAACG,EAAT,KAAgB,KAAhB,IAAyBH,QAAQ,CAACG,EAAT,KAAgB,KAA7C,EAAoD;AAClDD,EAAAA,YAAY,GAAGE,OAAO,CAAC,QAAD,CAAtB;AACD;;AAED,IAAI,CAACF,YAAL,EAAmB;AACjB;AACA,MACEF,QAAQ,CAACG,EAAT,KAAgB,SAAhB,IACAH,QAAQ,CAACG,EAAT,KAAgB,KADhB,IAEAH,QAAQ,CAACG,EAAT,KAAgB,KAFhB,IAGA;AACAH,EAAAA,QAAQ,CAACG,EAAT,KAAgB,KALlB,EAME;AACA,UAAM,IAAIE,KAAJ,CAAW;AACrB;AACA;AACA;AACA,sJAJU,CAAN;AAKD;AACF;;AAED,eAAeH,YAAf","sourcesContent":["import { Platform, NativeModules } from 'react-native';\nimport { DeviceInfoNativeModule } from './privateTypes';\n\nlet RNDeviceInfo: DeviceInfoNativeModule | undefined = NativeModules.RNDeviceInfo;\n\n// @ts-ignore\nif (Platform.OS === 'web' || Platform.OS === 'dom') {\n  RNDeviceInfo = require('../web');\n}\n\nif (!RNDeviceInfo) {\n  // Produce an error if we don't have the native module\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'web' ||\n    // @ts-ignore\n    Platform.OS === 'dom'\n  ) {\n    throw new Error(`react-native-device-info: NativeModule.RNDeviceInfo is null. To fix this issue try these steps:\n  • For react-native <= 0.59: Run \\`react-native link react-native-device-info\\` in the project root.\n  • Rebuild and re-run the app.\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n  If none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-device-info/react-native-device-info`);\n  }\n}\n\nexport default RNDeviceInfo as DeviceInfoNativeModule;\n"]}
\ No newline at end of file
+{"version":3,"sources":["nativeInterface.ts"],"names":["Platform","RNDeviceInfoModule","RNDeviceInfo","OS","require","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA,IAAIC,YAAY,GAAGD,kBAAnB,C,CAEA;;AACA,IAAID,QAAQ,CAACG,EAAT,KAAgB,KAAhB,IAAyBH,QAAQ,CAACG,EAAT,KAAgB,KAA7C,EAAoD;AAClDD,EAAAA,YAAY,GAAGE,OAAO,CAAC,QAAD,CAAtB;AACD;;AAED,IAAI,CAACF,YAAL,EAAmB;AACjB;AACA,MACEF,QAAQ,CAACG,EAAT,KAAgB,SAAhB,IACAH,QAAQ,CAACG,EAAT,KAAgB,KADhB,IAEAH,QAAQ,CAACG,EAAT,KAAgB,KAFhB,IAGA;AACAH,EAAAA,QAAQ,CAACG,EAAT,KAAgB,KALlB,EAME;AACA,UAAM,IAAIE,KAAJ,CAAW;AACrB;AACA;AACA;AACA,sJAJU,CAAN;AAKD;AACF;;AAED,eAAeH,YAAf","sourcesContent":["import { Platform } from 'react-native';\nimport RNDeviceInfoModule from '../fabric/NativeDeviceInfoModule';\n\nlet RNDeviceInfo = RNDeviceInfoModule;\n\n// @ts-ignore\nif (Platform.OS === 'web' || Platform.OS === 'dom') {\n  RNDeviceInfo = require('../web');\n}\n\nif (!RNDeviceInfo) {\n  // Produce an error if we don't have the native module\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'web' ||\n    // @ts-ignore\n    Platform.OS === 'dom'\n  ) {\n    throw new Error(`react-native-device-info: NativeModule.RNDeviceInfo is null. To fix this issue try these steps:\n  • For react-native <= 0.59: Run \\`react-native link react-native-device-info\\` in the project root.\n  • Rebuild and re-run the app.\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n  If none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-device-info/react-native-device-info`);\n  }\n}\n\nexport default RNDeviceInfo;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/internal/nativeInterface.native.js b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.native.js
new file mode 100644
index 0000000..fdb1e56
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/module/internal/nativeInterface.native.js
@@ -0,0 +1,6 @@
+import { Platform } from 'react-native';
+import RNDeviceInfoModule from '../fabric/NativeDeviceInfoModule';
+let RNDeviceInfo = RNDeviceInfoModule; // @ts-ignore
+
+export default RNDeviceInfo;
+//# sourceMappingURL=nativeInterface.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js b/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js
index 159dece..7af2eda 100644
--- a/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js
+++ b/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js
@@ -24,12 +24,14 @@ function getSupportedFunction(supportedPlatforms, getter, defaultGetter) {
  */
 
 
-export function getSupportedPlatformInfoSync({
-  getter,
-  supportedPlatforms,
-  defaultValue,
-  memoKey
-}) {
+export function getSupportedPlatformInfoSync(_ref) {
+  let {
+    getter,
+    supportedPlatforms,
+    defaultValue,
+    memoKey
+  } = _ref;
+
   if (memoKey && memo[memoKey] != undefined) {
     return memo[memoKey];
   } else {
@@ -47,12 +49,14 @@ export function getSupportedPlatformInfoSync({
  * @param param0
  */
 
-export async function getSupportedPlatformInfoAsync({
-  getter,
-  supportedPlatforms,
-  defaultValue,
-  memoKey
-}) {
+export async function getSupportedPlatformInfoAsync(_ref2) {
+  let {
+    getter,
+    supportedPlatforms,
+    defaultValue,
+    memoKey
+  } = _ref2;
+
   if (memoKey && memo[memoKey] != undefined) {
     return memo[memoKey];
   } else {
@@ -70,10 +74,11 @@ export async function getSupportedPlatformInfoAsync({
  * @param param0
  */
 
-export function getSupportedPlatformInfoFunctions({
-  syncGetter,
-  ...asyncParams
-}) {
+export function getSupportedPlatformInfoFunctions(_ref3) {
+  let {
+    syncGetter,
+    ...asyncParams
+  } = _ref3;
   return [() => getSupportedPlatformInfoAsync(asyncParams), () => getSupportedPlatformInfoSync({ ...asyncParams,
     getter: syncGetter
   })];
diff --git a/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js.map b/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js.map
index ec1b98e..b5c3120 100644
--- a/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js.map
+++ b/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.js.map
@@ -1 +1 @@
-{"version":3,"sources":["supported-platform-info.ts"],"names":["Platform","memo","clearMemo","getSupportedFunction","supportedPlatforms","getter","defaultGetter","supportedMap","filter","key","OS","forEach","select","default","getSupportedPlatformInfoSync","defaultValue","memoKey","undefined","output","getSupportedPlatformInfoAsync","Promise","resolve","getSupportedPlatformInfoFunctions","syncGetter","asyncParams"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAWA;AACA,IAAIC,IAAc,GAAG,EAArB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1BD,EAAAA,IAAI,GAAG,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,oBAAT,CACEC,kBADF,EAEEC,MAFF,EAGEC,aAHF,EAIa;AACX,MAAIC,YAAiB,GAAG,EAAxB;AACAH,EAAAA,kBAAkB,CACfI,MADH,CACWC,GAAD,IAAST,QAAQ,CAACU,EAAT,IAAeD,GADlC,EAEGE,OAFH,CAEYF,GAAD,IAAUF,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,MAFzC;AAGA,SAAOL,QAAQ,CAACY,MAAT,CAAgB,EACrB,GAAGL,YADkB;AAErBM,IAAAA,OAAO,EAAEP;AAFY,GAAhB,CAAP;AAID;AAED;AACA;AACA;AACA;;;AACA,OAAO,SAASQ,4BAAT,CAAyC;AAC9CT,EAAAA,MAD8C;AAE9CD,EAAAA,kBAF8C;AAG9CW,EAAAA,YAH8C;AAI9CC,EAAAA;AAJ8C,CAAzC,EAKsC;AAC3C,MAAIA,OAAO,IAAIf,IAAI,CAACe,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOhB,IAAI,CAACe,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAGf,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MAAMU,YAAnC,CAApB,EAAf;;AACA,QAAIC,OAAJ,EAAa;AACXf,MAAAA,IAAI,CAACe,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AACD,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,eAAeC,6BAAf,CAAgD;AACrDd,EAAAA,MADqD;AAErDD,EAAAA,kBAFqD;AAGrDW,EAAAA,YAHqD;AAIrDC,EAAAA;AAJqD,CAAhD,EAKgD;AACrD,MAAIA,OAAO,IAAIf,IAAI,CAACe,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOhB,IAAI,CAACe,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAG,MAAMf,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MACpEe,OAAO,CAACC,OAAR,CAAgBN,YAAhB,CADuC,CAApB,EAArB;;AAGA,QAAIC,OAAJ,EAAa;AACXf,MAAAA,IAAI,CAACe,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AAED,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASI,iCAAT,CAA8C;AACnDC,EAAAA,UADmD;AAEnD,KAAGC;AAFgD,CAA9C,EAGyE;AAC9E,SAAO,CACL,MAAML,6BAA6B,CAACK,WAAD,CAD9B,EAEL,MAAMV,4BAA4B,CAAC,EAAE,GAAGU,WAAL;AAAkBnB,IAAAA,MAAM,EAAEkB;AAA1B,GAAD,CAF7B,CAAP;AAID","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  PlatformArray,\n  Getter,\n  GetSupportedPlatformInfoAsyncParams,\n  GetSupportedPlatformInfoSyncParams,\n  GetSupportedPlatformInfoFunctionsParams,\n} from './privateTypes';\n\ntype MemoType = { [key: string]: any };\n// centralized memo object\nlet memo: MemoType = {};\n\nexport function clearMemo() {\n  memo = {};\n}\n\n/**\n * function returns the proper getter based current platform X supported platforms\n * @param supportedPlatforms array of supported platforms (OS)\n * @param getter desired function used to get info\n * @param defaultGetter getter that returns a default value if desired getter is not supported by current platform\n */\nfunction getSupportedFunction<T>(\n  supportedPlatforms: PlatformArray,\n  getter: Getter<T>,\n  defaultGetter: Getter<T>\n): Getter<T> {\n  let supportedMap: any = {};\n  supportedPlatforms\n    .filter((key) => Platform.OS == key)\n    .forEach((key) => (supportedMap[key] = getter));\n  return Platform.select({\n    ...supportedMap,\n    default: defaultGetter,\n  });\n}\n\n/**\n * function used to get desired info synchronously — with optional memoization\n * @param param0\n */\nexport function getSupportedPlatformInfoSync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoSyncParams<T>): T {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = getSupportedFunction(supportedPlatforms, getter, () => defaultValue)();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\n\n/**\n * function used to get desired info asynchronously — with optional memoization\n * @param param0\n */\nexport async function getSupportedPlatformInfoAsync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoAsyncParams<T>): Promise<T> {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = await getSupportedFunction(supportedPlatforms, getter, () =>\n      Promise.resolve(defaultValue)\n    )();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n\n    return output;\n  }\n}\n\n/**\n * function that returns array of getter functions [async, sync]\n * @param param0\n */\nexport function getSupportedPlatformInfoFunctions<T>({\n  syncGetter,\n  ...asyncParams\n}: GetSupportedPlatformInfoFunctionsParams<T>): [Getter<Promise<T>>, Getter<T>] {\n  return [\n    () => getSupportedPlatformInfoAsync(asyncParams),\n    () => getSupportedPlatformInfoSync({ ...asyncParams, getter: syncGetter }),\n  ];\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["supported-platform-info.ts"],"names":["Platform","memo","clearMemo","getSupportedFunction","supportedPlatforms","getter","defaultGetter","supportedMap","filter","key","OS","forEach","select","default","getSupportedPlatformInfoSync","defaultValue","memoKey","undefined","output","getSupportedPlatformInfoAsync","Promise","resolve","getSupportedPlatformInfoFunctions","syncGetter","asyncParams"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAWA;AACA,IAAIC,IAAc,GAAG,EAArB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1BD,EAAAA,IAAI,GAAG,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,oBAAT,CACEC,kBADF,EAEEC,MAFF,EAGEC,aAHF,EAIa;AACX,MAAIC,YAAiB,GAAG,EAAxB;AACAH,EAAAA,kBAAkB,CACfI,MADH,CACWC,GAAD,IAAST,QAAQ,CAACU,EAAT,IAAeD,GADlC,EAEGE,OAFH,CAEYF,GAAD,IAAUF,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,MAFzC;AAGA,SAAOL,QAAQ,CAACY,MAAT,CAAgB,EACrB,GAAGL,YADkB;AAErBM,IAAAA,OAAO,EAAEP;AAFY,GAAhB,CAAP;AAID;AAED;AACA;AACA;AACA;;;AACA,OAAO,SAASQ,4BAAT,OAKsC;AAAA,MALG;AAC9CT,IAAAA,MAD8C;AAE9CD,IAAAA,kBAF8C;AAG9CW,IAAAA,YAH8C;AAI9CC,IAAAA;AAJ8C,GAKH;;AAC3C,MAAIA,OAAO,IAAIf,IAAI,CAACe,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOhB,IAAI,CAACe,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAGf,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MAAMU,YAAnC,CAApB,EAAf;;AACA,QAAIC,OAAJ,EAAa;AACXf,MAAAA,IAAI,CAACe,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AACD,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,eAAeC,6BAAf,QAKgD;AAAA,MALA;AACrDd,IAAAA,MADqD;AAErDD,IAAAA,kBAFqD;AAGrDW,IAAAA,YAHqD;AAIrDC,IAAAA;AAJqD,GAKA;;AACrD,MAAIA,OAAO,IAAIf,IAAI,CAACe,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;AACzC,WAAOhB,IAAI,CAACe,OAAD,CAAX;AACD,GAFD,MAEO;AACL,UAAME,MAAM,GAAG,MAAMf,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B,MACpEe,OAAO,CAACC,OAAR,CAAgBN,YAAhB,CADuC,CAApB,EAArB;;AAGA,QAAIC,OAAJ,EAAa;AACXf,MAAAA,IAAI,CAACe,OAAD,CAAJ,GAAgBE,MAAhB;AACD;;AAED,WAAOA,MAAP;AACD;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASI,iCAAT,QAGyE;AAAA,MAH3B;AACnDC,IAAAA,UADmD;AAEnD,OAAGC;AAFgD,GAG2B;AAC9E,SAAO,CACL,MAAML,6BAA6B,CAACK,WAAD,CAD9B,EAEL,MAAMV,4BAA4B,CAAC,EAAE,GAAGU,WAAL;AAAkBnB,IAAAA,MAAM,EAAEkB;AAA1B,GAAD,CAF7B,CAAP;AAID","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  PlatformArray,\n  Getter,\n  GetSupportedPlatformInfoAsyncParams,\n  GetSupportedPlatformInfoSyncParams,\n  GetSupportedPlatformInfoFunctionsParams,\n} from './privateTypes';\n\ntype MemoType = { [key: string]: any };\n// centralized memo object\nlet memo: MemoType = {};\n\nexport function clearMemo() {\n  memo = {};\n}\n\n/**\n * function returns the proper getter based current platform X supported platforms\n * @param supportedPlatforms array of supported platforms (OS)\n * @param getter desired function used to get info\n * @param defaultGetter getter that returns a default value if desired getter is not supported by current platform\n */\nfunction getSupportedFunction<T>(\n  supportedPlatforms: PlatformArray,\n  getter: Getter<T>,\n  defaultGetter: Getter<T>\n): Getter<T> {\n  let supportedMap: any = {};\n  supportedPlatforms\n    .filter((key) => Platform.OS == key)\n    .forEach((key) => (supportedMap[key] = getter));\n  return Platform.select({\n    ...supportedMap,\n    default: defaultGetter,\n  });\n}\n\n/**\n * function used to get desired info synchronously — with optional memoization\n * @param param0\n */\nexport function getSupportedPlatformInfoSync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoSyncParams<T>): T {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = getSupportedFunction(supportedPlatforms, getter, () => defaultValue)();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\n\n/**\n * function used to get desired info asynchronously — with optional memoization\n * @param param0\n */\nexport async function getSupportedPlatformInfoAsync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoAsyncParams<T>): Promise<T> {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = await getSupportedFunction(supportedPlatforms, getter, () =>\n      Promise.resolve(defaultValue)\n    )();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n\n    return output;\n  }\n}\n\n/**\n * function that returns array of getter functions [async, sync]\n * @param param0\n */\nexport function getSupportedPlatformInfoFunctions<T>({\n  syncGetter,\n  ...asyncParams\n}: GetSupportedPlatformInfoFunctionsParams<T>): [Getter<Promise<T>>, Getter<T>] {\n  return [\n    () => getSupportedPlatformInfoAsync(asyncParams),\n    () => getSupportedPlatformInfoSync({ ...asyncParams, getter: syncGetter }),\n  ];\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/module/web/index.js b/node_modules/react-native-device-info/lib/module/web/index.js
index 147a2c5..a4810c0 100644
--- a/node_modules/react-native-device-info/lib/module/web/index.js
+++ b/node_modules/react-native-device-info/lib/module/web/index.js
@@ -159,9 +159,12 @@ export const getBaseOs = async () => {
 };
 export const getTotalDiskCapacity = async () => {
   if (navigator.storage && navigator.storage.estimate) {
-    return navigator.storage.estimate().then(({
-      quota
-    }) => quota);
+    return navigator.storage.estimate().then(_ref => {
+      let {
+        quota
+      } = _ref;
+      return quota;
+    });
   }
 
   return -1;
@@ -172,10 +175,13 @@ export const getTotalDiskCapacitySync = () => {
 };
 export const getFreeDiskStorage = async () => {
   if (navigator.storage && navigator.storage.estimate) {
-    return navigator.storage.estimate().then(({
-      quota,
-      usage
-    }) => quota - usage);
+    return navigator.storage.estimate().then(_ref2 => {
+      let {
+        quota,
+        usage
+      } = _ref2;
+      return quota - usage;
+    });
   }
 
   return -1;
diff --git a/node_modules/react-native-device-info/lib/module/web/index.js.map b/node_modules/react-native-device-info/lib/module/web/index.js.map
index 68c17e6..2f2cfbd 100644
--- a/node_modules/react-native-device-info/lib/module/web/index.js.map
+++ b/node_modules/react-native-device-info/lib/module/web/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.js"],"names":["NativeEventEmitter","NativeModules","deviceInfoEmitter","RNDeviceInfo","batteryCharging","batteryLevel","powerState","_readPowerState","battery","level","charging","chargingtime","dischargingtime","lowPowerMode","batteryState","getMaxMemorySync","window","performance","memory","jsHeapSizeLimit","getInstallReferrerSync","document","referrer","isAirplaneModeSync","navigator","onLine","getUserAgentSync","userAgent","isLocationEnabledSync","geolocation","getTotalMemorySync","deviceMemory","getUsedMemorySync","usedJSHeapSize","init","getBattery","then","addEventListener","emit","getBaseOsSync","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","mediaDevices","enumerateDevices","devices","find","d","kind","isCameraPresentSync","console","log","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","storage","estimate","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = () => {\n  if (typeof navigator === 'undefined' || !navigator.getBattery) return;\n\n  navigator.getBattery().then((battery) => {\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  });\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.charging);\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices().then(devices => {\n      return !!devices.find((d) => d.kind === 'videoinput');\n    });\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.level);\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota }) => quota)\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota, usage }) => quota - usage)\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then((battery) => _readPowerState(battery))\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.js"],"names":["NativeEventEmitter","NativeModules","deviceInfoEmitter","RNDeviceInfo","batteryCharging","batteryLevel","powerState","_readPowerState","battery","level","charging","chargingtime","dischargingtime","lowPowerMode","batteryState","getMaxMemorySync","window","performance","memory","jsHeapSizeLimit","getInstallReferrerSync","document","referrer","isAirplaneModeSync","navigator","onLine","getUserAgentSync","userAgent","isLocationEnabledSync","geolocation","getTotalMemorySync","deviceMemory","getUsedMemorySync","usedJSHeapSize","init","getBattery","then","addEventListener","emit","getBaseOsSync","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","mediaDevices","enumerateDevices","devices","find","d","kind","isCameraPresentSync","console","log","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","storage","estimate","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = () => {\n  if (typeof navigator === 'undefined' || !navigator.getBattery) return;\n\n  navigator.getBattery().then((battery) => {\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  });\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.charging);\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices().then(devices => {\n      return !!devices.find((d) => d.kind === 'videoinput');\n    });\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then(battery => battery.level);\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota }) => quota)\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    return navigator.storage.estimate().then(({ quota, usage }) => quota - usage)\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    return navigator.getBattery().then((battery) => _readPowerState(battery))\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-device-info/lib/typescript/fabric/NativeDeviceInfoModule.d.ts b/node_modules/react-native-device-info/lib/typescript/fabric/NativeDeviceInfoModule.d.ts
new file mode 100644
index 0000000..08ca7ee
--- /dev/null
+++ b/node_modules/react-native-device-info/lib/typescript/fabric/NativeDeviceInfoModule.d.ts
@@ -0,0 +1,150 @@
+import { TurboModule } from 'react-native';
+export interface Spec extends TurboModule {
+    getPowerState: () => Promise<{
+        batteryLevel: number;
+        batteryState: string;
+        lowPowerMode: boolean;
+    }>;
+    getPowerStateSync: () => {
+        batteryLevel: number;
+        batteryState: string;
+        lowPowerMode: boolean;
+    };
+    getSupported32BitAbis: () => Promise<string[]>;
+    getSupported32BitAbisSync: () => string[];
+    getSupported64BitAbis: () => Promise<string[]>;
+    getSupported64BitAbisSync: () => string[];
+    getSupportedAbis: () => Promise<string[]>;
+    getSupportedAbisSync: () => string[];
+    getSystemManufacturer: () => Promise<string>;
+    getSystemManufacturerSync: () => string;
+    getAndroidId: () => Promise<string>;
+    getAndroidIdSync: () => string;
+    getApiLevel: () => Promise<number>;
+    getApiLevelSync: () => number;
+    getAvailableLocationProviders: () => Promise<Object>;
+    getAvailableLocationProvidersSync: () => Object;
+    getBaseOs: () => Promise<string>;
+    getBaseOsSync: () => string;
+    getBatteryLevel: () => Promise<number>;
+    getBatteryLevelSync: () => number;
+    getBootloader: () => Promise<string>;
+    getBootloaderSync: () => string;
+    getBuildId: () => Promise<string>;
+    getBuildIdSync: () => string;
+    getCarrier: () => Promise<string>;
+    getCarrierSync: () => string;
+    getCodename: () => Promise<string>;
+    getCodenameSync: () => string;
+    getDevice: () => Promise<string>;
+    getDeviceName: () => Promise<string>;
+    getDeviceNameSync: () => string;
+    getDeviceSync: () => string;
+    getDeviceToken: () => Promise<string>;
+    getDisplay: () => Promise<string>;
+    getDisplaySync: () => string;
+    getFingerprint: () => Promise<string>;
+    getFingerprintSync: () => string;
+    getFirstInstallTime: () => Promise<number>;
+    getFirstInstallTimeSync: () => number;
+    getFontScale: () => Promise<number>;
+    getFontScaleSync: () => number;
+    getFreeDiskStorage: () => Promise<number>;
+    getFreeDiskStorageOld: () => Promise<number>;
+    getFreeDiskStorageSync: () => number;
+    getFreeDiskStorageOldSync: () => number;
+    getHardware: () => Promise<string>;
+    getHardwareSync: () => string;
+    getHost: () => Promise<string>;
+    getHostSync: () => string;
+    getIncremental: () => Promise<string>;
+    getIncrementalSync: () => string;
+    getInstallerPackageName: () => Promise<string>;
+    getInstallerPackageNameSync: () => string;
+    getInstallReferrer: () => Promise<string>;
+    getInstallReferrerSync: () => string;
+    getInstanceId: () => Promise<string>;
+    getInstanceIdSync: () => string;
+    getIpAddress: () => Promise<string>;
+    getIpAddressSync: () => string;
+    getLastUpdateTime: () => Promise<number>;
+    getLastUpdateTimeSync: () => number;
+    getMacAddress: () => Promise<string>;
+    getMacAddressSync: () => string;
+    getMaxMemory: () => Promise<number>;
+    getMaxMemorySync: () => number;
+    getPhoneNumber: () => Promise<string>;
+    getPhoneNumberSync: () => string;
+    getPreviewSdkInt: () => Promise<number>;
+    getPreviewSdkIntSync: () => number;
+    getProduct: () => Promise<string>;
+    getProductSync: () => string;
+    getSecurityPatch: () => Promise<string>;
+    getSecurityPatchSync: () => string;
+    getSerialNumber: () => Promise<string>;
+    getSerialNumberSync: () => string;
+    getSystemAvailableFeatures: () => Promise<string[]>;
+    getSystemAvailableFeaturesSync: () => string[];
+    getTags: () => Promise<string>;
+    getTagsSync: () => string;
+    getTotalDiskCapacity: () => Promise<number>;
+    getTotalDiskCapacityOld: () => Promise<number>;
+    getTotalDiskCapacitySync: () => number;
+    getTotalDiskCapacityOldSync: () => number;
+    getTotalMemory: () => Promise<number>;
+    getTotalMemorySync: () => number;
+    getType: () => Promise<string>;
+    getTypeSync: () => string;
+    getUniqueId: () => Promise<string>;
+    getUniqueIdSync: () => string;
+    getUsedMemory: () => Promise<number>;
+    getUsedMemorySync: () => number;
+    getUserAgent: () => Promise<string>;
+    getUserAgentSync: () => string;
+    getBrightness: () => Promise<number>;
+    getBrightnessSync: () => number;
+    hasGms: () => Promise<boolean>;
+    hasGmsSync: () => boolean;
+    hasHms: () => Promise<boolean>;
+    hasHmsSync: () => boolean;
+    hasSystemFeature: (feature: string) => Promise<boolean>;
+    hasSystemFeatureSync: (feature: string) => boolean;
+    isAirplaneMode: () => Promise<boolean>;
+    isAirplaneModeSync: () => boolean;
+    isBatteryCharging: () => Promise<boolean>;
+    isBatteryChargingSync: () => boolean;
+    isCameraPresent: () => Promise<boolean>;
+    isCameraPresentSync: () => boolean;
+    isEmulator: () => Promise<boolean>;
+    isEmulatorSync: () => boolean;
+    isHeadphonesConnected: () => Promise<boolean>;
+    isHeadphonesConnectedSync: () => boolean;
+    isLocationEnabled: () => Promise<boolean>;
+    isLocationEnabledSync: () => boolean;
+    isPinOrFingerprintSet: () => Promise<boolean>;
+    isPinOrFingerprintSetSync: () => boolean;
+    isMouseConnected: () => Promise<boolean>;
+    isMouseConnectedSync: () => boolean;
+    isKeyboardConnected: () => Promise<boolean>;
+    isKeyboardConnectedSync: () => boolean;
+    isTabletMode: () => Promise<boolean>;
+    syncUniqueId: () => Promise<string>;
+    addListener(eventName: string): void;
+    removeListeners(count: number): void;
+    getConstants(): {
+        appName: string;
+        appVersion: string;
+        brand: string;
+        buildNumber: string;
+        bundleId: string;
+        deviceId: string;
+        deviceType: string;
+        isTablet: boolean;
+        isDisplayZoomed?: boolean;
+        model: string;
+        systemName: string;
+        systemVersion: string;
+    };
+}
+declare const _default: Spec;
+export default _default;
diff --git a/node_modules/react-native-device-info/lib/typescript/index.d.ts b/node_modules/react-native-device-info/lib/typescript/index.d.ts
index 9ee719c..bf0912a 100644
--- a/node_modules/react-native-device-info/lib/typescript/index.d.ts
+++ b/node_modules/react-native-device-info/lib/typescript/index.d.ts
@@ -44,6 +44,7 @@ export declare const getCodename: import("./internal/privateTypes").Getter<Promi
 export declare const getIncremental: import("./internal/privateTypes").Getter<Promise<string>>, getIncrementalSync: import("./internal/privateTypes").Getter<string>;
 export declare const isEmulator: import("./internal/privateTypes").Getter<Promise<boolean>>, isEmulatorSync: import("./internal/privateTypes").Getter<boolean>;
 export declare const isTablet: () => boolean;
+export declare const isDisplayZoomed: () => boolean | undefined;
 export declare const isPinOrFingerprintSet: import("./internal/privateTypes").Getter<Promise<boolean>>, isPinOrFingerprintSetSync: import("./internal/privateTypes").Getter<boolean>;
 export declare function hasNotch(): boolean;
 export declare function hasDynamicIsland(): boolean;
diff --git a/node_modules/react-native-device-info/lib/typescript/internal/nativeInterface.d.ts b/node_modules/react-native-device-info/lib/typescript/internal/nativeInterface.d.ts
index 56c84eb..59f6bc5 100644
--- a/node_modules/react-native-device-info/lib/typescript/internal/nativeInterface.d.ts
+++ b/node_modules/react-native-device-info/lib/typescript/internal/nativeInterface.d.ts
@@ -1,3 +1,2 @@
-import { DeviceInfoNativeModule } from './privateTypes';
-declare const _default: DeviceInfoNativeModule;
-export default _default;
+declare let RNDeviceInfo: import("../fabric/NativeDeviceInfoModule").Spec;
+export default RNDeviceInfo;
diff --git a/node_modules/react-native-device-info/lib/typescript/internal/privateTypes.d.ts b/node_modules/react-native-device-info/lib/typescript/internal/privateTypes.d.ts
index f137e75..129b5ef 100644
--- a/node_modules/react-native-device-info/lib/typescript/internal/privateTypes.d.ts
+++ b/node_modules/react-native-device-info/lib/typescript/internal/privateTypes.d.ts
@@ -5,7 +5,7 @@ export declare type NotchDevice = {
     model: string;
     [key: string]: string;
 };
-interface NativeConstants {
+export interface NativeConstants {
     appName: string;
     appVersion: string;
     brand: string;
@@ -14,6 +14,7 @@ interface NativeConstants {
     deviceId: string;
     deviceType: DeviceType;
     isTablet: boolean;
+    isDisplayZoomed?: boolean;
     model: string;
     systemName: string;
     systemVersion: string;
@@ -170,6 +171,7 @@ export interface DeviceInfoModule extends ExposedNativeMethods {
     isLandscape: () => Promise<boolean>;
     isLandscapeSync: () => boolean;
     isTablet: () => boolean;
+    isDisplayZoomed: () => boolean | undefined;
     supported32BitAbis: () => Promise<string[]>;
     supported32BitAbisSync: () => string[];
     supported64BitAbis: () => Promise<string[]>;
diff --git a/node_modules/react-native-device-info/package.json b/node_modules/react-native-device-info/package.json
index f15e34f..8afd532 100644
--- a/node_modules/react-native-device-info/package.json
+++ b/node_modules/react-native-device-info/package.json
@@ -104,7 +104,7 @@
     "@testing-library/react-hooks": "^7.0.2",
     "@types/jest": "^27.4.1",
     "@types/react": "17.0.39",
-    "@types/react-native": "^0.67.2",
+    "@types/react-native": "^0.71.3",
     "eslint": "^7",
     "eslint-plugin-prettier": "^4.0.0",
     "husky": "^7.0.4",
@@ -134,5 +134,13 @@
       "module",
       "typescript"
     ]
+  },
+  "codegenConfig": {
+    "name": "rndeviceinfomodule",
+    "type": "modules",
+    "jsSrcsDir": "./src/fabric",
+    "android": {
+      "javaPackageName": "com.learnium.RNDeviceInfo"
+    }
   }
 }
diff --git a/node_modules/react-native-device-info/src/fabric/NativeDeviceInfoModule.ts b/node_modules/react-native-device-info/src/fabric/NativeDeviceInfoModule.ts
new file mode 100644
index 0000000..0dce963
--- /dev/null
+++ b/node_modules/react-native-device-info/src/fabric/NativeDeviceInfoModule.ts
@@ -0,0 +1,152 @@
+import { TurboModuleRegistry, TurboModule } from 'react-native';
+
+export interface Spec extends TurboModule {
+  getPowerState: () => Promise<{
+    batteryLevel: number;
+    batteryState: string;
+    lowPowerMode: boolean;
+  }>;
+  getPowerStateSync: () => {
+    batteryLevel: number;
+    batteryState: string;
+    lowPowerMode: boolean;
+  }; // should be PowerState
+  getSupported32BitAbis: () => Promise<string[]>;
+  getSupported32BitAbisSync: () => string[];
+  getSupported64BitAbis: () => Promise<string[]>;
+  getSupported64BitAbisSync: () => string[];
+  getSupportedAbis: () => Promise<string[]>;
+  getSupportedAbisSync: () => string[];
+  getSystemManufacturer: () => Promise<string>;
+  getSystemManufacturerSync: () => string;
+  getAndroidId: () => Promise<string>;
+  getAndroidIdSync: () => string;
+  getApiLevel: () => Promise<number>;
+  getApiLevelSync: () => number;
+  getAvailableLocationProviders: () => Promise<Object>;
+  getAvailableLocationProvidersSync: () => Object; // should be LocationProviderInfo
+  getBaseOs: () => Promise<string>;
+  getBaseOsSync: () => string;
+  getBatteryLevel: () => Promise<number>;
+  getBatteryLevelSync: () => number;
+  getBootloader: () => Promise<string>;
+  getBootloaderSync: () => string;
+  getBuildId: () => Promise<string>;
+  getBuildIdSync: () => string;
+  getCarrier: () => Promise<string>;
+  getCarrierSync: () => string;
+  getCodename: () => Promise<string>;
+  getCodenameSync: () => string;
+  getDevice: () => Promise<string>;
+  getDeviceName: () => Promise<string>;
+  getDeviceNameSync: () => string;
+  getDeviceSync: () => string;
+  getDeviceToken: () => Promise<string>;
+  getDisplay: () => Promise<string>;
+  getDisplaySync: () => string;
+  getFingerprint: () => Promise<string>;
+  getFingerprintSync: () => string;
+  getFirstInstallTime: () => Promise<number>;
+  getFirstInstallTimeSync: () => number;
+  getFontScale: () => Promise<number>;
+  getFontScaleSync: () => number;
+  getFreeDiskStorage: () => Promise<number>;
+  getFreeDiskStorageOld: () => Promise<number>;
+  getFreeDiskStorageSync: () => number;
+  getFreeDiskStorageOldSync: () => number;
+  getHardware: () => Promise<string>;
+  getHardwareSync: () => string;
+  getHost: () => Promise<string>;
+  getHostSync: () => string;
+  getIncremental: () => Promise<string>;
+  getIncrementalSync: () => string;
+  getInstallerPackageName: () => Promise<string>;
+  getInstallerPackageNameSync: () => string;
+  getInstallReferrer: () => Promise<string>;
+  getInstallReferrerSync: () => string;
+  getInstanceId: () => Promise<string>;
+  getInstanceIdSync: () => string;
+  getIpAddress: () => Promise<string>;
+  getIpAddressSync: () => string;
+  getLastUpdateTime: () => Promise<number>;
+  getLastUpdateTimeSync: () => number;
+  getMacAddress: () => Promise<string>;
+  getMacAddressSync: () => string;
+  getMaxMemory: () => Promise<number>;
+  getMaxMemorySync: () => number;
+  getPhoneNumber: () => Promise<string>;
+  getPhoneNumberSync: () => string;
+  getPreviewSdkInt: () => Promise<number>;
+  getPreviewSdkIntSync: () => number;
+  getProduct: () => Promise<string>;
+  getProductSync: () => string;
+  getSecurityPatch: () => Promise<string>;
+  getSecurityPatchSync: () => string;
+  getSerialNumber: () => Promise<string>;
+  getSerialNumberSync: () => string;
+  getSystemAvailableFeatures: () => Promise<string[]>;
+  getSystemAvailableFeaturesSync: () => string[];
+  getTags: () => Promise<string>;
+  getTagsSync: () => string;
+  getTotalDiskCapacity: () => Promise<number>;
+  getTotalDiskCapacityOld: () => Promise<number>;
+  getTotalDiskCapacitySync: () => number;
+  getTotalDiskCapacityOldSync: () => number;
+  getTotalMemory: () => Promise<number>;
+  getTotalMemorySync: () => number;
+  getType: () => Promise<string>;
+  getTypeSync: () => string;
+  getUniqueId: () => Promise<string>;
+  getUniqueIdSync: () => string;
+  getUsedMemory: () => Promise<number>;
+  getUsedMemorySync: () => number;
+  getUserAgent: () => Promise<string>;
+  getUserAgentSync: () => string;
+  getBrightness: () => Promise<number>;
+  getBrightnessSync: () => number;
+  hasGms: () => Promise<boolean>;
+  hasGmsSync: () => boolean;
+  hasHms: () => Promise<boolean>;
+  hasHmsSync: () => boolean;
+  hasSystemFeature: (feature: string) => Promise<boolean>;
+  hasSystemFeatureSync: (feature: string) => boolean;
+  isAirplaneMode: () => Promise<boolean>;
+  isAirplaneModeSync: () => boolean;
+  isBatteryCharging: () => Promise<boolean>;
+  isBatteryChargingSync: () => boolean;
+  isCameraPresent: () => Promise<boolean>;
+  isCameraPresentSync: () => boolean;
+  isEmulator: () => Promise<boolean>;
+  isEmulatorSync: () => boolean;
+  isHeadphonesConnected: () => Promise<boolean>;
+  isHeadphonesConnectedSync: () => boolean;
+  isLocationEnabled: () => Promise<boolean>;
+  isLocationEnabledSync: () => boolean;
+  isPinOrFingerprintSet: () => Promise<boolean>;
+  isPinOrFingerprintSetSync: () => boolean;
+  isMouseConnected: () => Promise<boolean>;
+  isMouseConnectedSync: () => boolean;
+  isKeyboardConnected: () => Promise<boolean>;
+  isKeyboardConnectedSync: () => boolean;
+  isTabletMode: () => Promise<boolean>;
+  syncUniqueId: () => Promise<string>;
+
+  addListener(eventName: string): void;
+  removeListeners(count: number): void;
+  getConstants(): {
+    appName: string;
+    appVersion: string;
+    brand: string;
+    buildNumber: string;
+    bundleId: string;
+    deviceId: string;
+    deviceType: string;
+    isTablet: boolean;
+    isDisplayZoomed?: boolean;
+    model: string;
+    systemName: string;
+    systemVersion: string;
+  };
+}
+
+export default TurboModuleRegistry.get<Spec>('RNDeviceInfo');
diff --git a/node_modules/react-native-device-info/src/index.js.flow b/node_modules/react-native-device-info/src/index.js.flow
index 02fbb10..fdb85b0 100644
--- a/node_modules/react-native-device-info/src/index.js.flow
+++ b/node_modules/react-native-device-info/src/index.js.flow
@@ -153,6 +153,7 @@ declare module.exports: {
   isKeyboardConnectedSync: () => boolean,
   isTabletMode: () => Promise<boolean>,
   isTablet: () => boolean,
+  isDisplayZoomed: () => boolean,
   supported32BitAbis: () => Promise<string[]>,
   supported32BitAbisSync: () => string[],
   supported64BitAbis: () => Promise<string[]>,
diff --git a/node_modules/react-native-device-info/src/index.ts b/node_modules/react-native-device-info/src/index.ts
index 6108ab9..85b1c44 100644
--- a/node_modules/react-native-device-info/src/index.ts
+++ b/node_modules/react-native-device-info/src/index.ts
@@ -1,7 +1,7 @@
 import { useCallback, useEffect, useState } from 'react';
-import { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';
+import { Dimensions, NativeEventEmitter, Platform } from 'react-native';
 import { useOnEvent, useOnMount } from './internal/asyncHookWrappers';
-import devicesWithDynamicIsland from "./internal/devicesWithDynamicIsland";
+import devicesWithDynamicIsland from './internal/devicesWithDynamicIsland';
 import devicesWithNotch from './internal/devicesWithNotch';
 import RNDeviceInfo from './internal/nativeInterface';
 import {
@@ -9,7 +9,7 @@ import {
   getSupportedPlatformInfoFunctions,
   getSupportedPlatformInfoSync,
 } from './internal/supported-platform-info';
-import { DeviceInfoModule } from './internal/privateTypes';
+import { DeviceInfoModule, NativeConstants } from './internal/privateTypes';
 import type {
   AsyncHookResult,
   DeviceType,
@@ -17,6 +17,15 @@ import type {
   PowerState,
 } from './internal/types';
 
+let constants: NativeConstants;
+
+function getConstants() {
+  if (constants === undefined) {
+    constants = RNDeviceInfo.getConstants() as NativeConstants;
+  }
+  return constants;
+}
+
 export const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({
   memoKey: 'uniqueId',
   supportedPlatforms: ['android', 'ios', 'windows'],
@@ -95,7 +104,7 @@ export const getDeviceId = () =>
   getSupportedPlatformInfoSync({
     defaultValue: 'unknown',
     memoKey: 'deviceId',
-    getter: () => RNDeviceInfo.deviceId,
+    getter: () => getConstants().deviceId,
     supportedPlatforms: ['android', 'ios', 'windows'],
   });
 
@@ -113,7 +122,7 @@ export const getModel = () =>
     memoKey: 'model',
     defaultValue: 'unknown',
     supportedPlatforms: ['ios', 'android', 'windows'],
-    getter: () => RNDeviceInfo.model,
+    getter: () => getConstants().model,
   });
 
 export const getBrand = () =>
@@ -121,7 +130,7 @@ export const getBrand = () =>
     memoKey: 'brand',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.brand,
+    getter: () => getConstants().brand,
   });
 
 export const getSystemName = () =>
@@ -131,7 +140,7 @@ export const getSystemName = () =>
     memoKey: 'systemName',
     getter: () =>
       Platform.select({
-        ios: RNDeviceInfo.systemName,
+        ios: getConstants().systemName,
         android: 'Android',
         windows: 'Windows',
         default: 'unknown',
@@ -141,7 +150,7 @@ export const getSystemName = () =>
 export const getSystemVersion = () =>
   getSupportedPlatformInfoSync({
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.systemVersion,
+    getter: () => getConstants().systemVersion,
     supportedPlatforms: ['android', 'ios', 'windows'],
     memoKey: 'systemVersion',
   });
@@ -167,7 +176,7 @@ export const getBundleId = () =>
     memoKey: 'bundleId',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.bundleId,
+    getter: () => getConstants().bundleId,
   });
 
 export const [
@@ -185,7 +194,7 @@ export const getApplicationName = () =>
   getSupportedPlatformInfoSync({
     memoKey: 'appName',
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.appName,
+    getter: () => getConstants().appName,
     supportedPlatforms: ['android', 'ios', 'windows'],
   });
 
@@ -193,7 +202,7 @@ export const getBuildNumber = () =>
   getSupportedPlatformInfoSync({
     memoKey: 'buildNumber',
     supportedPlatforms: ['android', 'ios', 'windows'],
-    getter: () => RNDeviceInfo.buildNumber,
+    getter: () => getConstants().buildNumber,
     defaultValue: 'unknown',
   });
 
@@ -202,7 +211,7 @@ export const getVersion = () =>
     memoKey: 'version',
     defaultValue: 'unknown',
     supportedPlatforms: ['android', 'ios', 'windows'],
-    getter: () => RNDeviceInfo.appVersion,
+    getter: () => getConstants().appVersion,
   });
 
 export function getReadableVersion() {
@@ -371,7 +380,15 @@ export const isTablet = () =>
     defaultValue: false,
     supportedPlatforms: ['android', 'ios', 'windows'],
     memoKey: 'tablet',
-    getter: () => RNDeviceInfo.isTablet,
+    getter: () => getConstants().isTablet,
+  });
+
+export const isDisplayZoomed = () =>
+  getSupportedPlatformInfoSync({
+    defaultValue: false,
+    supportedPlatforms: ['ios'],
+    memoKey: 'zoomed',
+    getter: () => getConstants().isDisplayZoomed,
   });
 
 export const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(
@@ -386,6 +403,7 @@ export const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPl
 let notch: boolean;
 export function hasNotch() {
   if (notch === undefined) {
+    console.log(RNDeviceInfo);
     let _brand = getBrand();
     let _model = getModel();
     notch =
@@ -550,8 +568,8 @@ export const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFuncti
   Partial<PowerState>
 >({
   supportedPlatforms: ['ios', 'android', 'windows', 'web'],
-  getter: () => RNDeviceInfo.getPowerState(),
-  syncGetter: () => RNDeviceInfo.getPowerStateSync(),
+  getter: () => RNDeviceInfo.getPowerState() as Promise<Partial<PowerState>>,
+  syncGetter: () => RNDeviceInfo.getPowerStateSync() as Partial<PowerState>,
   defaultValue: {},
 });
 
@@ -583,7 +601,7 @@ export const getDeviceType = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.deviceType,
+    getter: () => getConstants().deviceType,
   });
 };
 
@@ -592,7 +610,7 @@ export const getDeviceTypeSync = () => {
     memoKey: 'deviceType',
     supportedPlatforms: ['android', 'ios', 'windows'],
     defaultValue: 'unknown',
-    getter: () => RNDeviceInfo.deviceType,
+    getter: () => getConstants().deviceType,
   });
 };
 
@@ -693,8 +711,8 @@ export const [
   getAvailableLocationProvidersSync,
 ] = getSupportedPlatformInfoFunctions({
   supportedPlatforms: ['android', 'ios'],
-  getter: () => RNDeviceInfo.getAvailableLocationProviders(),
-  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),
+  getter: () => RNDeviceInfo.getAvailableLocationProviders() as Promise<LocationProviderInfo>,
+  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync() as LocationProviderInfo,
   defaultValue: {},
 });
 
@@ -712,7 +730,7 @@ export async function getDeviceToken() {
   return 'unknown';
 }
 
-const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);
+const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);
 export function useBatteryLevel(): number | null {
   const [batteryLevel, setBatteryLevel] = useState<number | null>(null);
 
@@ -972,6 +990,7 @@ const DeviceInfo: DeviceInfoModule = {
   isKeyboardConnectedSync,
   isTabletMode,
   isTablet,
+  isDisplayZoomed,
   supported32BitAbis,
   supported32BitAbisSync,
   supported64BitAbis,
diff --git a/node_modules/react-native-device-info/src/internal/asyncHookWrappers.ts b/node_modules/react-native-device-info/src/internal/asyncHookWrappers.ts
index 2f39850..aa69cd1 100644
--- a/node_modules/react-native-device-info/src/internal/asyncHookWrappers.ts
+++ b/node_modules/react-native-device-info/src/internal/asyncHookWrappers.ts
@@ -1,5 +1,6 @@
 import { useState, useEffect } from 'react';
-import { NativeEventEmitter, NativeModules } from 'react-native';
+import { NativeEventEmitter } from 'react-native';
+import RNDeviceInfo from './nativeInterface';
 import type { AsyncHookResult } from './types';
 
 /**
@@ -26,7 +27,7 @@ export function useOnMount<T>(asyncGetter: () => Promise<T>, initialResult: T):
   return response;
 }
 
-export const deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);
+export const deviceInfoEmitter = new NativeEventEmitter(RNDeviceInfo);
 
 /**
  * simple hook wrapper for handling events
diff --git a/node_modules/react-native-device-info/src/internal/nativeInterface.native.ts b/node_modules/react-native-device-info/src/internal/nativeInterface.native.ts
new file mode 100644
index 0000000..6408740
--- /dev/null
+++ b/node_modules/react-native-device-info/src/internal/nativeInterface.native.ts
@@ -0,0 +1,3 @@
+import RNDeviceInfoModule from '../fabric/NativeDeviceInfoModule';
+
+export default RNDeviceInfoModule;
diff --git a/node_modules/react-native-device-info/src/internal/nativeInterface.ts b/node_modules/react-native-device-info/src/internal/nativeInterface.ts
index 0e47d75..0ce6bc1 100644
--- a/node_modules/react-native-device-info/src/internal/nativeInterface.ts
+++ b/node_modules/react-native-device-info/src/internal/nativeInterface.ts
@@ -1,12 +1,6 @@
-import { Platform, NativeModules } from 'react-native';
-import { DeviceInfoNativeModule } from './privateTypes';
+import { Platform } from 'react-native';
 
-let RNDeviceInfo: DeviceInfoNativeModule | undefined = NativeModules.RNDeviceInfo;
-
-// @ts-ignore
-if (Platform.OS === 'web' || Platform.OS === 'dom') {
-  RNDeviceInfo = require('../web');
-}
+let RNDeviceInfo = require('../web');
 
 if (!RNDeviceInfo) {
   // Produce an error if we don't have the native module
@@ -25,4 +19,4 @@ if (!RNDeviceInfo) {
   }
 }
 
-export default RNDeviceInfo as DeviceInfoNativeModule;
+export default RNDeviceInfo;
diff --git a/node_modules/react-native-device-info/src/internal/privateTypes.ts b/node_modules/react-native-device-info/src/internal/privateTypes.ts
index fb71735..9c41855 100644
--- a/node_modules/react-native-device-info/src/internal/privateTypes.ts
+++ b/node_modules/react-native-device-info/src/internal/privateTypes.ts
@@ -8,7 +8,7 @@ export type NotchDevice = {
   [key: string]: string;
 };
 
-interface NativeConstants {
+export interface NativeConstants {
   appName: string;
   appVersion: string;
   brand: string;
@@ -17,6 +17,7 @@ interface NativeConstants {
   deviceId: string;
   deviceType: DeviceType;
   isTablet: boolean;
+  isDisplayZoomed?: boolean;
   model: string;
   systemName: string;
   systemVersion: string;
@@ -179,6 +180,7 @@ export interface DeviceInfoModule extends ExposedNativeMethods {
   isLandscape: () => Promise<boolean>;
   isLandscapeSync: () => boolean;
   isTablet: () => boolean;
+  isDisplayZoomed: () => boolean | undefined;
   supported32BitAbis: () => Promise<string[]>;
   supported32BitAbisSync: () => string[];
   supported64BitAbis: () => Promise<string[]>;
