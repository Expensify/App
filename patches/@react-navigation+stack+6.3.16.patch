diff --git a/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx b/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx
index 1e9ee0e..d85c7b4 100644
--- a/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx
+++ b/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx
@@ -105,14 +105,14 @@ function CardContainer({
   const handleOpen = () => {
     const { route } = scene.descriptor;
 
-    onTransitionEnd({ route }, false);
+    onTransitionEnd({ route }, false, scene.descriptor.navigation.getState());
     onOpenRoute({ route });
   };
 
   const handleClose = () => {
     const { route } = scene.descriptor;
 
-    onTransitionEnd({ route }, true);
+    onTransitionEnd({ route }, true, scene.descriptor.navigation.getState());
     onCloseRoute({ route });
   };
 
@@ -120,7 +120,7 @@ function CardContainer({
     const { route } = scene.descriptor;
 
     onPageChangeStart();
-    onGestureStart({ route });
+    onGestureStart({ route }, scene.descriptor.navigation.getState());
   };
 
   const handleGestureCanceled = () => {
diff --git a/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx b/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
index 6bbce10..73594d3 100644
--- a/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
+++ b/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx
@@ -385,19 +385,47 @@ export default class StackView extends React.Component<Props, State> {
 
   private handleTransitionEnd = (
     { route }: { route: Route<string> },
-    closing: boolean
-  ) =>
+    closing: boolean,
+    state: StackNavigationState<ParamListBase>
+  ) => {
     this.props.navigation.emit({
       type: 'transitionEnd',
       data: { closing },
       target: route.key,
     });
+    // Patch introduced to pass information about events to screens lower in the stack, so they could be safely frozen
+    if (state?.index > 1) {
+      this.props.navigation.emit({
+        type: 'transitionEnd',
+        data: { closing: !closing },
+        target: state.routes[state.index - 2].key,
+      });
+    }
+    // We want the screen behind the closing screen to not be frozen
+    if (state?.index > 0) {
+      this.props.navigation.emit({
+        type: 'transitionEnd',
+        data: { closing: false },
+        target: state.routes[state.index - 1].key,
+      });
+    }
+  }
 
-  private handleGestureStart = ({ route }: { route: Route<string> }) => {
+  private handleGestureStart = (
+      { route }: { route: Route<string> },
+      state: StackNavigationState<ParamListBase>
+    ) => {
     this.props.navigation.emit({
       type: 'gestureStart',
       target: route.key,
     });
+    // Patch introduced to pass information about events to screens lower in the stack, so they could be safely frozen
+    if (state?.index > 1) {
+      this.props.navigation.emit({
+        type: 'gestureStart',
+        target: state.routes[state.index - 2].key,
+      });
+    }
   };
 
   private handleGestureEnd = ({ route }: { route: Route<string> }) => {
