diff --git a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
index 1b8a228..1efeb14 100644
--- a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
+++ b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
@@ -719,21 +719,22 @@ class VirtualizedList extends StateSafePureComponent {
         const targetDelta = delta - leftoverDelta;
         if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {
             const node = this._scrollRef.getScrollableNode();
-            if (isHorizontal) {
-                ev.target.scrollLeft += targetDelta;
-                const nextScrollLeft = node.scrollLeft - leftoverDelta;
-                node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;
             
+            if (isHorizontal) {
                 if (Math.abs(deltaX) > Math.abs(deltaY)) {
-                    ev.preventDefault();
+                  ev.target.scrollLeft += targetDelta;
+                  const nextScrollLeft = node.scrollLeft - leftoverDelta;
+                  node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;
+                  ev.preventDefault();
+                  ev.stopPropagation();
                 }
             } else {
-                ev.target.scrollTop += targetDelta;
-                const nextScrollTop = node.scrollTop - leftoverDelta;
-                node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;
-
                 if (Math.abs(deltaY) > Math.abs(deltaX)) {
-                    ev.preventDefault();
+                  ev.target.scrollTop += targetDelta;
+                  const nextScrollTop = node.scrollTop - leftoverDelta;
+                  node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;
+                  ev.preventDefault();
+                  ev.stopPropagation();
                 }
             }
         }
