diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
index 4827219..2e7b1a1 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
@@ -114,6 +114,7 @@ - (void)didMoveToWindow
     const auto &props = static_cast<const TextInputProps &>(*_props);
     if (props.autoFocus) {
       [_backedTextInputView becomeFirstResponder];
+      [self scrollCursorIntoView];
     }
     _didMoveToWindow = YES;
     [self initializeReturnKeyType];
@@ -342,6 +343,7 @@ - (BOOL)textInputShouldBeginEditing
 
 - (void)textInputDidBeginEditing
 {
+  [self scrollCursorIntoView];
   if (_eventEmitter) {
     static_cast<const TextInputEventEmitter &>(*_eventEmitter).onFocus([self _textInputMetrics]);
   }
@@ -729,6 +731,15 @@ - (void)_setAttributedString:(NSAttributedString *)attributedString
   _lastStringStateWasUpdatedWith = attributedString;
 }
 
+- (void)scrollCursorIntoView {
+    UITextRange *selectedRange = _backedTextInputView.selectedTextRange;
+    if (selectedRange.empty) {
+      NSInteger offsetStart = [_backedTextInputView offsetFromPosition:_backedTextInputView.beginningOfDocument
+                                                            toPosition:selectedRange.start];
+      [_backedTextInputView scrollRangeToVisible:NSMakeRange(offsetStart, 0)];
+    }
+}
+
 // Ensure that newly typed text will inherit any custom attributes. We follow the logic of RN Android, where attributes
 // to the left of the cursor are copied into new text, unless we are at the start of the field, in which case we will
 // copy the attributes from text to the right. This allows consistency between backed input and new AttributedText
