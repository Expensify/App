diff --git a/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAccessibilityComponent.js b/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAccessibilityComponent.js
index 9c9a533..7794181 100644
--- a/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAccessibilityComponent.js
+++ b/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAccessibilityComponent.js
@@ -27,7 +27,8 @@ var roleComponents = {
   navigation: 'nav',
   paragraph: 'p',
   region: 'section',
-  strong: 'strong'
+  strong: 'strong',
+  switch: 'button'
 };
 var emptyObject = {};
 var propsToAccessibilityComponent = function propsToAccessibilityComponent(props) {
diff --git a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
index 7f6c880..b05da08 100644
--- a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
+++ b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
@@ -78,14 +78,6 @@ function scrollEventThrottleOrDefault(scrollEventThrottle) {
 function windowSizeOrDefault(windowSize) {
   return windowSize !== null && windowSize !== void 0 ? windowSize : 21;
 }
-function findLastWhere(arr, predicate) {
-  for (var i = arr.length - 1; i >= 0; i--) {
-    if (predicate(arr[i])) {
-      return arr[i];
-    }
-  }
-  return null;
-}
 
 /**
  * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)
@@ -1107,7 +1099,8 @@ class VirtualizedList extends StateSafePureComponent {
       _keylessItemComponentName = '';
       var spacerKey = this._getSpacerKey(!horizontal);
       var renderRegions = this.state.renderMask.enumerateRegions();
-      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);
+      var lastRegion = renderRegions[renderRegions.length - 1];
+      var lastSpacer = lastRegion?.isSpacer ? lastRegion : null;
       for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {
         var section = _step.value;
         if (section.isSpacer) {
