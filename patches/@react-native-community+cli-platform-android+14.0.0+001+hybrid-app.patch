diff --git a/node_modules/@react-native-community/cli-platform-android/native_modules.gradle b/node_modules/@react-native-community/cli-platform-android/native_modules.gradle
index 43296c6..0d91033 100644
--- a/node_modules/@react-native-community/cli-platform-android/native_modules.gradle
+++ b/node_modules/@react-native-community/cli-platform-android/native_modules.gradle
@@ -149,16 +149,18 @@ class ReactNativeModules {
   private ProviderFactory providers
   private String packageName
   private File root
+  private File rnRoot
   private ArrayList<HashMap<String, String>> reactNativeModules
   private HashMap<String, ArrayList> reactNativeModulesBuildVariants
   private String reactNativeVersion
 
   private static String LOG_PREFIX = ":ReactNative:"
 
-  ReactNativeModules(Logger logger, ProviderFactory providers, File root) {
+  ReactNativeModules(Logger logger, ProviderFactory providers, File root, File rnRoot) {
     this.logger = logger
     this.providers = providers
     this.root = root
+    this.rnRoot = rnRoot
 
     def (nativeModules, reactNativeModulesBuildVariants, androidProject, reactNativeVersion) = this.getReactNativeConfig()
     this.reactNativeModules = nativeModules
@@ -440,10 +442,10 @@ class ReactNativeModules {
      */
     def cliResolveScript = "try {console.log(require('@react-native-community/cli').bin);} catch (e) {console.log(require('react-native/cli').bin);}"
     String[] nodeCommand = ["node", "-e", cliResolveScript]
-    def cliPath = this.getCommandOutput(nodeCommand, this.root)
+    def cliPath = this.getCommandOutput(nodeCommand, this.rnRoot)
 
     String[] reactNativeConfigCommand = ["node", cliPath, "config", "--platform", "android"]
-    def reactNativeConfigOutput = this.getCommandOutput(reactNativeConfigCommand, this.root)
+    def reactNativeConfigOutput = this.getCommandOutput(reactNativeConfigCommand, this.rnRoot)
 
     def json
     try {
@@ -513,7 +515,13 @@ class ReactNativeModules {
  */
 def projectRoot = rootProject.projectDir
 
-def autoModules = new ReactNativeModules(logger, providers, projectRoot)
+def autoModules 
+
+if(this.hasProperty('reactNativeProject')){
+    autoModules = new ReactNativeModules(logger, providers, projectRoot, new File(projectRoot, reactNativeProject))
+} else {
+    autoModules = new ReactNativeModules(logger, providers, projectRoot, projectRoot)
+}
 
 def reactNativeVersionRequireNewArchEnabled(autoModules) {
     def rnVersion = autoModules.reactNativeVersion
