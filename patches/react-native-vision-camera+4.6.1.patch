diff --git a/node_modules/react-native-vision-camera/android/.editorconfig b/node_modules/react-native-vision-camera/android/.editorconfig
new file mode 100644
index 0000000..2f08d6d
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/.editorconfig
@@ -0,0 +1,15 @@
+[*.{kt,kts}]
+indent_style=space
+indent_size=2
+continuation_indent_size=4
+insert_final_newline=true
+max_line_length=140
+ktlint_code_style=android_studio
+ktlint_standard=enabled
+ktlint_experimental=enabled
+ktlint_standard_filename=disabled # dont require PascalCase filenames
+ktlint_standard_no-wildcard-imports=disabled # allow .* imports
+ktlint_function_signature_rule_force_multiline_when_parameter_count_greater_or_equal_than=5
+ktlint_function_signature_body_expression_wrapping=multiline
+ij_kotlin_allow_trailing_comma_on_call_site=false
+ij_kotlin_allow_trailing_comma=false
diff --git a/node_modules/react-native-vision-camera/android/.project b/node_modules/react-native-vision-camera/android/.project
new file mode 100644
index 0000000..0e0a1ba
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>android_</name>
+	<comment>Project android_ created by Buildship.</comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.buildship.core.gradleprojectbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.buildship.core.gradleprojectnature</nature>
+	</natures>
+</projectDescription>
diff --git a/node_modules/react-native-vision-camera/android/gradlew b/node_modules/react-native-vision-camera/android/gradlew
new file mode 100644
index 0000000..1b6c787
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/gradlew
@@ -0,0 +1,234 @@
+#!/bin/sh
+
+#
+# Copyright © 2015-2021 the original authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+##############################################################################
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
+##############################################################################
+
+# Attempt to set APP_HOME
+
+# Resolve links: $0 may be a link
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
+done
+
+APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
+
+APP_NAME="Gradle"
+APP_BASE_NAME=${0##*/}
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD=maximum
+
+warn () {
+    echo "$*"
+} >&2
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+} >&2
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD=$JAVA_HOME/jre/sh/java
+    else
+        JAVACMD=$JAVA_HOME/bin/java
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD=java
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
+fi
+
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
+
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
+        fi
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
+    done
+fi
+
+# Collect all arguments for the java command;
+#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
+#     shell script including quotes and variable substitutions, so put them in
+#     double quotes to make sure that they get re-expanded; and
+#   * put everything else in single quotes, so that it's not re-expanded.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        org.gradle.wrapper.GradleWrapperMain \
+        "$@"
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
+
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
+
+exec "$JAVACMD" "$@"
diff --git a/node_modules/react-native-vision-camera/android/gradlew.bat b/node_modules/react-native-vision-camera/android/gradlew.bat
new file mode 100644
index 0000000..107acd3
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/gradlew.bat
@@ -0,0 +1,89 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerDelegate.java b/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerDelegate.java
new file mode 100644
index 0000000..a1bed79
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerDelegate.java
@@ -0,0 +1,113 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class CameraViewManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & CameraViewManagerInterface<T>> extends aseViewManagerDelegate<T, U> {
+  public CameraViewManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "enableGpuBuffers":
+        mViewManager.setEnableGpuBuffers(view, value == null ? false : (boolean) value);
+        break;
+      case "androidPreviewViewType":
+        mViewManager.setAndroidPreviewViewType(view, value == null ? null : (String) value);
+        break;
+      case "codeScannerOptions":
+        mViewManager.setCodeScannerOptions(view, (ReadableMap) value);
+        break;
+      case "cameraId":
+        mViewManager.setCameraId(view, value == null ? null : (String) value);
+        break;
+      case "enableFrameProcessor":
+        mViewManager.setEnableFrameProcessor(view, value == null ? false : (boolean) value);
+        break;
+      case "enableLocation":
+        mViewManager.setEnableLocation(view, value == null ? false : (boolean) value);
+        break;
+      case "enableBufferCompression":
+        mViewManager.setEnableBufferCompression(view, value == null ? false : (boolean) value);
+        break;
+      case "photoQualityBalance":
+        mViewManager.setPhotoQualityBalance(view, value == null ? null : (String) value);
+        break;
+      case "isActive":
+        mViewManager.setIsActive(view, value == null ? false : (boolean) value);
+        break;
+      case "photo":
+        mViewManager.setPhoto(view, value == null ? false : (boolean) value);
+        break;
+      case "video":
+        mViewManager.setVideo(view, value == null ? false : (boolean) value);
+        break;
+      case "audio":
+        mViewManager.setAudio(view, value == null ? false : (boolean) value);
+        break;
+      case "torch":
+        mViewManager.setTorch(view, value == null ? null : (String) value);
+        break;
+      case "zoom":
+        mViewManager.setZoom(view, value == null ? 0f : ((Double) value).doubleValue());
+        break;
+      case "exposure":
+        mViewManager.setExposure(view, value == null ? 0f : ((Double) value).doubleValue());
+        break;
+      case "enableZoomGesture":
+        mViewManager.setEnableZoomGesture(view, value == null ? false : (boolean) value);
+        break;
+      case "enableFpsGraph":
+        mViewManager.setEnableFpsGraph(view, value == null ? false : (boolean) value);
+        break;
+      case "resizeMode":
+        mViewManager.setResizeMode(view, value == null ? null : (String) value);
+        break;
+      case "format":
+        mViewManager.setFormat(view, (ReadableMap) value);
+        break;
+      case "pixelFormat":
+        mViewManager.setPixelFormat(view, value == null ? null : (String) value);
+        break;
+      case "fps":
+        mViewManager.setFps(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "videoHdr":
+        mViewManager.setVideoHdr(view, value == null ? false : (boolean) value);
+        break;
+      case "photoHdr":
+        mViewManager.setPhotoHdr(view, value == null ? false : (boolean) value);
+        break;
+      case "lowLightBoost":
+        mViewManager.setLowLightBoost(view, value == null ? false : (boolean) value);
+        break;
+      case "videoStabilizationMode":
+        mViewManager.setVideoStabilizationMode(view, value == null ? null : (String) value);
+        break;
+      case "enableDepthData":
+        mViewManager.setEnableDepthData(view, value == null ? false : (boolean) value);
+        break;
+      case "enablePortraitEffectsMatteDelivery":
+        mViewManager.setEnablePortraitEffectsMatteDelivery(view, value == null ? false : (boolean) value);
+        break;
+      case "orientation":
+        mViewManager.setOrientation(view, value == null ? null : (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerInterface.java b/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerInterface.java
new file mode 100644
index 0000000..94079b2
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/oldarch/src/main/java/com/facebook/react/viewmanagers/CameraViewManagerInterface.java
@@ -0,0 +1,45 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableMap;
+
+public interface CameraViewManagerInterface<T extends View> {
+  void setEnableGpuBuffers(T view, boolean value);
+  void setAndroidPreviewViewType(T view, @Nullable String value);
+  void setCodeScannerOptions(T view, @Nullable ReadableMap value);
+  void setCameraId(T view, @Nullable String value);
+  void setEnableFrameProcessor(T view, boolean value);
+  void setEnableLocation(T view, boolean value);
+  void setEnableBufferCompression(T view, boolean value);
+  void setPhotoQualityBalance(T view, @Nullable String value);
+  void setIsActive(T view, boolean value);
+  void setPhoto(T view, boolean value);
+  void setVideo(T view, boolean value);
+  void setAudio(T view, boolean value);
+  void setTorch(T view, @Nullable String value);
+  void setZoom(T view, double value);
+  void setExposure(T view, double value);
+  void setEnableZoomGesture(T view, boolean value);
+  void setEnableFpsGraph(T view, boolean value);
+  void setResizeMode(T view, @Nullable String value);
+  void setFormat(T view, @Nullable ReadableMap value);
+  void setPixelFormat(T view, @Nullable String value);
+  void setFps(T view, int value);
+  void setVideoHdr(T view, boolean value);
+  void setPhotoHdr(T view, boolean value);
+  void setLowLightBoost(T view, boolean value);
+  void setVideoStabilizationMode(T view, @Nullable String value);
+  void setEnableDepthData(T view, boolean value);
+  void setEnablePortraitEffectsMatteDelivery(T view, boolean value);
+  void setOrientation(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-vision-camera/android/settings.gradle b/node_modules/react-native-vision-camera/android/settings.gradle
new file mode 100644
index 0000000..56a6c3d
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/settings.gradle
@@ -0,0 +1,3 @@
+rootProject.name = 'VisionCamera'
+
+include ':VisionCamera'
diff --git a/node_modules/react-native-vision-camera/android/src/main/.DS_Store b/node_modules/react-native-vision-camera/android/src/main/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-vision-camera/ios/.swiftformat b/node_modules/react-native-vision-camera/ios/.swiftformat
new file mode 100644
index 0000000..95e71c1
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/.swiftformat
@@ -0,0 +1,12 @@
+--allman false
+--indent 2
+--exclude Pods,Generated
+
+--disable andOperator
+--disable redundantReturn
+--disable wrapMultilineStatementBraces
+--disable organizeDeclarations
+
+--enable markTypes
+
+--enable isEmpty
diff --git a/node_modules/react-native-vision-camera/ios/.swiftlint.yml b/node_modules/react-native-vision-camera/ios/.swiftlint.yml
new file mode 100644
index 0000000..1a72686
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/.swiftlint.yml
@@ -0,0 +1,52 @@
+disabled_rules:
+    - identifier_name
+    - trailing_comma
+    - todo
+    - type_body_length
+    - cyclomatic_complexity
+    - function_body_length
+    - for_where
+opt_in_rules:
+    - contains_over_filter_count
+    - contains_over_filter_is_empty
+    - contains_over_first_not_nil
+    - contains_over_range_nil_comparison
+    - empty_collection_literal
+    - empty_count
+    - empty_string
+    - first_where
+    - flatmap_over_map_reduce
+    - last_where
+    - reduce_boolean
+    - reduce_into
+    - yoda_condition
+    - vertical_whitespace_opening_braces
+    - vertical_whitespace_closing_braces
+    - vertical_parameter_alignment_on_call
+    - untyped_error_in_catch
+    - unowned_variable_capture
+    - unavailable_function
+    - switch_case_on_newline
+    - static_operator
+    - strict_fileprivate
+    - sorted_imports
+    - sorted_first_last
+    - required_enum_case
+    - redundant_type_annotation
+    - redundant_nil_coalescing
+    - attributes
+    - convenience_type
+analyzer_rules:
+    - explicit_self
+    - unused_declaration
+    - unused_import
+
+excluded: # paths to ignore during linting. Takes precedence over `included`.
+    - Pods
+
+# Adjust rule numbers
+line_length: 160
+file_length: 500
+
+# reporter type (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)
+reporter: 'xcode'
diff --git a/node_modules/react-native-vision-camera/ios/RNCameraView.h b/node_modules/react-native-vision-camera/ios/RNCameraView.h
new file mode 100644
index 0000000..46c2c2c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/RNCameraView.h
@@ -0,0 +1,14 @@
+// This guard prevent this file to be compiled in the old architecture.
+#ifdef RCT_NEW_ARCH_ENABLED
+#import <React/RCTViewComponentView.h>
+#import <UIKit/UIKit.h>
+
+
+NS_ASSUME_NONNULL_BEGIN
+
+@interface RNCameraView : RCTViewComponentView
+@end
+
+NS_ASSUME_NONNULL_END
+
+#endif /* RCT_NEW_ARCH_ENABLED */
diff --git a/node_modules/react-native-vision-camera/ios/RNCameraView.mm b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
new file mode 100644
index 0000000..20f4996
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
@@ -0,0 +1,394 @@
+// This guard prevent the code from being compiled in the old architecture
+#ifdef RCT_NEW_ARCH_ENABLED
+#import <React/RCTViewComponentView.h>
+
+#import <react/renderer/components/RNVisionCameraSpec/ComponentDescriptors.h>
+#import <react/renderer/components/RNVisionCameraSpec/EventEmitters.h>
+#import <react/renderer/components/RNVisionCameraSpec/Props.h>
+#import <react/renderer/components/RNVisionCameraSpec/RCTComponentViewHelpers.h>
+
+#import "RCTFabricComponentsPlugins.h"
+#import <AVFoundation/AVCaptureAudioDataOutput.h>
+#import <AVFoundation/AVCaptureVideoDataOutput.h>
+#import <React/RCTViewManager.h>
+#import <React/RCTConversions.h>
+
+#ifdef USE_FRAMEWORKS
+#import <VisionCamera/VisionCamera-Swift.h>
+#else
+#import "VisionCamera-Swift.h"
+#endif
+
+@interface RNCameraView : RCTViewComponentView <RNCameraViewDirectEventDelegate>
+@end
+
+
+using namespace facebook::react;
+
+@implementation RNCameraView {
+    CameraView * _view;
+}
+
++ (ComponentDescriptorProvider)componentDescriptorProvider
+{
+    return concreteComponentDescriptorProvider<CameraViewComponentDescriptor>();
+}
+
+- (void) initCamera {
+    static const auto defaultProps = std::make_shared<const CameraViewProps>();
+    _props = defaultProps;
+
+    // The remaining part of the initializer is standard bjective-C code to create views and layout them with utoLayout. Here we can change whatever we want to.
+    _view = [[CameraView alloc] init];
+    _view.delegate = self;    
+
+    self.contentView = _view;
+}
+
+- (instancetype)initWithFrame:(CGRect)frame
+{
+    self = [super initWithFrame:frame];
+    if (self) {
+        [self initCamera];
+    }
+
+    return self;
+}
+
+- (void) prepareForRecycle {
+    [super prepareForRecycle];
+
+    self.contentView = _view;
+    _view.delegate = nil;
+    _view = nil;
+    self.contentView = nil;
+}
+
+// why we need this func -> https://reactnative.dev/docs/next/the-new-architecture/pillars-fabric-components#write-the-native-ios-code
+- (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &)oldProps
+{
+    if (_view == nil) {
+      [self initCamera];
+    }
+
+    const auto &newViewProps = *std::static_pointer_cast<CameraViewProps const>(props);
+    const auto &oldViewProps = *std::static_pointer_cast<CameraViewProps const>(_props);
+    
+    NSMutableArray* changedProps = [[NSMutableArray alloc] init];
+    
+    if(oldViewProps.isActive != newViewProps.isActive){
+        _view.isActive = newViewProps.isActive;
+        [changedProps addObject:@"isActive"];
+    }
+    if(oldViewProps.cameraId != newViewProps.cameraId){
+        _view.cameraId = RCTNSStringFromString(newViewProps.cameraId);
+        [changedProps addObject:@"cameraId"];
+    }
+    if(oldViewProps.photoQualityBalance != newViewProps.photoQualityBalance){
+        _view.photoQualityBalance = RCTNSStringFromString(newViewProps.photoQualityBalance);
+        [changedProps addObject:@"photoQualityBalance"];
+    }
+    if(oldViewProps.enableDepthData != newViewProps.enableDepthData){
+        _view.enableDepthData = newViewProps.enableDepthData;
+        [changedProps addObject:@"enableDepthData"];
+    }
+    if(oldViewProps.enablePortraitEffectsMatteDelivery != newViewProps.enablePortraitEffectsMatteDelivery){
+        _view.enablePortraitEffectsMatteDelivery = newViewProps.enablePortraitEffectsMatteDelivery;
+        [changedProps addObject:@"enablePortraitEffectsMatteDelivery"];
+    }
+    if(oldViewProps.photo != newViewProps.photo){
+        _view.photo = [NSNumber numberWithBool:newViewProps.photo];
+        [changedProps addObject:@"photo"];
+    }
+    if(oldViewProps.video != newViewProps.video){
+        _view.video = [NSNumber numberWithBool:newViewProps.video];
+        [changedProps addObject:@"video"];
+    }
+    if(oldViewProps.audio != newViewProps.audio){
+        _view.audio = [NSNumber numberWithBool:newViewProps.audio];
+        [changedProps addObject:@"audio"];
+    }
+    if(oldViewProps.enableFrameProcessor != newViewProps.enableFrameProcessor){
+        _view.enableFrameProcessor = newViewProps.enableFrameProcessor;
+        [changedProps addObject:@"enableFrameProcessor"];
+    }
+    if(oldViewProps.enableLocation != newViewProps.enableLocation){
+        _view.enableLocation = newViewProps.enableLocation;
+        [changedProps addObject:@"enableLocation"];
+    }
+    if(oldViewProps.enableBufferCompression != newViewProps.enableBufferCompression){
+        _view.enableBufferCompression = newViewProps.enableBufferCompression;
+        [changedProps addObject:@"enableBufferCompression"];
+    }
+    if(oldViewProps.fps != newViewProps.fps){
+        _view.fps = [NSNumber numberWithInt:newViewProps.fps];
+        [changedProps addObject:@"fps"];
+    }
+    if(oldViewProps.videoHdr != newViewProps.videoHdr){
+        _view.videoHdr = newViewProps.videoHdr;
+        [changedProps addObject:@"videoHdr"];
+    }
+    if(oldViewProps.photoHdr != newViewProps.photoHdr){
+        _view.photoHdr = newViewProps.photoHdr;
+        [changedProps addObject:@"photoHdr"];
+    }
+    if(oldViewProps.lowLightBoost != newViewProps.lowLightBoost){
+        _view.lowLightBoost = newViewProps.lowLightBoost;
+        [changedProps addObject:@"lowLightBoost"];
+    }
+    if(oldViewProps.videoStabilizationMode != newViewProps.videoStabilizationMode){
+        _view.videoStabilizationMode = RCTNSStringFromString(newViewProps.videoStabilizationMode);
+        [changedProps addObject:@"videoStabilizationMode"];
+    }
+    if(oldViewProps.torch != newViewProps.torch){
+        _view.torch = RCTNSStringFromString(newViewProps.torch);
+        [changedProps addObject:@"torch"];
+    }
+    if(oldViewProps.orientation != newViewProps.orientation){
+        _view.orientation = RCTNSStringFromString(newViewProps.orientation);
+        [changedProps addObject:@"orientation"];
+    }
+    if(oldViewProps.resizeMode != newViewProps.resizeMode){
+        _view.resizeMode = RCTNSStringFromString(newViewProps.resizeMode);
+        [changedProps addObject:@"resizeMode"];
+    }
+    if(oldViewProps.pixelFormat != newViewProps.pixelFormat){
+        _view.pixelFormat = RCTNSStringFromString(newViewProps.pixelFormat);
+        [changedProps addObject:@"pixelFormat"];
+    }
+    if(oldViewProps.zoom != newViewProps.zoom){
+        _view.zoom = [NSNumber numberWithDouble:newViewProps.zoom];
+        [changedProps addObject:@"zoom"];
+    }
+    if(oldViewProps.exposure != newViewProps.exposure){
+        _view.exposure = [NSNumber numberWithDouble:newViewProps.exposure];
+        [changedProps addObject:@"exposure"];
+    }
+    if(oldViewProps.enableZoomGesture != newViewProps.enableZoomGesture){
+        _view.enableZoomGesture = newViewProps.enableZoomGesture;
+        [changedProps addObject:@"enableZoomGesture"];
+    }
+    if(oldViewProps.enableFpsGraph != newViewProps.enableFpsGraph){
+        _view.enableFpsGraph = newViewProps.enableFpsGraph;
+        [changedProps addObject:@"enableFpsGraph"];
+    }
+    
+        
+    if(_view.format == nil){
+        _view.format =[ [NSMutableDictionary alloc] init];
+    }
+    
+
+    //Checking format props, TODO: find cleaner way to do it
+    if(oldViewProps.format.supportsDepthCapture != newViewProps.format.supportsDepthCapture){
+        NSNumber* supportsDepthCapture = newViewProps.format.supportsDepthCapture ? @1 : @0;
+        [_view.format setValue:supportsDepthCapture forKey:@"supportsDepthCapture"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.autoFocusSystem != newViewProps.format.autoFocusSystem){
+        [_view.format setValue:RCTNSStringFromString(newViewProps.format.autoFocusSystem) forKey:@"autoFocusSystem"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.pixelFormats.size() != newViewProps.format.pixelFormats.size()){
+        NSMutableArray* newPixelFormats = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.format.pixelFormats.size(); i++){
+            [newPixelFormats addObject:RCTNSStringFromString(newViewProps.format.pixelFormats.at(i))];
+        }
+        [_view.format setValue:newPixelFormats forKey:@"pixelFormats"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.videoStabilizationModes.size() != newViewProps.format.videoStabilizationModes.size()){
+        NSMutableArray* newVideoStabilizationModes = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.format.videoStabilizationModes.size(); i++){
+            [newVideoStabilizationModes addObject:RCTNSStringFromString(newViewProps.format.videoStabilizationModes.at(i))];
+        }
+        [_view.format setValue:newVideoStabilizationModes forKey:@"videoStabilizationModes"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.photoHeight != newViewProps.format.photoHeight){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.photoHeight] forKey:@"photoHeight"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.photoWidth != newViewProps.format.photoWidth){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.photoWidth] forKey:@"photoWidth"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.videoHeight != newViewProps.format.videoHeight){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.videoHeight] forKey:@"videoHeight"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.videoWidth != newViewProps.format.videoWidth){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.videoWidth] forKey:@"videoWidth"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.maxISO != newViewProps.format.maxISO){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.maxISO] forKey:@"maxISO"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.minISO != newViewProps.format.minISO){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.minISO] forKey:@"minISO"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.maxFps != newViewProps.format.maxFps){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.maxFps] forKey:@"maxFps"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.minFps != newViewProps.format.minFps){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.minFps] forKey:@"minFps"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.fieldOfView != newViewProps.format.fieldOfView){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.fieldOfView] forKey:@"fieldOfView"];
+        [changedProps addObject:@"format"];
+    }
+
+    if(oldViewProps.format.supportsVideoHDR != newViewProps.format.supportsVideoHDR){
+        NSNumber* supportsVideoHDR = newViewProps.format.supportsVideoHDR ? @1 : @0;
+        [_view.format setValue:supportsVideoHDR forKey:@"supportsVideoHDR"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.supportsPhotoHDR != newViewProps.format.supportsPhotoHDR){
+        NSNumber* supportsPhotoHDR = newViewProps.format.supportsPhotoHDR ? @1 : @0;
+        [_view.format setValue:supportsPhotoHDR forKey:@"supportsPhotoHDR"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if (_view.format.count == 0) {
+        _view.format = nil;
+    }
+    
+    if(_view.codeScannerOptions == nil){
+        _view.codeScannerOptions =[[NSMutableDictionary alloc] init];
+    }
+
+    if(oldViewProps.codeScannerOptions.codeTypes.size() != newViewProps.codeScannerOptions.codeTypes.size()){
+        NSMutableArray* newCodeTypes = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.codeScannerOptions.codeTypes.size(); i++){
+            [newCodeTypes addObject:RCTNSStringFromString(newViewProps.codeScannerOptions.codeTypes.at(i))];
+        }
+        [_view.codeScannerOptions setValue:newCodeTypes forKey:@"codeTypes"];
+        [changedProps addObject:@"codeScannerOptions"];
+    }
+    
+    if(oldViewProps.codeScannerOptions.interval != newViewProps.codeScannerOptions.interval){
+        [_view.codeScannerOptions setValue:[NSNumber numberWithDouble:newViewProps.codeScannerOptions.interval] forKey:@"interval"];
+        [changedProps addObject:@"codeScannerOptions"];
+    }
+    
+    if(
+       oldViewProps.codeScannerOptions.regionOfInterest.x != newViewProps.codeScannerOptions.regionOfInterest.x ||
+       oldViewProps.codeScannerOptions.regionOfInterest.y != newViewProps.codeScannerOptions.regionOfInterest.y ||
+       oldViewProps.codeScannerOptions.regionOfInterest.width != newViewProps.codeScannerOptions.regionOfInterest.width ||
+       oldViewProps.codeScannerOptions.regionOfInterest.height != newViewProps.codeScannerOptions.regionOfInterest.height
+       ){
+        NSDictionary *newRegionOfInterest = @{
+            @"x": @(newViewProps.codeScannerOptions.regionOfInterest.x),
+            @"y": @(newViewProps.codeScannerOptions.regionOfInterest.y),
+            @"width": @(newViewProps.codeScannerOptions.regionOfInterest.width),
+            @"height": @(newViewProps.codeScannerOptions.regionOfInterest.height),
+        };
+        [_view.codeScannerOptions setValue:newRegionOfInterest forKey:@"regionOfInterest"];
+        [changedProps addObject:@"codeScannerOptions"];
+    }
+    
+    if (_view.codeScannerOptions.count == 0) {
+        _view.codeScannerOptions = nil;
+    }
+
+    [_view didSetProps:changedProps];
+
+    [super updateProps:props oldProps:oldProps];
+}
+
+- (void)onViewReady{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onViewReady( CameraViewEventEmitter::OnViewReady{});
+    }
+}
+
+- (void)onErrorWithError:(NSDictionary *)error{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onError( CameraViewEventEmitter::OnError{
+            .code = std::string([(error != nil ? [error objectForKey:@"code"] : @"") UTF8String]),
+            .message = std::string([(error != nil ? [error objectForKey:@"message"] : @"") UTF8String]),
+            .cause = {
+                .code = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"code"] : @"") UTF8String]), // TODO: Further ecure type safety to prevent crashes
+                .domain = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"domain"]  : @"") UTF8String]),
+                .message = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"message"]  : @"") UTF8String]),
+                .details = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"details"]  : @"") UTF8String])
+            }
+        });
+    }
+}
+
+- (void)onInitialized{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onInitialized( CameraViewEventEmitter::OnInitialized{});
+    }
+}
+
+- (void)onCodeScannedWithMessage:(NSDictionary *)message {
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onCodeScanned( CameraViewEventEmitter::OnCodeScanned{
+            .codes = {
+                .type = std::string([(message != nil ? [[message objectForKey:@"codes"] objectForKey:@"type"] : @"") UTF8String]),
+                .value = std::string([(message != nil ? [[message objectForKey:@"codes"] objectForKey:@"value"] : @"") UTF8String]),
+                .frame = {
+                    .x = [(message != nil ? [[[message objectForKey:@"codes"] objectForKey:@"frame"] objectForKey:@"x"] : @0) doubleValue],
+                    .y = [(message != nil ? [[[message objectForKey:@"codes"] objectForKey:@"frame"] objectForKey:@"y"] : @0) doubleValue],
+                    .width = [(message != nil ? [[[message objectForKey:@"codes"] objectForKey:@"frame"] objectForKey:@"width"] : @0) doubleValue],
+                    .height = [(message != nil ? [[[message objectForKey:@"codes"] objectForKey:@"frame"] objectForKey:@"height"] : @0) oubleValue],
+                },
+            },
+            .frame = {
+                .width = [(message != nil ? [[message objectForKey:@"frame"] objectForKey:@"width"] : @0) intValue],
+                .height = [(message != nil ? [[message objectForKey:@"frame"] objectForKey:@"height"] : @0) intValue],
+            },
+            // nothing is sent here from CameraView
+            .corners = {
+                .x = [(message != nil ? [[message objectForKey:@"corners"] objectForKey:@"x"] : @0) doubleValue],
+                .y = [(message != nil ? [[message objectForKey:@"corners"] objectForKey:@"y"] : @0) doubleValue],
+            }
+        });
+    }
+}
+
+
+- (void)onShutterWithMessage:(NSDictionary *)message {
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onShutter( CameraViewEventEmitter::OnShutter{
+            .type = std::string([(message != nil ? [message objectForKey:@"type"] : @"") UTF8String]),
+        });
+    }
+}
+
+
+- (void)onStarted {
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onStarted( CameraViewEventEmitter::OnStarted{});
+    }
+}
+
+
+- (void)onStopped {
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onViewReady( CameraViewEventEmitter::OnViewReady{});
+    }
+}
+
+Class<RCTComponentViewProtocol> CameraViewCls(void)
+{
+    return RNCameraView.class;
+}
+
+@end
+#endif
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
index 4c04727..12b9255 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
@@ -1,27 +1,42 @@
-"use strict";
+'use strict';
 
-Object.defineProperty(exports, "__esModule", {
-  value: true
+Object.defineProperty(exports, '__esModule', {
+    value: true,
 });
 exports.Camera = void 0;
-var _react = _interopRequireDefault(require("react"));
-var _reactNative = require("react-native");
-var _CameraError = require("./CameraError");
-var _NativeCameraModule = require("./NativeCameraModule");
-var _VisionCameraProxy = require("./frame-processors/VisionCameraProxy");
-var _CameraDevices = require("./CameraDevices");
-var _SkiaCameraCanvas = require("./skia/SkiaCameraCanvas");
-var _FpsGraph = require("./FpsGraph");
-var _NativeCameraView = require("./NativeCameraView");
-var _RotationHelper = require("./RotationHelper");
-function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
-function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
+var _react = _interopRequireDefault(require('react'));
+var _reactNative = require('react-native');
+var _CameraError = require('./CameraError');
+var _NativeCameraModule = require('./NativeCameraModule');
+var _VisionCameraProxy = require('./frame-processors/VisionCameraProxy');
+var _CameraDevices = require('./CameraDevices');
+var _SkiaCameraCanvas = require('./skia/SkiaCameraCanvas');
+var _FpsGraph = require('./FpsGraph');
+var _NativeCameraView = require('./NativeCameraView');
+var _RotationHelper = require('./RotationHelper');
+function _interopRequireDefault(e) {
+    return e && e.__esModule ? e : {default: e};
+}
+function _extends() {
+    return (
+        (_extends = Object.assign
+            ? Object.assign.bind()
+            : function (n) {
+                  for (var e = 1; e < arguments.length; e++) {
+                      var t = arguments[e];
+                      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
+                  }
+                  return n;
+              }),
+        _extends.apply(null, arguments)
+    );
+}
 //#region Types
 
 //#endregion
 
 function isSkiaFrameProcessor(frameProcessor) {
-  return frameProcessor?.type === 'drawable-skia';
+    return frameProcessor?.type === 'drawable-skia';
 }
 
 //#region Camera Component
@@ -58,609 +73,597 @@ function isSkiaFrameProcessor(frameProcessor) {
  * @component
  */
 class Camera extends _react.default.PureComponent {
-  /** @internal */
-  static displayName = 'Camera';
-  /** @internal */
-  displayName = Camera.displayName;
-  isNativeViewMounted = false;
-  lastUIRotation = undefined;
-  rotationHelper = new _RotationHelper.RotationHelper();
-  /** @internal */
-  constructor(props) {
-    super(props);
-    this.onViewReady = this.onViewReady.bind(this);
-    this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);
-    this.onInitialized = this.onInitialized.bind(this);
-    this.onStarted = this.onStarted.bind(this);
-    this.onStopped = this.onStopped.bind(this);
-    this.onPreviewStarted = this.onPreviewStarted.bind(this);
-    this.onPreviewStopped = this.onPreviewStopped.bind(this);
-    this.onShutter = this.onShutter.bind(this);
-    this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);
-    this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);
-    this.onError = this.onError.bind(this);
-    this.onCodeScanned = this.onCodeScanned.bind(this);
-    this.ref = /*#__PURE__*/_react.default.createRef();
-    this.lastFrameProcessor = undefined;
-    this.state = {
-      isRecordingWithFlash: false,
-      averageFpsSamples: []
-    };
-  }
-  get handle() {
-    const nodeHandle = (0, _reactNative.findNodeHandle)(this.ref.current);
-    if (nodeHandle == null || nodeHandle === -1) {
-      throw new _CameraError.CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
-    }
-    return nodeHandle;
-  }
+    /** @internal */
+    static displayName = 'Camera';
+    /** @internal */
+    displayName = Camera.displayName;
+    isNativeViewMounted = false;
+    lastUIRotation = undefined;
+    rotationHelper = new _RotationHelper.RotationHelper();
+    /** @internal */
+    constructor(props) {
+        super(props);
+        this.onViewReady = this.onViewReady.bind(this);
+        this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);
+        this.onInitialized = this.onInitialized.bind(this);
+        this.onStarted = this.onStarted.bind(this);
+        this.onStopped = this.onStopped.bind(this);
+        this.onPreviewStarted = this.onPreviewStarted.bind(this);
+        this.onPreviewStopped = this.onPreviewStopped.bind(this);
+        this.onShutter = this.onShutter.bind(this);
+        this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);
+        this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);
+        this.onError = this.onError.bind(this);
+        this.onCodeScanned = this.onCodeScanned.bind(this);
+        this.ref = /*#__PURE__*/ _react.default.createRef();
+        this.lastFrameProcessor = undefined;
+        this.state = {
+            isRecordingWithFlash: false,
+            averageFpsSamples: [],
+        };
+    }
+    get handle() {
+        const nodeHandle = (0, _reactNative.findNodeHandle)(this.ref.current);
+        if (nodeHandle == null || nodeHandle === -1) {
+            throw new _CameraError.CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
+        }
+        return nodeHandle;
+    }
 
-  //#region View-specific functions (UIViewManager)
-  /**
-   * Take a single photo and write it's content to a temporary file.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const photo = await camera.current.takePhoto({
-   *   flash: 'on',
-   *   enableAutoRedEyeReduction: true
-   * })
-   * ```
-   */
-  async takePhoto(options) {
-    try {
-      return await _NativeCameraModule.CameraModule.takePhoto(this.handle, options ?? {});
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    //#region View-specific functions (UIViewManager)
+    /**
+     * Take a single photo and write it's content to a temporary file.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const photo = await camera.current.takePhoto({
+     *   flash: 'on',
+     *   enableAutoRedEyeReduction: true
+     * })
+     * ```
+     */
+    async takePhoto(options) {
+        try {
+            return await _NativeCameraModule.CameraModule.takePhoto(this.handle, options ?? {});
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Captures a snapshot of the Camera view and write it's content to a temporary file.
-   *
-   * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
-   * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const snapshot = await camera.current.takeSnapshot({
-   *   quality: 100
-   * })
-   * ```
-   */
-  async takeSnapshot(options) {
-    try {
-      return await _NativeCameraModule.CameraModule.takeSnapshot(this.handle, options ?? {});
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
-  getBitRateMultiplier(bitRate) {
-    if (typeof bitRate === 'number' || bitRate == null) return 1;
-    switch (bitRate) {
-      case 'extra-low':
-        return 0.6;
-      case 'low':
-        return 0.8;
-      case 'normal':
-        return 1;
-      case 'high':
-        return 1.2;
-      case 'extra-high':
-        return 1.4;
-    }
-  }
+    /**
+     * Captures a snapshot of the Camera view and write it's content to a temporary file.
+     *
+     * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
+     * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const snapshot = await camera.current.takeSnapshot({
+     *   quality: 100
+     * })
+     * ```
+     */
+    async takeSnapshot(options) {
+        try {
+            return await _NativeCameraModule.CameraModule.takeSnapshot(this.handle, options ?? {});
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
+    getBitRateMultiplier(bitRate) {
+        if (typeof bitRate === 'number' || bitRate == null) return 1;
+        switch (bitRate) {
+            case 'extra-low':
+                return 0.6;
+            case 'low':
+                return 0.8;
+            case 'normal':
+                return 1;
+            case 'high':
+                return 1.2;
+            case 'extra-high':
+                return 1.4;
+        }
+    }
 
-  /**
-   * Start a new video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(() => {
-   *   camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  startRecording(options) {
-    const {
-      onRecordingError,
-      onRecordingFinished,
-      ...passThruOptions
-    } = options;
-    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
-    if (options.flash === 'on') {
-      // Enable torch for video recording
-      this.setState({
-        isRecordingWithFlash: true
-      });
-    }
-    const onRecordCallback = (video, error) => {
-      if (this.state.isRecordingWithFlash) {
-        // disable torch again if it was enabled
-        this.setState({
-          isRecordingWithFlash: false
-        });
-      }
-      if (error != null) return onRecordingError(error);
-      if (video != null) return onRecordingFinished(video);
-    };
-    const nativeRecordVideoOptions = passThruOptions;
-    try {
-      // TODO: Use TurboModules to make this awaitable.
-      _NativeCameraModule.CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    /**
+     * Start a new video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(() => {
+     *   camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    startRecording(options) {
+        const {onRecordingError, onRecordingFinished, ...passThruOptions} = options;
+        if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')
+            throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
+        if (options.flash === 'on') {
+            // Enable torch for video recording
+            this.setState({
+                isRecordingWithFlash: true,
+            });
+        }
+        const onRecordCallback = (video, error) => {
+            if (this.state.isRecordingWithFlash) {
+                // disable torch again if it was enabled
+                this.setState({
+                    isRecordingWithFlash: false,
+                });
+            }
+            if (error != null) return onRecordingError(error);
+            if (video != null) return onRecordingFinished(video);
+        };
+        const nativeRecordVideoOptions = passThruOptions;
+        try {
+            // TODO: Use TurboModules to make this awaitable.
+            _NativeCameraModule.CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Pauses the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  async pauseRecording() {
-    try {
-      return await _NativeCameraModule.CameraModule.pauseRecording(this.handle);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    /**
+     * Pauses the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    async pauseRecording() {
+        try {
+            return await _NativeCameraModule.CameraModule.pauseRecording(this.handle);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Resumes a currently paused video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  async resumeRecording() {
-    try {
-      return await _NativeCameraModule.CameraModule.resumeRecording(this.handle);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    /**
+     * Resumes a currently paused video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    async resumeRecording() {
+        try {
+            return await _NativeCameraModule.CameraModule.resumeRecording(this.handle);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Stop the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  async stopRecording() {
-    try {
-      return await _NativeCameraModule.CameraModule.stopRecording(this.handle);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    /**
+     * Stop the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    async stopRecording() {
+        try {
+            return await _NativeCameraModule.CameraModule.stopRecording(this.handle);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Cancel the current video recording. The temporary video file will be deleted,
-   * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => {
-   *     if (error.code === 'capture/recording-canceled') {
-   *       // recording was canceled.
-   *     } else {
-   *       console.error(error)
-   *     }
-   *   },
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.cancelRecording()
-   * }, 5000)
-   * ```
-   */
-  async cancelRecording() {
-    try {
-      return await _NativeCameraModule.CameraModule.cancelRecording(this.handle);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
+    /**
+     * Cancel the current video recording. The temporary video file will be deleted,
+     * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => {
+     *     if (error.code === 'capture/recording-canceled') {
+     *       // recording was canceled.
+     *     } else {
+     *       console.error(error)
+     *     }
+     *   },
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.cancelRecording()
+     * }, 5000)
+     * ```
+     */
+    async cancelRecording() {
+        try {
+            return await _NativeCameraModule.CameraModule.cancelRecording(this.handle);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
 
-  /**
-   * Focus the camera to a specific point in the coordinate system.
-   * @param {Point} point The point to focus to. This should be relative
-   * to the Camera view's coordinate system and is expressed in points.
-   *  * `(0, 0)` means **top left**.
-   *  * `(CameraView.width, CameraView.height)` means **bottom right**.
-   *
-   * Make sure the value doesn't exceed the CameraView's dimensions.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * await camera.current.focus({
-   *   x: tapEvent.x,
-   *   y: tapEvent.y
-   * })
-   * ```
-   */
-  async focus(point) {
-    try {
-      return await _NativeCameraModule.CameraModule.focus(this.handle, point);
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
-  //#endregion
+    /**
+     * Focus the camera to a specific point in the coordinate system.
+     * @param {Point} point The point to focus to. This should be relative
+     * to the Camera view's coordinate system and is expressed in points.
+     *  * `(0, 0)` means **top left**.
+     *  * `(CameraView.width, CameraView.height)` means **bottom right**.
+     *
+     * Make sure the value doesn't exceed the CameraView's dimensions.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * await camera.current.focus({
+     *   x: tapEvent.x,
+     *   y: tapEvent.y
+     * })
+     * ```
+     */
+    async focus(point) {
+        try {
+            return await _NativeCameraModule.CameraModule.focus(this.handle, point);
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
+    //#endregion
 
-  //#region Static Functions (NativeModule)
-  /**
-   * Get a list of all available camera devices on the current phone.
-   *
-   * If you use Hooks, use the `useCameraDevices(..)` hook instead.
-   *
-   * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
-   * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
-   * could change over time when the external Camera device gets plugged in or plugged out, so
-   * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
-   *
-   * @example
-   * ```ts
-   * const devices = Camera.getAvailableCameraDevices()
-   * const backCameras = devices.filter((d) => d.position === "back")
-   * const frontCameras = devices.filter((d) => d.position === "front")
-   * ```
-   */
-  static getAvailableCameraDevices() {
-    return _CameraDevices.CameraDevices.getAvailableCameraDevices();
-  }
-  /**
-   * Adds a listener that gets called everytime the Camera Devices change, for example
-   * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
-   *
-   * If you use Hooks, use the `useCameraDevices()` hook instead.
-   */
-  static addCameraDevicesChangedListener(listener) {
-    return _CameraDevices.CameraDevices.addCameraDevicesChangedListener(listener);
-  }
-  /**
-   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
-   * the user has permitted the app to use the camera.
-   *
-   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
-   */
-  static getCameraPermissionStatus() {
-    return _NativeCameraModule.CameraModule.getCameraPermissionStatus();
-  }
-  /**
-   * Gets the current Microphone-Recording Permission Status.
-   * Check this before enabling the `audio={...}` property to make sure the
-   * user has permitted the app to use the microphone.
-   *
-   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
-   */
-  static getMicrophonePermissionStatus() {
-    return _NativeCameraModule.CameraModule.getMicrophonePermissionStatus();
-  }
-  /**
-   * Gets the current Location Permission Status.
-   * Check this before enabling the `location={...}` property to make sure the
-   * the user has permitted the app to use the location.
-   *
-   * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
-   *
-   * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
-   * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
-   */
-  static getLocationPermissionStatus() {
-    return _NativeCameraModule.CameraModule.getLocationPermissionStatus();
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
-   *
-   * If the user has previously blocked the app from using the camera, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestCameraPermission() {
-    try {
-      return await _NativeCameraModule.CameraModule.requestCameraPermission();
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
-   *
-   * If the user has previously blocked the app from using the microphone, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestMicrophonePermission() {
-    try {
-      return await _NativeCameraModule.CameraModule.requestMicrophonePermission();
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new location permission status.
-   *
-   * If the user has previously blocked the app from using the location, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestLocationPermission() {
-    try {
-      return await _NativeCameraModule.CameraModule.requestLocationPermission();
-    } catch (e) {
-      throw (0, _CameraError.tryParseNativeCameraError)(e);
-    }
-  }
-  //#endregion
+    //#region Static Functions (NativeModule)
+    /**
+     * Get a list of all available camera devices on the current phone.
+     *
+     * If you use Hooks, use the `useCameraDevices(..)` hook instead.
+     *
+     * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
+     * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
+     * could change over time when the external Camera device gets plugged in or plugged out, so
+     * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
+     *
+     * @example
+     * ```ts
+     * const devices = Camera.getAvailableCameraDevices()
+     * const backCameras = devices.filter((d) => d.position === "back")
+     * const frontCameras = devices.filter((d) => d.position === "front")
+     * ```
+     */
+    static getAvailableCameraDevices() {
+        return _CameraDevices.CameraDevices.getAvailableCameraDevices();
+    }
+    /**
+     * Adds a listener that gets called everytime the Camera Devices change, for example
+     * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
+     *
+     * If you use Hooks, use the `useCameraDevices()` hook instead.
+     */
+    static addCameraDevicesChangedListener(listener) {
+        return _CameraDevices.CameraDevices.addCameraDevicesChangedListener(listener);
+    }
+    /**
+     * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
+     * the user has permitted the app to use the camera.
+     *
+     * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
+     */
+    static getCameraPermissionStatus() {
+        return _NativeCameraModule.CameraModule.getCameraPermissionStatus();
+    }
+    /**
+     * Gets the current Microphone-Recording Permission Status.
+     * Check this before enabling the `audio={...}` property to make sure the
+     * user has permitted the app to use the microphone.
+     *
+     * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
+     */
+    static getMicrophonePermissionStatus() {
+        return _NativeCameraModule.CameraModule.getMicrophonePermissionStatus();
+    }
+    /**
+     * Gets the current Location Permission Status.
+     * Check this before enabling the `location={...}` property to make sure the
+     * the user has permitted the app to use the location.
+     *
+     * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
+     *
+     * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
+     * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
+     */
+    static getLocationPermissionStatus() {
+        return _NativeCameraModule.CameraModule.getLocationPermissionStatus();
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
+     *
+     * If the user has previously blocked the app from using the camera, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestCameraPermission() {
+        try {
+            return await _NativeCameraModule.CameraModule.requestCameraPermission();
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
+     *
+     * If the user has previously blocked the app from using the microphone, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestMicrophonePermission() {
+        try {
+            return await _NativeCameraModule.CameraModule.requestMicrophonePermission();
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new location permission status.
+     *
+     * If the user has previously blocked the app from using the location, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestLocationPermission() {
+        try {
+            return await _NativeCameraModule.CameraModule.requestLocationPermission();
+        } catch (e) {
+            throw (0, _CameraError.tryParseNativeCameraError)(e);
+        }
+    }
+    //#endregion
 
-  //#region Events (Wrapped to maintain reference equality)
-  onError(event) {
-    const error = event.nativeEvent;
-    const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;
-    // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
-    const cameraError = new _CameraError.CameraRuntimeError(error.code, error.message, cause);
-    if (this.props.onError != null) {
-      this.props.onError(cameraError);
-    } else {
-      // User didn't pass an `onError` handler, so just log it to console
-      console.error(cameraError);
-    }
-  }
-  onInitialized() {
-    this.props.onInitialized?.();
-  }
-  onStarted() {
-    this.props.onStarted?.();
-  }
-  onStopped() {
-    this.props.onStopped?.();
-  }
-  onPreviewStarted() {
-    this.props.onPreviewStarted?.();
-  }
-  onPreviewStopped() {
-    this.props.onPreviewStopped?.();
-  }
-  onShutter(event) {
-    this.props.onShutter?.(event.nativeEvent);
-  }
-  onOutputOrientationChanged({
-    nativeEvent: {
-      outputOrientation
-    }
-  }) {
-    this.rotationHelper.outputOrientation = outputOrientation;
-    this.props.onOutputOrientationChanged?.(outputOrientation);
-    this.maybeUpdateUIRotation();
-  }
-  onPreviewOrientationChanged({
-    nativeEvent: {
-      previewOrientation
-    }
-  }) {
-    this.rotationHelper.previewOrientation = previewOrientation;
-    this.props.onPreviewOrientationChanged?.(previewOrientation);
-    this.maybeUpdateUIRotation();
-    if (isSkiaFrameProcessor(this.props.frameProcessor)) {
-      // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
-      this.props.frameProcessor.previewOrientation.value = previewOrientation;
-    }
-  }
-  maybeUpdateUIRotation() {
-    const uiRotation = this.rotationHelper.uiRotation;
-    if (uiRotation !== this.lastUIRotation) {
-      this.props.onUIRotationChanged?.(uiRotation);
-      this.lastUIRotation = uiRotation;
-    }
-  }
-  //#endregion
+    //#region Events (Wrapped to maintain reference equality)
+    onError(event) {
+        const error = event.nativeEvent;
+        const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;
+        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+        const cameraError = new _CameraError.CameraRuntimeError(error.code, error.message, cause);
+        if (this.props.onError != null) {
+            this.props.onError(cameraError);
+        } else {
+            // User didn't pass an `onError` handler, so just log it to console
+            console.error(cameraError);
+        }
+    }
+    onInitialized() {
+        this.props.onInitialized?.();
+    }
+    onStarted() {
+        this.props.onStarted?.();
+    }
+    onStopped() {
+        this.props.onStopped?.();
+    }
+    onPreviewStarted() {
+        this.props.onPreviewStarted?.();
+    }
+    onPreviewStopped() {
+        this.props.onPreviewStopped?.();
+    }
+    onShutter(event) {
+        this.props.onShutter?.(event.nativeEvent);
+    }
+    onOutputOrientationChanged({nativeEvent: {outputOrientation}}) {
+        this.rotationHelper.outputOrientation = outputOrientation;
+        this.props.onOutputOrientationChanged?.(outputOrientation);
+        this.maybeUpdateUIRotation();
+    }
+    onPreviewOrientationChanged({nativeEvent: {previewOrientation}}) {
+        this.rotationHelper.previewOrientation = previewOrientation;
+        this.props.onPreviewOrientationChanged?.(previewOrientation);
+        this.maybeUpdateUIRotation();
+        if (isSkiaFrameProcessor(this.props.frameProcessor)) {
+            // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
+            this.props.frameProcessor.previewOrientation.value = previewOrientation;
+        }
+    }
+    maybeUpdateUIRotation() {
+        const uiRotation = this.rotationHelper.uiRotation;
+        if (uiRotation !== this.lastUIRotation) {
+            this.props.onUIRotationChanged?.(uiRotation);
+            this.lastUIRotation = uiRotation;
+        }
+    }
+    //#endregion
 
-  onCodeScanned(event) {
-    const codeScanner = this.props.codeScanner;
-    if (codeScanner == null) return;
-    codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);
-  }
+    onCodeScanned(event) {
+        const codeScanner = this.props.codeScanner;
+        if (codeScanner == null) return;
+        codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);
+    }
 
-  //#region Lifecycle
-  setFrameProcessor(frameProcessor) {
-    _VisionCameraProxy.VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);
-  }
-  unsetFrameProcessor() {
-    _VisionCameraProxy.VisionCameraProxy.removeFrameProcessor(this.handle);
-  }
-  onViewReady() {
-    this.isNativeViewMounted = true;
-    if (this.props.frameProcessor != null) {
-      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
-      this.setFrameProcessor(this.props.frameProcessor.frameProcessor);
-      this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;
-    }
-  }
-  onAverageFpsChanged({
-    nativeEvent: {
-      averageFps
-    }
-  }) {
-    this.setState(state => {
-      const averageFpsSamples = [...state.averageFpsSamples, averageFps];
-      while (averageFpsSamples.length >= _FpsGraph.MAX_BARS + 1) {
-        // we keep a maximum of 30 FPS samples in our history
-        averageFpsSamples.shift();
-      }
-      return {
-        ...state,
-        averageFpsSamples: averageFpsSamples
-      };
-    });
-  }
+    //#region Lifecycle
+    setFrameProcessor(frameProcessor) {
+        _VisionCameraProxy.VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);
+    }
+    unsetFrameProcessor() {
+        _VisionCameraProxy.VisionCameraProxy.removeFrameProcessor(this.handle);
+    }
+    onViewReady() {
+        this.isNativeViewMounted = true;
+        if (this.props.frameProcessor != null) {
+            // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
+            this.setFrameProcessor(this.props.frameProcessor.frameProcessor);
+            this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;
+        }
+    }
+    onAverageFpsChanged({nativeEvent: {averageFps}}) {
+        this.setState((state) => {
+            const averageFpsSamples = [...state.averageFpsSamples, averageFps];
+            while (averageFpsSamples.length >= _FpsGraph.MAX_BARS + 1) {
+                // we keep a maximum of 30 FPS samples in our history
+                averageFpsSamples.shift();
+            }
+            return {
+                ...state,
+                averageFpsSamples: averageFpsSamples,
+            };
+        });
+    }
 
-  /** @internal */
-  componentDidUpdate() {
-    if (!this.isNativeViewMounted) return;
-    const frameProcessor = this.props.frameProcessor;
-    if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
-      // frameProcessor argument identity changed. Update native to reflect the change.
-      if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);else this.unsetFrameProcessor();
-      this.lastFrameProcessor = frameProcessor?.frameProcessor;
-    }
-  }
-  //#endregion
+    /** @internal */
+    componentDidUpdate() {
+        if (!this.isNativeViewMounted) return;
+        const frameProcessor = this.props.frameProcessor;
+        if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
+            // frameProcessor argument identity changed. Update native to reflect the change.
+            if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);
+            else this.unsetFrameProcessor();
+            this.lastFrameProcessor = frameProcessor?.frameProcessor;
+        }
+    }
+    //#endregion
 
-  /** @internal */
-  render() {
-    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
-    const {
-      device,
-      frameProcessor,
-      codeScanner,
-      enableFpsGraph,
-      fps,
-      videoBitRate,
-      ...props
-    } = this.props;
+    /** @internal */
+    render() {
+        // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
+        const {device, frameProcessor, codeScanner, enableFpsGraph, fps, videoBitRate, ...props} = this.props;
 
-    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
-    if (device == null) {
-      throw new _CameraError.CameraRuntimeError('device/no-device', 'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices');
-    }
-    const shouldEnableBufferCompression = props.video === true && frameProcessor == null;
-    const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;
-    const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);
-    const shouldBeMirrored = device.position === 'front';
+        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
+        if (device == null) {
+            throw new _CameraError.CameraRuntimeError(
+                'device/no-device',
+                'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices',
+            );
+        }
+        const shouldEnableBufferCompression = props.video === true && frameProcessor == null;
+        const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;
+        const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);
+        const shouldBeMirrored = device.position === 'front';
 
-    // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
-    const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];
-    const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];
+        // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
+        const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];
+        const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];
 
-    // bitrate is number (override) or string (multiplier)
-    let bitRateMultiplier;
-    let bitRateOverride;
-    if (typeof videoBitRate === 'number') {
-      // If the user passed an absolute number as a bit-rate, we just use this as a full override.
-      bitRateOverride = videoBitRate;
-    } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
-      // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
-      bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);
-    }
-    return /*#__PURE__*/_react.default.createElement(_NativeCameraView.NativeCameraView, _extends({}, props, {
-      cameraId: device.id,
-      ref: this.ref,
-      torch: torch,
-      minFps: minFps,
-      maxFps: maxFps,
-      isMirrored: props.isMirrored ?? shouldBeMirrored,
-      onViewReady: this.onViewReady,
-      onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,
-      onInitialized: this.onInitialized,
-      onCodeScanned: this.onCodeScanned,
-      onStarted: this.onStarted,
-      onStopped: this.onStopped,
-      onPreviewStarted: this.onPreviewStarted,
-      onPreviewStopped: this.onPreviewStopped,
-      onShutter: this.onShutter,
-      videoBitRateMultiplier: bitRateMultiplier,
-      videoBitRateOverride: bitRateOverride,
-      onOutputOrientationChanged: this.onOutputOrientationChanged,
-      onPreviewOrientationChanged: this.onPreviewOrientationChanged,
-      onError: this.onError,
-      codeScannerOptions: codeScanner,
-      enableFrameProcessor: frameProcessor != null,
-      enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,
-      preview: isRenderingWithSkia ? false : props.preview ?? true
-    }), isRenderingWithSkia && /*#__PURE__*/_react.default.createElement(_SkiaCameraCanvas.SkiaCameraCanvas, {
-      style: styles.customPreviewView,
-      offscreenTextures: frameProcessor.offscreenTextures,
-      resizeMode: props.resizeMode
-    }), enableFpsGraph && /*#__PURE__*/_react.default.createElement(_FpsGraph.FpsGraph, {
-      style: styles.fpsGraph,
-      averageFpsSamples: this.state.averageFpsSamples,
-      targetMaxFps: props.format?.maxFps ?? 60
-    }));
-  }
+        // bitrate is number (override) or string (multiplier)
+        let bitRateMultiplier;
+        let bitRateOverride;
+        if (typeof videoBitRate === 'number') {
+            // If the user passed an absolute number as a bit-rate, we just use this as a full override.
+            bitRateOverride = videoBitRate;
+        } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
+            // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
+            bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);
+        }
+        return /*#__PURE__*/ _react.default.createElement(
+            _NativeCameraView.NativeCameraView,
+            _extends({}, props, {
+                cameraId: device.id,
+                ref: this.ref,
+                torch: torch,
+                minFps: minFps,
+                maxFps: maxFps,
+                isMirrored: props.isMirrored ?? shouldBeMirrored,
+                onViewReady: this.onViewReady,
+                onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,
+                onInitialized: this.onInitialized,
+                onCodeScanned: this.onCodeScanned,
+                onStarted: this.onStarted,
+                onStopped: this.onStopped,
+                onPreviewStarted: this.onPreviewStarted,
+                onPreviewStopped: this.onPreviewStopped,
+                onShutter: this.onShutter,
+                videoBitRateMultiplier: bitRateMultiplier,
+                videoBitRateOverride: bitRateOverride,
+                onOutputOrientationChanged: this.onOutputOrientationChanged,
+                onPreviewOrientationChanged: this.onPreviewOrientationChanged,
+                onError: this.onError,
+                codeScannerOptions: codeScanner,
+                enableFrameProcessor: frameProcessor != null,
+                enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,
+                preview: isRenderingWithSkia ? false : props.preview ?? true,
+            }),
+            isRenderingWithSkia &&
+                /*#__PURE__*/ _react.default.createElement(_SkiaCameraCanvas.SkiaCameraCanvas, {
+                    style: styles.customPreviewView,
+                    offscreenTextures: frameProcessor.offscreenTextures,
+                    resizeMode: props.resizeMode,
+                }),
+            enableFpsGraph &&
+                /*#__PURE__*/ _react.default.createElement(_FpsGraph.FpsGraph, {
+                    style: styles.fpsGraph,
+                    averageFpsSamples: this.state.averageFpsSamples,
+                    targetMaxFps: props.format?.maxFps ?? 60,
+                }),
+        );
+    }
 }
 //#endregion
 exports.Camera = Camera;
 const styles = _reactNative.StyleSheet.create({
-  customPreviewView: {
-    flex: 1
-  },
-  fpsGraph: {
-    elevation: 1,
-    position: 'absolute',
-    left: 15,
-    top: 30
-  }
+    customPreviewView: {
+        flex: 1,
+    },
+    fpsGraph: {
+        elevation: 1,
+        position: 'absolute',
+        left: 15,
+        top: 30,
+    },
 });
 //# sourceMappingURL=Camera.js.map
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
index a21019c..667d46b 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
@@ -1 +1,175 @@
-{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_CameraError","_NativeCameraModule","_VisionCameraProxy","_CameraDevices","_SkiaCameraCanvas","_FpsGraph","_NativeCameraView","_RotationHelper","e","__esModule","default","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","isSkiaFrameProcessor","frameProcessor","type","Camera","React","PureComponent","displayName","isNativeViewMounted","lastUIRotation","undefined","rotationHelper","RotationHelper","constructor","props","onViewReady","onAverageFpsChanged","onInitialized","onStarted","onStopped","onPreviewStarted","onPreviewStopped","onShutter","onOutputOrientationChanged","onPreviewOrientationChanged","onError","onCodeScanned","ref","createRef","lastFrameProcessor","state","isRecordingWithFlash","averageFpsSamples","handle","nodeHandle","findNodeHandle","current","CameraRuntimeError","takePhoto","options","CameraModule","tryParseNativeCameraError","takeSnapshot","getBitRateMultiplier","bitRate","startRecording","onRecordingError","onRecordingFinished","passThruOptions","flash","setState","onRecordCallback","video","error","nativeRecordVideoOptions","pauseRecording","resumeRecording","stopRecording","cancelRecording","focus","point","getAvailableCameraDevices","CameraDevices","addCameraDevicesChangedListener","listener","getCameraPermissionStatus","getMicrophonePermissionStatus","getLocationPermissionStatus","requestCameraPermission","requestMicrophonePermission","requestLocationPermission","event","nativeEvent","cause","isErrorWithCause","cameraError","code","message","console","outputOrientation","maybeUpdateUIRotation","previewOrientation","value","uiRotation","onUIRotationChanged","codeScanner","codes","frame","setFrameProcessor","VisionCameraProxy","unsetFrameProcessor","removeFrameProcessor","averageFps","MAX_BARS","shift","componentDidUpdate","render","device","enableFpsGraph","fps","videoBitRate","shouldEnableBufferCompression","torch","isRenderingWithSkia","shouldBeMirrored","position","minFps","maxFps","bitRateMultiplier","bitRateOverride","createElement","NativeCameraView","cameraId","id","isMirrored","videoBitRateMultiplier","videoBitRateOverride","codeScannerOptions","enableFrameProcessor","enableBufferCompression","preview","SkiaCameraCanvas","style","styles","customPreviewView","offscreenTextures","resizeMode","FpsGraph","fpsGraph","targetMaxFps","format","exports","StyleSheet","create","flex","elevation","left","top"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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Y,CAACgB,eAAe,CAAC,IAAI,CAACvB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAauE,aAAaA,CAAA,EAAkB;IAC1C,IAAI;MACF,OAAO,MAAMjB,gCAAY,CAACiB,aAAa,CAAC,IAAI,CAACxB,MAAM,CAAC;IACtD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAawE,eAAeA,CAAA,EAAkB;IAC5C,IAAI;MACF,OAAO,MAAMlB,gCAAY,CAACkB,eAAe,CAAC,IAAI,CAACzB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAayE,KAAKA,CAACC,KAAY,EAAiB;IAC9C,IAAI;MACF,OAAO,MAAMpB,gCAAY,CAACmB,KAAK,CAAC,IAAI,CAAC1B,MAAM,EAAE2B,KAAK,CAAC;IACrD,CAAC,CAAC,OAAO1E,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;EACA;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAc2E,yBAAyBA,CAAA,EAAmB;IACxD,OAAOC,4BAAa,CAACD,yBAAyB,CAAC,CAAC;EAClD;EACA;AACF;AACA;AAC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","ignoreList":[]}
+{
+  "version": 3,
+  "names": [
+    "_react",
+    "_interopRequireDefault",
+    "require",
+    "_reactNative",
+    "_CameraError",
+    "_NativeCameraModule",
+    "_VisionCameraProxy",
+    "_CameraDevices",
+    "_SkiaCameraCanvas",
+    "_FpsGraph",
+    "_NativeCameraView",
+    "_RotationHelper",
+    "e",
+    "__esModule",
+    "default",
+    "_extends",
+    "Object",
+    "assign",
+    "bind",
+    "n",
+    "arguments",
+    "length",
+    "t",
+    "r",
+    "hasOwnProperty",
+    "call",
+    "apply",
+    "isSkiaFrameProcessor",
+    "frameProcessor",
+    "type",
+    "Camera",
+    "React",
+    "PureComponent",
+    "displayName",
+    "isNativeViewMounted",
+    "lastUIRotation",
+    "undefined",
+    "rotationHelper",
+    "RotationHelper",
+    "constructor",
+    "props",
+    "onViewReady",
+    "onAverageFpsChanged",
+    "onInitialized",
+    "onStarted",
+    "onStopped",
+    "onPreviewStarted",
+    "onPreviewStopped",
+    "onShutter",
+    "onOutputOrientationChanged",
+    "onPreviewOrientationChanged",
+    "onError",
+    "onCodeScanned",
+    "ref",
+    "createRef",
+    "lastFrameProcessor",
+    "state",
+    "isRecordingWithFlash",
+    "averageFpsSamples",
+    "handle",
+    "nodeHandle",
+    "findNodeHandle",
+    "current",
+    "CameraRuntimeError",
+    "takePhoto",
+    "options",
+    "CameraModule",
+    "tryParseNativeCameraError",
+    "takeSnapshot",
+    "getBitRateMultiplier",
+    "bitRate",
+    "startRecording",
+    "onRecordingError",
+    "onRecordingFinished",
+    "passThruOptions",
+    "flash",
+    "setState",
+    "onRecordCallback",
+    "video",
+    "error",
+    "nativeRecordVideoOptions",
+    "pauseRecording",
+    "resumeRecording",
+    "stopRecording",
+    "cancelRecording",
+    "focus",
+    "point",
+    "getAvailableCameraDevices",
+    "CameraDevices",
+    "addCameraDevicesChangedListener",
+    "listener",
+    "getCameraPermissionStatus",
+    "getMicrophonePermissionStatus",
+    "getLocationPermissionStatus",
+    "requestCameraPermission",
+    "requestMicrophonePermission",
+    "requestLocationPermission",
+    "event",
+    "nativeEvent",
+    "cause",
+    "isErrorWithCause",
+    "cameraError",
+    "code",
+    "message",
+    "console",
+    "outputOrientation",
+    "maybeUpdateUIRotation",
+    "previewOrientation",
+    "value",
+    "uiRotation",
+    "onUIRotationChanged",
+    "codeScanner",
+    "codes",
+    "frame",
+    "setFrameProcessor",
+    "VisionCameraProxy",
+    "unsetFrameProcessor",
+    "removeFrameProcessor",
+    "averageFps",
+    "MAX_BARS",
+    "shift",
+    "componentDidUpdate",
+    "render",
+    "device",
+    "enableFpsGraph",
+    "fps",
+    "videoBitRate",
+    "shouldEnableBufferCompression",
+    "torch",
+    "isRenderingWithSkia",
+    "shouldBeMirrored",
+    "position",
+    "minFps",
+    "maxFps",
+    "bitRateMultiplier",
+    "bitRateOverride",
+    "createElement",
+    "NativeCameraView",
+    "cameraId",
+    "id",
+    "isMirrored",
+    "videoBitRateMultiplier",
+    "videoBitRateOverride",
+    "codeScannerOptions",
+    "enableFrameProcessor",
+    "enableBufferCompression",
+    "preview",
+    "SkiaCameraCanvas",
+    "style",
+    "styles",
+    "customPreviewView",
+    "offscreenTextures",
+    "resizeMode",
+    "FpsGraph",
+    "fpsGraph",
+    "targetMaxFps",
+    "format",
+    "exports",
+    "StyleSheet",
+    "create",
+    "flex",
+    "elevation",
+    "left",
+    "top"
+  ],
+  "sourceRoot": "../../src",
+  "sources": [
+    "Camera.tsx"
+  ],
+  "mappings": "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Y,CAACgB,eAAe,CAAC,IAAI,CAACvB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAauE,aAAaA,CAAA,EAAkB;IAC1C,IAAI;MACF,OAAO,MAAMjB,gCAAY,CAACiB,aAAa,CAAC,IAAI,CAACxB,MAAM,CAAC;IACtD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAawE,eAAeA,CAAA,EAAkB;IAC5C,IAAI;MACF,OAAO,MAAMlB,gCAAY,CAACkB,eAAe,CAAC,IAAI,CAACzB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAO/C,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAayE,KAAKA,CAACC,KAAY,EAAiB;IAC9C,IAAI;MACF,OAAO,MAAMpB,gCAAY,CAACmB,KAAK,CAAC,IAAI,CAAC1B,MAAM,EAAE2B,KAAK,CAAC;IACrD,CAAC,CAAC,OAAO1E,CAAC,EAAE;MACV,MAAM,IAAAuD,sCAAyB,EAACvD,CAAC,CAAC;IACpC;EACF;EACA;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAc2E,yBAAyBA,CAAA,EAAmB;IACxD,OAAOC,4BAAa,CAACD,yBAAyB,CAAC,CAAC;EAClD;EACA;AACF;AACA;AAC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",
+  "ignoreList": []
+}
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js b/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js
new file mode 100644
index 0000000..9e627bc
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js
@@ -0,0 +1,13 @@
+'use strict';
+
+Object.defineProperty(exports, '__esModule', {
+    value: true,
+});
+exports.default = void 0;
+var _codegenNativeComponent = _interopRequireDefault(require('react-native/Libraries/Utilities/codegenNativeComponent'));
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {default: obj};
+}
+/* eslint-disable @typescript-eslint/ban-types */
+var _default = (exports.default = (0, _codegenNativeComponent.default)('CameraView'));
+//# sourceMappingURL=CameraViewNativeComponent.js.map
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js.map b/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js.map
new file mode 100644
index 0000000..f3c7b03
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/commonjs/specs/CameraViewNativeComponent.js.map
@@ -0,0 +1,19 @@
+{
+  "version": 3,
+  "names": [
+    "_codegenNativeComponent",
+    "_interopRequireDefault",
+    "require",
+    "obj",
+    "__esModule",
+    "default",
+    "_default",
+    "exports",
+    "codegenNativeComponent"
+  ],
+  "sourceRoot": "../../../src",
+  "sources": [
+    "specs/CameraViewNativeComponent.ts"
+  ],
+  "mappings": ";;;;;;AAGA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA6F,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAH7F;AAAA,IAAAG,QAAA,GAAAC,OAAA,CAAAF,OAAA,GA0Fe,IAAAG,+BAAsB,EAAc,YAAY,CAAC"
+}
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js b/node_modules/react-native-vision-camera/lib/module/Camera.js
index e97f27c..fea7ccf 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js
@@ -1,21 +1,35 @@
-function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
 import React from 'react';
-import { findNodeHandle, StyleSheet } from 'react-native';
-import { CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';
-import { CameraModule } from './NativeCameraModule';
-import { VisionCameraProxy } from './frame-processors/VisionCameraProxy';
-import { CameraDevices } from './CameraDevices';
-import { SkiaCameraCanvas } from './skia/SkiaCameraCanvas';
-import { FpsGraph, MAX_BARS } from './FpsGraph';
-import { NativeCameraView } from './NativeCameraView';
-import { RotationHelper } from './RotationHelper';
+import {findNodeHandle, StyleSheet} from 'react-native';
+import {CameraDevices} from './CameraDevices';
+import {CameraRuntimeError, isErrorWithCause, tryParseNativeCameraError} from './CameraError';
+import {FpsGraph, MAX_BARS} from './FpsGraph';
+import {VisionCameraProxy} from './frame-processors/VisionCameraProxy';
+import {CameraModule} from './NativeCameraModule';
+import {NativeCameraView} from './NativeCameraView';
+import {RotationHelper} from './RotationHelper';
+import {SkiaCameraCanvas} from './skia/SkiaCameraCanvas';
+
+function _extends() {
+    return (
+        (_extends = Object.assign
+            ? Object.assign.bind()
+            : function (n) {
+                  for (var e = 1; e < arguments.length; e++) {
+                      var t = arguments[e];
+                      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
+                  }
+                  return n;
+              }),
+        _extends.apply(null, arguments)
+    );
+}
 
 //#region Types
 
 //#endregion
 
 function isSkiaFrameProcessor(frameProcessor) {
-  return frameProcessor?.type === 'drawable-skia';
+    return frameProcessor?.type === 'drawable-skia';
 }
 
 //#region Camera Component
@@ -52,609 +66,597 @@ function isSkiaFrameProcessor(frameProcessor) {
  * @component
  */
 export class Camera extends React.PureComponent {
-  /** @internal */
-  static displayName = 'Camera';
-  /** @internal */
-  displayName = Camera.displayName;
-  isNativeViewMounted = false;
-  lastUIRotation = undefined;
-  rotationHelper = new RotationHelper();
-  /** @internal */
-  constructor(props) {
-    super(props);
-    this.onViewReady = this.onViewReady.bind(this);
-    this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);
-    this.onInitialized = this.onInitialized.bind(this);
-    this.onStarted = this.onStarted.bind(this);
-    this.onStopped = this.onStopped.bind(this);
-    this.onPreviewStarted = this.onPreviewStarted.bind(this);
-    this.onPreviewStopped = this.onPreviewStopped.bind(this);
-    this.onShutter = this.onShutter.bind(this);
-    this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);
-    this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);
-    this.onError = this.onError.bind(this);
-    this.onCodeScanned = this.onCodeScanned.bind(this);
-    this.ref = /*#__PURE__*/React.createRef();
-    this.lastFrameProcessor = undefined;
-    this.state = {
-      isRecordingWithFlash: false,
-      averageFpsSamples: []
-    };
-  }
-  get handle() {
-    const nodeHandle = findNodeHandle(this.ref.current);
-    if (nodeHandle == null || nodeHandle === -1) {
-      throw new CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
-    }
-    return nodeHandle;
-  }
+    /** @internal */
+    static displayName = 'Camera';
+    /** @internal */
+    displayName = Camera.displayName;
+    isNativeViewMounted = false;
+    lastUIRotation = undefined;
+    rotationHelper = new RotationHelper();
+    /** @internal */
+    constructor(props) {
+        super(props);
+        this.onViewReady = this.onViewReady.bind(this);
+        this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);
+        this.onInitialized = this.onInitialized.bind(this);
+        this.onStarted = this.onStarted.bind(this);
+        this.onStopped = this.onStopped.bind(this);
+        this.onPreviewStarted = this.onPreviewStarted.bind(this);
+        this.onPreviewStopped = this.onPreviewStopped.bind(this);
+        this.onShutter = this.onShutter.bind(this);
+        this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);
+        this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);
+        this.onError = this.onError.bind(this);
+        this.onCodeScanned = this.onCodeScanned.bind(this);
+        this.ref = /*#__PURE__*/ React.createRef();
+        this.lastFrameProcessor = undefined;
+        this.state = {
+            isRecordingWithFlash: false,
+            averageFpsSamples: [],
+        };
+    }
+    get handle() {
+        const nodeHandle = findNodeHandle(this.ref.current);
+        if (nodeHandle == null || nodeHandle === -1) {
+            throw new CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
+        }
+        return nodeHandle;
+    }
 
-  //#region View-specific functions (UIViewManager)
-  /**
-   * Take a single photo and write it's content to a temporary file.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const photo = await camera.current.takePhoto({
-   *   flash: 'on',
-   *   enableAutoRedEyeReduction: true
-   * })
-   * ```
-   */
-  async takePhoto(options) {
-    try {
-      return await CameraModule.takePhoto(this.handle, options ?? {});
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    //#region View-specific functions (UIViewManager)
+    /**
+     * Take a single photo and write it's content to a temporary file.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const photo = await camera.current.takePhoto({
+     *   flash: 'on',
+     *   enableAutoRedEyeReduction: true
+     * })
+     * ```
+     */
+    async takePhoto(options) {
+        try {
+            return await CameraModule.takePhoto(this.handle, options ?? {});
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Captures a snapshot of the Camera view and write it's content to a temporary file.
-   *
-   * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
-   * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const snapshot = await camera.current.takeSnapshot({
-   *   quality: 100
-   * })
-   * ```
-   */
-  async takeSnapshot(options) {
-    try {
-      return await CameraModule.takeSnapshot(this.handle, options ?? {});
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-  getBitRateMultiplier(bitRate) {
-    if (typeof bitRate === 'number' || bitRate == null) return 1;
-    switch (bitRate) {
-      case 'extra-low':
-        return 0.6;
-      case 'low':
-        return 0.8;
-      case 'normal':
-        return 1;
-      case 'high':
-        return 1.2;
-      case 'extra-high':
-        return 1.4;
-    }
-  }
+    /**
+     * Captures a snapshot of the Camera view and write it's content to a temporary file.
+     *
+     * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
+     * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const snapshot = await camera.current.takeSnapshot({
+     *   quality: 100
+     * })
+     * ```
+     */
+    async takeSnapshot(options) {
+        try {
+            return await CameraModule.takeSnapshot(this.handle, options ?? {});
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    getBitRateMultiplier(bitRate) {
+        if (typeof bitRate === 'number' || bitRate == null) return 1;
+        switch (bitRate) {
+            case 'extra-low':
+                return 0.6;
+            case 'low':
+                return 0.8;
+            case 'normal':
+                return 1;
+            case 'high':
+                return 1.2;
+            case 'extra-high':
+                return 1.4;
+        }
+    }
 
-  /**
-   * Start a new video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(() => {
-   *   camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  startRecording(options) {
-    const {
-      onRecordingError,
-      onRecordingFinished,
-      ...passThruOptions
-    } = options;
-    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
-    if (options.flash === 'on') {
-      // Enable torch for video recording
-      this.setState({
-        isRecordingWithFlash: true
-      });
-    }
-    const onRecordCallback = (video, error) => {
-      if (this.state.isRecordingWithFlash) {
-        // disable torch again if it was enabled
-        this.setState({
-          isRecordingWithFlash: false
-        });
-      }
-      if (error != null) return onRecordingError(error);
-      if (video != null) return onRecordingFinished(video);
-    };
-    const nativeRecordVideoOptions = passThruOptions;
-    try {
-      // TODO: Use TurboModules to make this awaitable.
-      CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    /**
+     * Start a new video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(() => {
+     *   camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    startRecording(options) {
+        const {onRecordingError, onRecordingFinished, ...passThruOptions} = options;
+        if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')
+            throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
+        if (options.flash === 'on') {
+            // Enable torch for video recording
+            this.setState({
+                isRecordingWithFlash: true,
+            });
+        }
+        const onRecordCallback = (video, error) => {
+            if (this.state.isRecordingWithFlash) {
+                // disable torch again if it was enabled
+                this.setState({
+                    isRecordingWithFlash: false,
+                });
+            }
+            if (error != null) return onRecordingError(error);
+            if (video != null) return onRecordingFinished(video);
+        };
+        const nativeRecordVideoOptions = passThruOptions;
+        try {
+            // TODO: Use TurboModules to make this awaitable.
+            CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Pauses the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  async pauseRecording() {
-    try {
-      return await CameraModule.pauseRecording(this.handle);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    /**
+     * Pauses the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    async pauseRecording() {
+        try {
+            return await CameraModule.pauseRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Resumes a currently paused video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  async resumeRecording() {
-    try {
-      return await CameraModule.resumeRecording(this.handle);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    /**
+     * Resumes a currently paused video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    async resumeRecording() {
+        try {
+            return await CameraModule.resumeRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Stop the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  async stopRecording() {
-    try {
-      return await CameraModule.stopRecording(this.handle);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    /**
+     * Stop the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    async stopRecording() {
+        try {
+            return await CameraModule.stopRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Cancel the current video recording. The temporary video file will be deleted,
-   * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => {
-   *     if (error.code === 'capture/recording-canceled') {
-   *       // recording was canceled.
-   *     } else {
-   *       console.error(error)
-   *     }
-   *   },
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.cancelRecording()
-   * }, 5000)
-   * ```
-   */
-  async cancelRecording() {
-    try {
-      return await CameraModule.cancelRecording(this.handle);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
+    /**
+     * Cancel the current video recording. The temporary video file will be deleted,
+     * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => {
+     *     if (error.code === 'capture/recording-canceled') {
+     *       // recording was canceled.
+     *     } else {
+     *       console.error(error)
+     *     }
+     *   },
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.cancelRecording()
+     * }, 5000)
+     * ```
+     */
+    async cancelRecording() {
+        try {
+            return await CameraModule.cancelRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
 
-  /**
-   * Focus the camera to a specific point in the coordinate system.
-   * @param {Point} point The point to focus to. This should be relative
-   * to the Camera view's coordinate system and is expressed in points.
-   *  * `(0, 0)` means **top left**.
-   *  * `(CameraView.width, CameraView.height)` means **bottom right**.
-   *
-   * Make sure the value doesn't exceed the CameraView's dimensions.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * await camera.current.focus({
-   *   x: tapEvent.x,
-   *   y: tapEvent.y
-   * })
-   * ```
-   */
-  async focus(point) {
-    try {
-      return await CameraModule.focus(this.handle, point);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-  //#endregion
+    /**
+     * Focus the camera to a specific point in the coordinate system.
+     * @param {Point} point The point to focus to. This should be relative
+     * to the Camera view's coordinate system and is expressed in points.
+     *  * `(0, 0)` means **top left**.
+     *  * `(CameraView.width, CameraView.height)` means **bottom right**.
+     *
+     * Make sure the value doesn't exceed the CameraView's dimensions.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * await camera.current.focus({
+     *   x: tapEvent.x,
+     *   y: tapEvent.y
+     * })
+     * ```
+     */
+    async focus(point) {
+        try {
+            return await CameraModule.focus(this.handle, point);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    //#endregion
 
-  //#region Static Functions (NativeModule)
-  /**
-   * Get a list of all available camera devices on the current phone.
-   *
-   * If you use Hooks, use the `useCameraDevices(..)` hook instead.
-   *
-   * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
-   * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
-   * could change over time when the external Camera device gets plugged in or plugged out, so
-   * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
-   *
-   * @example
-   * ```ts
-   * const devices = Camera.getAvailableCameraDevices()
-   * const backCameras = devices.filter((d) => d.position === "back")
-   * const frontCameras = devices.filter((d) => d.position === "front")
-   * ```
-   */
-  static getAvailableCameraDevices() {
-    return CameraDevices.getAvailableCameraDevices();
-  }
-  /**
-   * Adds a listener that gets called everytime the Camera Devices change, for example
-   * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
-   *
-   * If you use Hooks, use the `useCameraDevices()` hook instead.
-   */
-  static addCameraDevicesChangedListener(listener) {
-    return CameraDevices.addCameraDevicesChangedListener(listener);
-  }
-  /**
-   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
-   * the user has permitted the app to use the camera.
-   *
-   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
-   */
-  static getCameraPermissionStatus() {
-    return CameraModule.getCameraPermissionStatus();
-  }
-  /**
-   * Gets the current Microphone-Recording Permission Status.
-   * Check this before enabling the `audio={...}` property to make sure the
-   * user has permitted the app to use the microphone.
-   *
-   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
-   */
-  static getMicrophonePermissionStatus() {
-    return CameraModule.getMicrophonePermissionStatus();
-  }
-  /**
-   * Gets the current Location Permission Status.
-   * Check this before enabling the `location={...}` property to make sure the
-   * the user has permitted the app to use the location.
-   *
-   * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
-   *
-   * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
-   * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
-   */
-  static getLocationPermissionStatus() {
-    return CameraModule.getLocationPermissionStatus();
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
-   *
-   * If the user has previously blocked the app from using the camera, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestCameraPermission() {
-    try {
-      return await CameraModule.requestCameraPermission();
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
-   *
-   * If the user has previously blocked the app from using the microphone, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestMicrophonePermission() {
-    try {
-      return await CameraModule.requestMicrophonePermission();
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new location permission status.
-   *
-   * If the user has previously blocked the app from using the location, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  static async requestLocationPermission() {
-    try {
-      return await CameraModule.requestLocationPermission();
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-  //#endregion
+    //#region Static Functions (NativeModule)
+    /**
+     * Get a list of all available camera devices on the current phone.
+     *
+     * If you use Hooks, use the `useCameraDevices(..)` hook instead.
+     *
+     * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
+     * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
+     * could change over time when the external Camera device gets plugged in or plugged out, so
+     * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
+     *
+     * @example
+     * ```ts
+     * const devices = Camera.getAvailableCameraDevices()
+     * const backCameras = devices.filter((d) => d.position === "back")
+     * const frontCameras = devices.filter((d) => d.position === "front")
+     * ```
+     */
+    static getAvailableCameraDevices() {
+        return CameraDevices.getAvailableCameraDevices();
+    }
+    /**
+     * Adds a listener that gets called everytime the Camera Devices change, for example
+     * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
+     *
+     * If you use Hooks, use the `useCameraDevices()` hook instead.
+     */
+    static addCameraDevicesChangedListener(listener) {
+        return CameraDevices.addCameraDevicesChangedListener(listener);
+    }
+    /**
+     * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
+     * the user has permitted the app to use the camera.
+     *
+     * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
+     */
+    static getCameraPermissionStatus() {
+        return CameraModule.getCameraPermissionStatus();
+    }
+    /**
+     * Gets the current Microphone-Recording Permission Status.
+     * Check this before enabling the `audio={...}` property to make sure the
+     * user has permitted the app to use the microphone.
+     *
+     * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
+     */
+    static getMicrophonePermissionStatus() {
+        return CameraModule.getMicrophonePermissionStatus();
+    }
+    /**
+     * Gets the current Location Permission Status.
+     * Check this before enabling the `location={...}` property to make sure the
+     * the user has permitted the app to use the location.
+     *
+     * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
+     *
+     * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
+     * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
+     */
+    static getLocationPermissionStatus() {
+        return CameraModule.getLocationPermissionStatus();
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
+     *
+     * If the user has previously blocked the app from using the camera, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestCameraPermission() {
+        try {
+            return await CameraModule.requestCameraPermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
+     *
+     * If the user has previously blocked the app from using the microphone, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestMicrophonePermission() {
+        try {
+            return await CameraModule.requestMicrophonePermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new location permission status.
+     *
+     * If the user has previously blocked the app from using the location, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    static async requestLocationPermission() {
+        try {
+            return await CameraModule.requestLocationPermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    //#endregion
 
-  //#region Events (Wrapped to maintain reference equality)
-  onError(event) {
-    const error = event.nativeEvent;
-    const cause = isErrorWithCause(error.cause) ? error.cause : undefined;
-    // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
-    const cameraError = new CameraRuntimeError(error.code, error.message, cause);
-    if (this.props.onError != null) {
-      this.props.onError(cameraError);
-    } else {
-      // User didn't pass an `onError` handler, so just log it to console
-      console.error(cameraError);
-    }
-  }
-  onInitialized() {
-    this.props.onInitialized?.();
-  }
-  onStarted() {
-    this.props.onStarted?.();
-  }
-  onStopped() {
-    this.props.onStopped?.();
-  }
-  onPreviewStarted() {
-    this.props.onPreviewStarted?.();
-  }
-  onPreviewStopped() {
-    this.props.onPreviewStopped?.();
-  }
-  onShutter(event) {
-    this.props.onShutter?.(event.nativeEvent);
-  }
-  onOutputOrientationChanged({
-    nativeEvent: {
-      outputOrientation
-    }
-  }) {
-    this.rotationHelper.outputOrientation = outputOrientation;
-    this.props.onOutputOrientationChanged?.(outputOrientation);
-    this.maybeUpdateUIRotation();
-  }
-  onPreviewOrientationChanged({
-    nativeEvent: {
-      previewOrientation
-    }
-  }) {
-    this.rotationHelper.previewOrientation = previewOrientation;
-    this.props.onPreviewOrientationChanged?.(previewOrientation);
-    this.maybeUpdateUIRotation();
-    if (isSkiaFrameProcessor(this.props.frameProcessor)) {
-      // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
-      this.props.frameProcessor.previewOrientation.value = previewOrientation;
-    }
-  }
-  maybeUpdateUIRotation() {
-    const uiRotation = this.rotationHelper.uiRotation;
-    if (uiRotation !== this.lastUIRotation) {
-      this.props.onUIRotationChanged?.(uiRotation);
-      this.lastUIRotation = uiRotation;
-    }
-  }
-  //#endregion
+    //#region Events (Wrapped to maintain reference equality)
+    onError(event) {
+        const error = event.nativeEvent;
+        const cause = isErrorWithCause(error.cause) ? error.cause : undefined;
+        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+        const cameraError = new CameraRuntimeError(error.code, error.message, cause);
+        if (this.props.onError != null) {
+            this.props.onError(cameraError);
+        } else {
+            // User didn't pass an `onError` handler, so just log it to console
+            console.error(cameraError);
+        }
+    }
+    onInitialized() {
+        this.props.onInitialized?.();
+    }
+    onStarted() {
+        this.props.onStarted?.();
+    }
+    onStopped() {
+        this.props.onStopped?.();
+    }
+    onPreviewStarted() {
+        this.props.onPreviewStarted?.();
+    }
+    onPreviewStopped() {
+        this.props.onPreviewStopped?.();
+    }
+    onShutter(event) {
+        this.props.onShutter?.(event.nativeEvent);
+    }
+    onOutputOrientationChanged({nativeEvent: {outputOrientation}}) {
+        this.rotationHelper.outputOrientation = outputOrientation;
+        this.props.onOutputOrientationChanged?.(outputOrientation);
+        this.maybeUpdateUIRotation();
+    }
+    onPreviewOrientationChanged({nativeEvent: {previewOrientation}}) {
+        this.rotationHelper.previewOrientation = previewOrientation;
+        this.props.onPreviewOrientationChanged?.(previewOrientation);
+        this.maybeUpdateUIRotation();
+        if (isSkiaFrameProcessor(this.props.frameProcessor)) {
+            // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
+            this.props.frameProcessor.previewOrientation.value = previewOrientation;
+        }
+    }
+    maybeUpdateUIRotation() {
+        const uiRotation = this.rotationHelper.uiRotation;
+        if (uiRotation !== this.lastUIRotation) {
+            this.props.onUIRotationChanged?.(uiRotation);
+            this.lastUIRotation = uiRotation;
+        }
+    }
+    //#endregion
 
-  onCodeScanned(event) {
-    const codeScanner = this.props.codeScanner;
-    if (codeScanner == null) return;
-    codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);
-  }
+    onCodeScanned(event) {
+        const codeScanner = this.props.codeScanner;
+        if (codeScanner == null) return;
+        codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);
+    }
 
-  //#region Lifecycle
-  setFrameProcessor(frameProcessor) {
-    VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);
-  }
-  unsetFrameProcessor() {
-    VisionCameraProxy.removeFrameProcessor(this.handle);
-  }
-  onViewReady() {
-    this.isNativeViewMounted = true;
-    if (this.props.frameProcessor != null) {
-      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
-      this.setFrameProcessor(this.props.frameProcessor.frameProcessor);
-      this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;
-    }
-  }
-  onAverageFpsChanged({
-    nativeEvent: {
-      averageFps
-    }
-  }) {
-    this.setState(state => {
-      const averageFpsSamples = [...state.averageFpsSamples, averageFps];
-      while (averageFpsSamples.length >= MAX_BARS + 1) {
-        // we keep a maximum of 30 FPS samples in our history
-        averageFpsSamples.shift();
-      }
-      return {
-        ...state,
-        averageFpsSamples: averageFpsSamples
-      };
-    });
-  }
+    //#region Lifecycle
+    setFrameProcessor(frameProcessor) {
+        VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);
+    }
+    unsetFrameProcessor() {
+        VisionCameraProxy.removeFrameProcessor(this.handle);
+    }
+    onViewReady() {
+        this.isNativeViewMounted = true;
+        if (this.props.frameProcessor != null) {
+            // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
+            this.setFrameProcessor(this.props.frameProcessor.frameProcessor);
+            this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;
+        }
+    }
+    onAverageFpsChanged({nativeEvent: {averageFps}}) {
+        this.setState((state) => {
+            const averageFpsSamples = [...state.averageFpsSamples, averageFps];
+            while (averageFpsSamples.length >= MAX_BARS + 1) {
+                // we keep a maximum of 30 FPS samples in our history
+                averageFpsSamples.shift();
+            }
+            return {
+                ...state,
+                averageFpsSamples: averageFpsSamples,
+            };
+        });
+    }
 
-  /** @internal */
-  componentDidUpdate() {
-    if (!this.isNativeViewMounted) return;
-    const frameProcessor = this.props.frameProcessor;
-    if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
-      // frameProcessor argument identity changed. Update native to reflect the change.
-      if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);else this.unsetFrameProcessor();
-      this.lastFrameProcessor = frameProcessor?.frameProcessor;
-    }
-  }
-  //#endregion
+    /** @internal */
+    componentDidUpdate() {
+        if (!this.isNativeViewMounted) return;
+        const frameProcessor = this.props.frameProcessor;
+        if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
+            // frameProcessor argument identity changed. Update native to reflect the change.
+            if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);
+            else this.unsetFrameProcessor();
+            this.lastFrameProcessor = frameProcessor?.frameProcessor;
+        }
+    }
+    //#endregion
 
-  /** @internal */
-  render() {
-    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
-    const {
-      device,
-      frameProcessor,
-      codeScanner,
-      enableFpsGraph,
-      fps,
-      videoBitRate,
-      ...props
-    } = this.props;
+    /** @internal */
+    render() {
+        // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
+        const {device, frameProcessor, codeScanner, enableFpsGraph, fps, videoBitRate, ...props} = this.props;
 
-    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
-    if (device == null) {
-      throw new CameraRuntimeError('device/no-device', 'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices');
-    }
-    const shouldEnableBufferCompression = props.video === true && frameProcessor == null;
-    const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;
-    const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);
-    const shouldBeMirrored = device.position === 'front';
+        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
+        if (device == null) {
+            throw new CameraRuntimeError(
+                'device/no-device',
+                'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices',
+            );
+        }
+        const shouldEnableBufferCompression = props.video === true && frameProcessor == null;
+        const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;
+        const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);
+        const shouldBeMirrored = device.position === 'front';
 
-    // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
-    const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];
-    const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];
+        // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
+        const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];
+        const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];
 
-    // bitrate is number (override) or string (multiplier)
-    let bitRateMultiplier;
-    let bitRateOverride;
-    if (typeof videoBitRate === 'number') {
-      // If the user passed an absolute number as a bit-rate, we just use this as a full override.
-      bitRateOverride = videoBitRate;
-    } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
-      // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
-      bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);
-    }
-    return /*#__PURE__*/React.createElement(NativeCameraView, _extends({}, props, {
-      cameraId: device.id,
-      ref: this.ref,
-      torch: torch,
-      minFps: minFps,
-      maxFps: maxFps,
-      isMirrored: props.isMirrored ?? shouldBeMirrored,
-      onViewReady: this.onViewReady,
-      onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,
-      onInitialized: this.onInitialized,
-      onCodeScanned: this.onCodeScanned,
-      onStarted: this.onStarted,
-      onStopped: this.onStopped,
-      onPreviewStarted: this.onPreviewStarted,
-      onPreviewStopped: this.onPreviewStopped,
-      onShutter: this.onShutter,
-      videoBitRateMultiplier: bitRateMultiplier,
-      videoBitRateOverride: bitRateOverride,
-      onOutputOrientationChanged: this.onOutputOrientationChanged,
-      onPreviewOrientationChanged: this.onPreviewOrientationChanged,
-      onError: this.onError,
-      codeScannerOptions: codeScanner,
-      enableFrameProcessor: frameProcessor != null,
-      enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,
-      preview: isRenderingWithSkia ? false : props.preview ?? true
-    }), isRenderingWithSkia && /*#__PURE__*/React.createElement(SkiaCameraCanvas, {
-      style: styles.customPreviewView,
-      offscreenTextures: frameProcessor.offscreenTextures,
-      resizeMode: props.resizeMode
-    }), enableFpsGraph && /*#__PURE__*/React.createElement(FpsGraph, {
-      style: styles.fpsGraph,
-      averageFpsSamples: this.state.averageFpsSamples,
-      targetMaxFps: props.format?.maxFps ?? 60
-    }));
-  }
+        // bitrate is number (override) or string (multiplier)
+        let bitRateMultiplier;
+        let bitRateOverride;
+        if (typeof videoBitRate === 'number') {
+            // If the user passed an absolute number as a bit-rate, we just use this as a full override.
+            bitRateOverride = videoBitRate;
+        } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
+            // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
+            bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);
+        }
+        return /*#__PURE__*/ React.createElement(
+            NativeCameraView,
+            _extends({}, props, {
+                cameraId: device.id,
+                ref: this.ref,
+                torch: torch,
+                minFps: minFps,
+                maxFps: maxFps,
+                isMirrored: props.isMirrored ?? shouldBeMirrored,
+                onViewReady: this.onViewReady,
+                onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,
+                onInitialized: this.onInitialized,
+                onCodeScanned: this.onCodeScanned,
+                onStarted: this.onStarted,
+                onStopped: this.onStopped,
+                onPreviewStarted: this.onPreviewStarted,
+                onPreviewStopped: this.onPreviewStopped,
+                onShutter: this.onShutter,
+                videoBitRateMultiplier: bitRateMultiplier,
+                videoBitRateOverride: bitRateOverride,
+                onOutputOrientationChanged: this.onOutputOrientationChanged,
+                onPreviewOrientationChanged: this.onPreviewOrientationChanged,
+                onError: this.onError,
+                codeScannerOptions: codeScanner,
+                enableFrameProcessor: frameProcessor != null,
+                enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,
+                preview: isRenderingWithSkia ? false : props.preview ?? true,
+            }),
+            isRenderingWithSkia &&
+                /*#__PURE__*/ React.createElement(SkiaCameraCanvas, {
+                    style: styles.customPreviewView,
+                    offscreenTextures: frameProcessor.offscreenTextures,
+                    resizeMode: props.resizeMode,
+                }),
+            enableFpsGraph &&
+                /*#__PURE__*/ React.createElement(FpsGraph, {
+                    style: styles.fpsGraph,
+                    averageFpsSamples: this.state.averageFpsSamples,
+                    targetMaxFps: props.format?.maxFps ?? 60,
+                }),
+        );
+    }
 }
 //#endregion
 
 const styles = StyleSheet.create({
-  customPreviewView: {
-    flex: 1
-  },
-  fpsGraph: {
-    elevation: 1,
-    position: 'absolute',
-    left: 15,
-    top: 30
-  }
+    customPreviewView: {
+        flex: 1,
+    },
+    fpsGraph: {
+        elevation: 1,
+        position: 'absolute',
+        left: 15,
+        top: 30,
+    },
 });
 //# sourceMappingURL=Camera.js.map
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js.map b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
index a1a484f..b45fa1d 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
@@ -1 +1,151 @@
-{"version":3,"names":["React","findNodeHandle","StyleSheet","CameraRuntimeError","tryParseNativeCameraError","isErrorWithCause","CameraModule","VisionCameraProxy","CameraDevices","SkiaCameraCanvas","FpsGraph","MAX_BARS","NativeCameraView","RotationHelper","isSkiaFrameProcessor","frameProcessor","type","Camera","PureComponent","displayName","isNativeViewMounted","lastUIRotation","undefined","rotationHelper","constructor","props","onViewReady","bind","onAverageFpsChanged","onInitialized","onStarted","onStopped","onPreviewStarted","onPreviewStopped","onShutter","onOutputOrientationChanged","onPreviewOrientationChanged","onError","onCodeScanned","ref","createRef","lastFrameProcessor","state","isRecordingWithFlash","averageFpsSamples","handle","nodeHandle","current","takePhoto","options","e","takeSnapshot","getBitRateMultiplier","bitRate","startRecording","onRecordingError","onRecordingFinished","passThruOptions","flash","setState","onRecordCallback","video","error","nativeRecordVideoOptions","pauseRecording","resumeRecording","stopRecording","cancelRecording","focus","point","getAvailableCameraDevices","addCameraDevicesChangedListener","listener","getCameraPermissionStatus","getMicrophonePermissionStatus","getLocationPermissionStatus","requestCameraPermission","requestMicrophonePermission","requestLocationPermission","event","nativeEvent","cause","cameraError","code","message","console","outputOrientation","maybeUpdateUIRotation","previewOrientation","value","uiRotation","onUIRotationChanged","codeScanner","codes","frame","setFrameProcessor","unsetFrameProcessor","removeFrameProcessor","averageFps","length","shift","componentDidUpdate","render","device","enableFpsGraph","fps","videoBitRate","shouldEnableBufferCompression","torch","isRenderingWithSkia","shouldBeMirrored","position","minFps","maxFps","bitRateMultiplier","bitRateOverride","createElement","_extends","cameraId","id","isMirrored","videoBitRateMultiplier","videoBitRateOverride","codeScannerOptions","enableFrameProcessor","enableBufferCompression","preview","style","styles","customPreviewView","offscreenTextures","resizeMode","fpsGraph","targetMaxFps","format","create","flex","elevation","left","top"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAaiB,eAAeA,CAAA,EAAkB;IAC5C,IAAI;MACF,OAAO,MAAM7D,YAAY,CAAC6D,eAAe,CAAC,IAAI,CAACtB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAakB,KAAKA,CAACC,KAAY,EAAiB;IAC9C,IAAI;MACF,OAAO,MAAM/D,YAAY,CAAC8D,KAAK,CAAC,IAAI,CAACvB,MAAM,EAAEwB,KAAK,CAAC;IACrD,CAAC,CAAC,OAAOnB,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;EACA;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcoB,yBAAyBA,CAAA,EAAmB;IACxD,OAAO9D,aAAa,CAAC8D,yBAAyB,CAAC,CAAC;EAClD;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAcC,+BAA+BA,CAACC,QAA8C,EAAuB;IACjH,OAAOhE,aAAa,CAAC+D,+BAA+B,CAACC,QAAQ,CAAC;EAChE;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAcC,yBAAyBA,CAAA,EAA2B;IAChE,OAAOnE,YAAY,CAACmE,yBAAyB,CAAC,CAAC;EACjD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,6BAA6BA,CAAA,EAA2B;IACpE,OAAOpE,YAAY,CAACoE,6BAA6B,CAAC,CAAC;EACrD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,2BAA2BA,CAAA,EAA2B;IAClE,OAAOrE,YAAY,CAACqE,2BAA2B,CAAC,CAAC;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","ignoreList":[]}
+{
+  "version": 3,
+  "names": [
+    "React",
+    "findNodeHandle",
+    "StyleSheet",
+    "CameraRuntimeError",
+    "tryParseNativeCameraError",
+    "isErrorWithCause",
+    "CameraModule",
+    "VisionCameraProxy",
+    "CameraDevices",
+    "SkiaCameraCanvas",
+    "FpsGraph",
+    "MAX_BARS",
+    "NativeCameraView",
+    "RotationHelper",
+    "isSkiaFrameProcessor",
+    "frameProcessor",
+    "type",
+    "Camera",
+    "PureComponent",
+    "displayName",
+    "isNativeViewMounted",
+    "lastUIRotation",
+    "undefined",
+    "rotationHelper",
+    "constructor",
+    "props",
+    "onViewReady",
+    "bind",
+    "onAverageFpsChanged",
+    "onInitialized",
+    "onStarted",
+    "onStopped",
+    "onPreviewStarted",
+    "onPreviewStopped",
+    "onShutter",
+    "onOutputOrientationChanged",
+    "onPreviewOrientationChanged",
+    "onError",
+    "onCodeScanned",
+    "ref",
+    "createRef",
+    "lastFrameProcessor",
+    "state",
+    "isRecordingWithFlash",
+    "averageFpsSamples",
+    "handle",
+    "nodeHandle",
+    "current",
+    "takePhoto",
+    "options",
+    "e",
+    "takeSnapshot",
+    "getBitRateMultiplier",
+    "bitRate",
+    "startRecording",
+    "onRecordingError",
+    "onRecordingFinished",
+    "passThruOptions",
+    "flash",
+    "setState",
+    "onRecordCallback",
+    "video",
+    "error",
+    "nativeRecordVideoOptions",
+    "pauseRecording",
+    "resumeRecording",
+    "stopRecording",
+    "cancelRecording",
+    "focus",
+    "point",
+    "getAvailableCameraDevices",
+    "addCameraDevicesChangedListener",
+    "listener",
+    "getCameraPermissionStatus",
+    "getMicrophonePermissionStatus",
+    "getLocationPermissionStatus",
+    "requestCameraPermission",
+    "requestMicrophonePermission",
+    "requestLocationPermission",
+    "event",
+    "nativeEvent",
+    "cause",
+    "cameraError",
+    "code",
+    "message",
+    "console",
+    "outputOrientation",
+    "maybeUpdateUIRotation",
+    "previewOrientation",
+    "value",
+    "uiRotation",
+    "onUIRotationChanged",
+    "codeScanner",
+    "codes",
+    "frame",
+    "setFrameProcessor",
+    "unsetFrameProcessor",
+    "removeFrameProcessor",
+    "averageFps",
+    "length",
+    "shift",
+    "componentDidUpdate",
+    "render",
+    "device",
+    "enableFpsGraph",
+    "fps",
+    "videoBitRate",
+    "shouldEnableBufferCompression",
+    "torch",
+    "isRenderingWithSkia",
+    "shouldBeMirrored",
+    "position",
+    "minFps",
+    "maxFps",
+    "bitRateMultiplier",
+    "bitRateOverride",
+    "createElement",
+    "_extends",
+    "cameraId",
+    "id",
+    "isMirrored",
+    "videoBitRateMultiplier",
+    "videoBitRateOverride",
+    "codeScannerOptions",
+    "enableFrameProcessor",
+    "enableBufferCompression",
+    "preview",
+    "style",
+    "styles",
+    "customPreviewView",
+    "offscreenTextures",
+    "resizeMode",
+    "fpsGraph",
+    "targetMaxFps",
+    "format",
+    "create",
+    "flex",
+    "elevation",
+    "left",
+    "top"
+  ],
+  "sourceRoot": "../../src",
+  "sources": [
+    "Camera.tsx"
+  ],
+  "mappings": ";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,UAAU,QAAQ,cAAc;AAGzD,SAASC,kBAAkB,EAAEC,yBAAyB,EAAEC,gBAAgB,QAAQ,eAAe;AAE/F,SAASC,YAAY,QAAQ,sBAAsB;AAInD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,aAAa,QAAQ,iBAAiB;AAG/C,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,YAAY;AAS/C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;;AAUA;;AAEA,SAASC,oBAAoBA,CAACC,cAAgE,EAA4C;EACxI,OAAOA,cAAc,EAAEC,IAAI,KAAK,eAAe;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,SAASjB,KAAK,CAACkB,aAAa,CAA2B;EACxE;EACA,OAAOC,WAAW,GAAG,QAAQ;EAC7B;EACAA,WAAW,GAAGF,MAAM,CAACE,WAAW;EAExBC,mBAAmB,GAAG,KAAK;EAC3BC,cAAc,GAAuBC,SAAS;EAC9CC,cAAc,GAAG,IAAIV,cAAc,CAAC,CAAC;EAI7C;EACAW,WAAWA,CAACC,KAAkB,EAAE;IAC9B,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,CAACD,IAAI,CAAC,IAAI,CAAC;IAC9D,IAAI,CAACE,aAAa,GAAG,IAAI,CAACA,aAAa,CAACF,IAAI,CAAC,IAAI,CAAC;IAClD,IAAI,CAACG,SAAS,GAAG,IAAI,CAACA,SAAS,CAACH,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACI,SAAS,GAAG,IAAI,CAACA,SAAS,CAACJ,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACK,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACL,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACM,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACN,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACO,SAAS,GAAG,IAAI,CAACA,SAAS,CAACP,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACQ,0BAA0B,GAAG,IAAI,CAACA,0BAA0B,CAACR,IAAI,CAAC,IAAI,CAAC;IAC5E,IAAI,CAACS,2BAA2B,GAAG,IAAI,CAACA,2BAA2B,CAACT,IAAI,CAAC,IAAI,CAAC;IAC9E,IAAI,CAACU,OAAO,GAAG,IAAI,CAACA,OAAO,CAACV,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACW,aAAa,GAAG,IAAI,CAACA,aAAa,CAACX,IAAI,CAAC,IAAI,CAAC;IAClD,IAAI,CAACY,GAAG,gBAAGvC,KAAK,CAACwC,SAAS,CAAU,CAAC;IACrC,IAAI,CAACC,kBAAkB,GAAGnB,SAAS;IACnC,IAAI,CAACoB,KAAK,GAAG;MACXC,oBAAoB,EAAE,KAAK;MAC3BC,iBAAiB,EAAE;IACrB,CAAC;EACH;EAEA,IAAYC,MAAMA,CAAA,EAAW;IAC3B,MAAMC,UAAU,GAAG7C,cAAc,CAAC,IAAI,CAACsC,GAAG,CAACQ,OAAO,CAAC;IACnD,IAAID,UAAU,IAAI,IAAI,IAAIA,UAAU,KAAK,CAAC,CAAC,EAAE;MAC3C,MAAM,IAAI3C,kBAAkB,CAC1B,uBAAuB,EACvB,iGACF,CAAC;IACH;IAEA,OAAO2C,UAAU;EACnB;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAaE,SAASA,CAACC,OAA0B,EAAsB;IACrE,IAAI;MACF,OAAO,MAAM3C,YAAY,CAAC0C,SAAS,CAAC,IAAI,CAACH,MAAM,EAAEI,OAAO,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAaC,YAAYA,CAACF,OAA6B,EAAsB;IAC3E,IAAI;MACF,OAAO,MAAM3C,YAAY,CAAC6C,YAAY,CAAC,IAAI,CAACN,MAAM,EAAEI,OAAO,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;EAEQE,oBAAoBA,CAACC,OAAoC,EAAU;IACzE,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,IAAI,IAAI,EAAE,OAAO,CAAC;IAC5D,QAAQA,OAAO;MACb,KAAK,WAAW;QACd,OAAO,GAAG;MACZ,KAAK,KAAK;QACR,OAAO,GAAG;MACZ,KAAK,QAAQ;QACX,OAAO,CAAC;MACV,KAAK,MAAM;QACT,OAAO,GAAG;MACZ,KAAK,YAAY;QACf,OAAO,GAAG;IACd;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACSC,cAAcA,CAACL,OAA2B,EAAQ;IACvD,MAAM;MAAEM,gBAAgB;MAAEC,mBAAmB;MAAE,GAAGC;IAAgB,CAAC,GAAGR,OAAO;IAC7E,IAAI,OAAOM,gBAAgB,KAAK,UAAU,IAAI,OAAOC,mBAAmB,KAAK,UAAU,EACrF,MAAM,IAAIrD,kBAAkB,CAAC,6BAA6B,EAAE,qEAAqE,CAAC;IAEpI,IAAI8C,OAAO,CAACS,KAAK,KAAK,IAAI,EAAE;MAC1B;MACA,IAAI,CAACC,QAAQ,CAAC;QACZhB,oBAAoB,EAAE;MACxB,CAAC,CAAC;IACJ;IAEA,MAAMiB,gBAAgB,GAAGA,CAACC,KAAiB,EAAEC,KAA0B,KAAW;MAChF,IAAI,IAAI,CAACpB,KAAK,CAACC,oBAAoB,EAAE;QACnC;QACA,IAAI,CAACgB,QAAQ,CAAC;UACZhB,oBAAoB,EAAE;QACxB,CAAC,CAAC;MACJ;MAEA,IAAImB,KAAK,IAAI,IAAI,EAAE,OAAOP,gBAAgB,CAACO,KAAK,CAAC;MACjD,IAAID,KAAK,IAAI,IAAI,EAAE,OAAOL,mBAAmB,CAACK,KAAK,CAAC;IACtD,CAAC;IAED,MAAME,wBAAkD,GAAGN,eAAe;IAC1E,IAAI;MACF;MACAnD,YAAY,CAACgD,cAAc,CAAC,IAAI,CAACT,MAAM,EAAEkB,wBAAwB,EAAEH,gBAAgB,CAAC;IACtF,CAAC,CAAC,OAAOV,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAac,cAAcA,CAAA,EAAkB;IAC3C,IAAI;MACF,OAAO,MAAM1D,YAAY,CAAC0D,cAAc,CAAC,IAAI,CAACnB,MAAM,CAAC;IACvD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAae,eAAeA,CAAA,EAAkB;IAC5C,IAAI;MACF,OAAO,MAAM3D,YAAY,CAAC2D,eAAe,CAAC,IAAI,CAACpB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAagB,aAAaA,CAAA,EAAkB;IAC1C,IAAI;MACF,OAAO,MAAM5D,YAAY,CAAC4D,aAAa,CAAC,IAAI,CAACrB,MAAM,CAAC;IACtD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAaiB,eAAeA,CAAA,EAAkB;IAC5C,IAAI;MACF,OAAO,MAAM7D,YAAY,CAAC6D,eAAe,CAAC,IAAI,CAACtB,MAAM,CAAC;IACxD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAakB,KAAKA,CAACC,KAAY,EAAiB;IAC9C,IAAI;MACF,OAAO,MAAM/D,YAAY,CAAC8D,KAAK,CAAC,IAAI,CAACvB,MAAM,EAAEwB,KAAK,CAAC;IACrD,CAAC,CAAC,OAAOnB,CAAC,EAAE;MACV,MAAM9C,yBAAyB,CAAC8C,CAAC,CAAC;IACpC;EACF;EACA;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcoB,yBAAyBA,CAAA,EAAmB;IACxD,OAAO9D,aAAa,CAAC8D,yBAAyB,CAAC,CAAC;EAClD;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAcC,+BAA+BA,CAACC,QAA8C,EAAuB;IACjH,OAAOhE,aAAa,CAAC+D,+BAA+B,CAACC,QAAQ,CAAC;EAChE;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAcC,yBAAyBA,CAAA,EAA2B;IAChE,OAAOnE,YAAY,CAACmE,yBAAyB,CAAC,CAAC;EACjD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,6BAA6BA,CAAA,EAA2B;IACpE,OAAOpE,YAAY,CAACoE,6BAA6B,CAAC,CAAC;EACrD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,2BAA2BA,CAAA,EAA2B;IAClE,OAAOrE,YAAY,CAACqE,2BAA2B,CAAC,CAAC;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",
+  "ignoreList": []
+}
diff --git a/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js b/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js
new file mode 100644
index 0000000..3dd9033
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js
@@ -0,0 +1,5 @@
+/* eslint-disable @typescript-eslint/ban-types */
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+
+export default codegenNativeComponent('CameraView');
+//# sourceMappingURL=CameraViewNativeComponent.js.map
diff --git a/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js.map b/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js.map
new file mode 100644
index 0000000..fc84756
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/module/specs/CameraViewNativeComponent.js.map
@@ -0,0 +1,11 @@
+{
+  "version": 3,
+  "names": [
+    "codegenNativeComponent"
+  ],
+  "sourceRoot": "../../../src",
+  "sources": [
+    "specs/CameraViewNativeComponent.ts"
+  ],
+  "mappings": "AAAA;;AAGA,OAAOA,sBAAsB,MAAM,yDAAyD;AAuF5F,eAAeA,sBAAsB,CAAc,YAAY,CAAC"
+}
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
index 5abba6e..8e4c1b6 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
+++ b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
@@ -1 +1,10 @@
-{"version":3,"file":"Camera.d.ts","sourceRoot":"","sources":["../../src/Camera.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
+{
+  "version": 3,
+  "file": "Camera.d.ts",
+  "sourceRoot": "",
+  "sources": [
+    "../../src/Camera.tsx"
+  ],
+  "names": [],
+  "mappings": "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"
+}
diff --git a/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts b/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts
new file mode 100644
index 0000000..f919d3c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts
@@ -0,0 +1,107 @@
+/// <reference types="react-native/types/modules/codegen" />
+/// <reference types="react-native/modules/codegen" />
+import type {HostComponent, ViewProps} from 'react-native';
+import type {DirectEventHandler, Double, Int32} from 'react-native/Libraries/Types/CodegenTypes';
+
+export type VisionCameraComponentType = HostComponent<NativeProps>;
+export interface NativeProps extends ViewProps {
+    enableGpuBuffers: boolean;
+    androidPreviewViewType?: string;
+    cameraId: string;
+    enableFrameProcessor: boolean;
+    enableLocation: boolean;
+    enableBufferCompression: boolean;
+    photoQualityBalance: string;
+    isActive: boolean;
+    photo?: boolean;
+    video?: boolean;
+    audio?: boolean;
+    torch?: string;
+    zoom?: Double;
+    exposure?: Double;
+    enableZoomGesture?: boolean;
+    enableFpsGraph?: boolean;
+    resizeMode?: string;
+    format?: Readonly<{
+        supportsDepthCapture?: boolean;
+        photoHeight: Double;
+        photoWidth: Double;
+        videoHeight: Double;
+        videoWidth: Double;
+        maxISO: Double;
+        minISO: Double;
+        maxFps: Double;
+        minFps: Double;
+        fieldOfView: Double;
+        supportsVideoHDR: boolean;
+        supportsPhotoHDR: boolean;
+        autoFocusSystem: string;
+        videoStabilizationModes: string[];
+        pixelFormats: string[];
+    }>;
+    pixelFormat: string;
+    fps?: Int32;
+    videoHdr?: boolean;
+    photoHdr?: boolean;
+    lowLightBoost?: boolean;
+    videoStabilizationMode?: string;
+    enableDepthData?: boolean;
+    enablePortraitEffectsMatteDelivery?: boolean;
+    orientation?: string;
+    codeScannerOptions?: Readonly<{
+        codeTypes?: string[];
+        interval?: Double;
+        regionOfInterest?: Readonly<{
+            x?: Double;
+            y?: Double;
+            width?: Double;
+            height?: Double;
+        }>;
+    }>;
+    onCodeScanned?: DirectEventHandler<
+        Readonly<{
+            codes?: Readonly<{
+                type?: string;
+                value?: string;
+                frame?: Readonly<{
+                    x: Double;
+                    y: Double;
+                    width: Double;
+                    height: Double;
+                }>;
+            }>;
+            frame?: Readonly<{
+                width: Int32;
+                height: Int32;
+            }>;
+            corners?: Readonly<{
+                x: Double;
+                y: Double;
+            }>;
+        }>
+    >;
+    onShutter?: DirectEventHandler<
+        Readonly<{
+            type: string;
+        }>
+    >;
+    onStarted?: DirectEventHandler<Readonly<{}>>;
+    onStopped?: DirectEventHandler<Readonly<{}>>;
+    onInitialized?: DirectEventHandler<Readonly<{}>>;
+    onError?: DirectEventHandler<
+        Readonly<{
+            code: string;
+            message: string;
+            cause: Readonly<{
+                code: string;
+                domain: string;
+                message: string;
+                details: string;
+            }>;
+        }>
+    >;
+    onViewReady: DirectEventHandler<Readonly<{}>>;
+}
+declare const _default: import('react-native/Libraries/Utilities/codegenNativeComponent').NativeComponentType<NativeProps>;
+export default _default;
+//# sourceMappingURL=CameraViewNativeComponent.d.ts.map
diff --git a/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts.map
new file mode 100644
index 0000000..61fb28a
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/specs/CameraViewNativeComponent.d.ts.map
@@ -0,0 +1,10 @@
+{
+  "version": 3,
+  "file": "CameraViewNativeComponent.d.ts",
+  "sourceRoot": "",
+  "sources": [
+    "../../../src/specs/CameraViewNativeComponent.ts"
+  ],
+  "names": [],
+  "mappings": "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"
+}
diff --git a/node_modules/react-native-vision-camera/src/Camera.tsx b/node_modules/react-native-vision-camera/src/Camera.tsx
index afe056a..2c82a0b 100644
--- a/node_modules/react-native-vision-camera/src/Camera.tsx
+++ b/node_modules/react-native-vision-camera/src/Camera.tsx
@@ -1,45 +1,38 @@
-import React from 'react'
-import { findNodeHandle, StyleSheet } from 'react-native'
-import type { CameraDevice } from './types/CameraDevice'
-import type { CameraCaptureError } from './CameraError'
-import { CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError'
-import type { CameraProps, DrawableFrameProcessor, OnShutterEvent, ReadonlyFrameProcessor } from './types/CameraProps'
-import { CameraModule } from './NativeCameraModule'
-import type { PhotoFile, TakePhotoOptions } from './types/PhotoFile'
-import type { Point } from './types/Point'
-import type { RecordVideoOptions, VideoFile } from './types/VideoFile'
-import { VisionCameraProxy } from './frame-processors/VisionCameraProxy'
-import { CameraDevices } from './CameraDevices'
-import type { EmitterSubscription, NativeSyntheticEvent, NativeMethods } from 'react-native'
-import type { TakeSnapshotOptions } from './types/Snapshot'
-import { SkiaCameraCanvas } from './skia/SkiaCameraCanvas'
-import type { Frame } from './types/Frame'
-import { FpsGraph, MAX_BARS } from './FpsGraph'
-import type {
-  AverageFpsChangedEvent,
-  NativeCameraViewProps,
-  OnCodeScannedEvent,
-  OnErrorEvent,
-  OutputOrientationChangedEvent,
-  PreviewOrientationChangedEvent,
-} from './NativeCameraView'
-import { NativeCameraView } from './NativeCameraView'
-import { RotationHelper } from './RotationHelper'
+import React from 'react';
+import {findNodeHandle, StyleSheet} from 'react-native';
+import type {EmitterSubscription, NativeMethods, NativeSyntheticEvent} from 'react-native';
+import {CameraDevices} from './CameraDevices';
+import type {CameraCaptureError} from './CameraError';
+import {CameraRuntimeError, isErrorWithCause, tryParseNativeCameraError} from './CameraError';
+import {FpsGraph, MAX_BARS} from './FpsGraph';
+import {VisionCameraProxy} from './frame-processors/VisionCameraProxy';
+import {CameraModule} from './NativeCameraModule';
+import type {AverageFpsChangedEvent, NativeCameraViewProps, OnCodeScannedEvent, OnErrorEvent, OutputOrientationChangedEvent, PreviewOrientationChangedEvent} from './NativeCameraView';
+import {NativeCameraView} from './NativeCameraView';
+import {RotationHelper} from './RotationHelper';
+import {SkiaCameraCanvas} from './skia/SkiaCameraCanvas';
+import type {CameraDevice} from './types/CameraDevice';
+import type {CameraProps, DrawableFrameProcessor, OnShutterEvent, ReadonlyFrameProcessor} from './types/CameraProps';
+import type {Frame} from './types/Frame';
+import type {PhotoFile, TakePhotoOptions} from './types/PhotoFile';
+import type {Point} from './types/Point';
+import type {TakeSnapshotOptions} from './types/Snapshot';
+import type {RecordVideoOptions, VideoFile} from './types/VideoFile';
 
 //#region Types
-export type CameraPermissionStatus = 'granted' | 'not-determined' | 'denied' | 'restricted'
-export type CameraPermissionRequestResult = 'granted' | 'denied'
+export type CameraPermissionStatus = 'granted' | 'not-determined' | 'denied' | 'restricted';
+export type CameraPermissionRequestResult = 'granted' | 'denied';
 
-type NativeRecordVideoOptions = Omit<RecordVideoOptions, 'onRecordingError' | 'onRecordingFinished'>
-type RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>
+type NativeRecordVideoOptions = Omit<RecordVideoOptions, 'onRecordingError' | 'onRecordingFinished'>;
+type RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;
 interface CameraState {
-  isRecordingWithFlash: boolean
-  averageFpsSamples: number[]
+    isRecordingWithFlash: boolean;
+    averageFpsSamples: number[];
 }
 //#endregion
 
 function isSkiaFrameProcessor(frameProcessor?: ReadonlyFrameProcessor | DrawableFrameProcessor): frameProcessor is DrawableFrameProcessor {
-  return frameProcessor?.type === 'drawable-skia'
+    return frameProcessor?.type === 'drawable-skia';
 }
 
 //#region Camera Component
@@ -76,627 +69,629 @@ function isSkiaFrameProcessor(frameProcessor?: ReadonlyFrameProcessor | Drawable
  * @component
  */
 export class Camera extends React.PureComponent<CameraProps, CameraState> {
-  /** @internal */
-  static displayName = 'Camera'
-  /** @internal */
-  displayName = Camera.displayName
-  private lastFrameProcessor: ((frame: Frame) => void) | undefined
-  private isNativeViewMounted = false
-  private lastUIRotation: number | undefined = undefined
-  private rotationHelper = new RotationHelper()
-
-  private readonly ref: React.RefObject<RefType>
-
-  /** @internal */
-  constructor(props: CameraProps) {
-    super(props)
-    this.onViewReady = this.onViewReady.bind(this)
-    this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this)
-    this.onInitialized = this.onInitialized.bind(this)
-    this.onStarted = this.onStarted.bind(this)
-    this.onStopped = this.onStopped.bind(this)
-    this.onPreviewStarted = this.onPreviewStarted.bind(this)
-    this.onPreviewStopped = this.onPreviewStopped.bind(this)
-    this.onShutter = this.onShutter.bind(this)
-    this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this)
-    this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this)
-    this.onError = this.onError.bind(this)
-    this.onCodeScanned = this.onCodeScanned.bind(this)
-    this.ref = React.createRef<RefType>()
-    this.lastFrameProcessor = undefined
-    this.state = {
-      isRecordingWithFlash: false,
-      averageFpsSamples: [],
-    }
-  }
-
-  private get handle(): number {
-    const nodeHandle = findNodeHandle(this.ref.current)
-    if (nodeHandle == null || nodeHandle === -1) {
-      throw new CameraRuntimeError(
-        'system/view-not-found',
-        "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?",
-      )
-    }
-
-    return nodeHandle
-  }
-
-  //#region View-specific functions (UIViewManager)
-  /**
-   * Take a single photo and write it's content to a temporary file.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const photo = await camera.current.takePhoto({
-   *   flash: 'on',
-   *   enableAutoRedEyeReduction: true
-   * })
-   * ```
-   */
-  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {
-    try {
-      return await CameraModule.takePhoto(this.handle, options ?? {})
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Captures a snapshot of the Camera view and write it's content to a temporary file.
-   *
-   * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
-   * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * const snapshot = await camera.current.takeSnapshot({
-   *   quality: 100
-   * })
-   * ```
-   */
-  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {
-    try {
-      return await CameraModule.takeSnapshot(this.handle, options ?? {})
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  private getBitRateMultiplier(bitRate: CameraProps['videoBitRate']): number {
-    if (typeof bitRate === 'number' || bitRate == null) return 1
-    switch (bitRate) {
-      case 'extra-low':
-        return 0.6
-      case 'low':
-        return 0.8
-      case 'normal':
-        return 1
-      case 'high':
-        return 1.2
-      case 'extra-high':
-        return 1.4
-    }
-  }
-
-  /**
-   * Start a new video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(() => {
-   *   camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  public startRecording(options: RecordVideoOptions): void {
-    const { onRecordingError, onRecordingFinished, ...passThruOptions } = options
-    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')
-      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!')
-
-    if (options.flash === 'on') {
-      // Enable torch for video recording
-      this.setState({
-        isRecordingWithFlash: true,
-      })
-    }
-
-    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {
-      if (this.state.isRecordingWithFlash) {
-        // disable torch again if it was enabled
-        this.setState({
-          isRecordingWithFlash: false,
-        })
-      }
-
-      if (error != null) return onRecordingError(error)
-      if (video != null) return onRecordingFinished(video)
-    }
-
-    const nativeRecordVideoOptions: NativeRecordVideoOptions = passThruOptions
-    try {
-      // TODO: Use TurboModules to make this awaitable.
-      CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Pauses the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  public async pauseRecording(): Promise<void> {
-    try {
-      return await CameraModule.pauseRecording(this.handle)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Resumes a currently paused video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * await camera.current.stopRecording()
-   * ```
-   */
-  public async resumeRecording(): Promise<void> {
-    try {
-      return await CameraModule.resumeRecording(this.handle)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Stop the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => console.error(error),
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.stopRecording()
-   * }, 5000)
-   * ```
-   */
-  public async stopRecording(): Promise<void> {
-    try {
-      return await CameraModule.stopRecording(this.handle)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Cancel the current video recording. The temporary video file will be deleted,
-   * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
-   * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * await camera.current.startRecording({
-   *   onRecordingFinished: (video) => console.log(video),
-   *   onRecordingError: (error) => {
-   *     if (error.code === 'capture/recording-canceled') {
-   *       // recording was canceled.
-   *     } else {
-   *       console.error(error)
-   *     }
-   *   },
-   * })
-   * setTimeout(async () => {
-   *   await camera.current.cancelRecording()
-   * }, 5000)
-   * ```
-   */
-  public async cancelRecording(): Promise<void> {
-    try {
-      return await CameraModule.cancelRecording(this.handle)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-
-  /**
-   * Focus the camera to a specific point in the coordinate system.
-   * @param {Point} point The point to focus to. This should be relative
-   * to the Camera view's coordinate system and is expressed in points.
-   *  * `(0, 0)` means **top left**.
-   *  * `(CameraView.width, CameraView.height)` means **bottom right**.
-   *
-   * Make sure the value doesn't exceed the CameraView's dimensions.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   * @example
-   * ```ts
-   * await camera.current.focus({
-   *   x: tapEvent.x,
-   *   y: tapEvent.y
-   * })
-   * ```
-   */
-  public async focus(point: Point): Promise<void> {
-    try {
-      return await CameraModule.focus(this.handle, point)
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-  //#endregion
-
-  //#region Static Functions (NativeModule)
-  /**
-   * Get a list of all available camera devices on the current phone.
-   *
-   * If you use Hooks, use the `useCameraDevices(..)` hook instead.
-   *
-   * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
-   * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
-   * could change over time when the external Camera device gets plugged in or plugged out, so
-   * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
-   *
-   * @example
-   * ```ts
-   * const devices = Camera.getAvailableCameraDevices()
-   * const backCameras = devices.filter((d) => d.position === "back")
-   * const frontCameras = devices.filter((d) => d.position === "front")
-   * ```
-   */
-  public static getAvailableCameraDevices(): CameraDevice[] {
-    return CameraDevices.getAvailableCameraDevices()
-  }
-  /**
-   * Adds a listener that gets called everytime the Camera Devices change, for example
-   * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
-   *
-   * If you use Hooks, use the `useCameraDevices()` hook instead.
-   */
-  public static addCameraDevicesChangedListener(listener: (newDevices: CameraDevice[]) => void): EmitterSubscription {
-    return CameraDevices.addCameraDevicesChangedListener(listener)
-  }
-  /**
-   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
-   * the user has permitted the app to use the camera.
-   *
-   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
-   */
-  public static getCameraPermissionStatus(): CameraPermissionStatus {
-    return CameraModule.getCameraPermissionStatus()
-  }
-  /**
-   * Gets the current Microphone-Recording Permission Status.
-   * Check this before enabling the `audio={...}` property to make sure the
-   * user has permitted the app to use the microphone.
-   *
-   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
-   */
-  public static getMicrophonePermissionStatus(): CameraPermissionStatus {
-    return CameraModule.getMicrophonePermissionStatus()
-  }
-  /**
-   * Gets the current Location Permission Status.
-   * Check this before enabling the `location={...}` property to make sure the
-   * the user has permitted the app to use the location.
-   *
-   * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
-   *
-   * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
-   * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
-   */
-  public static getLocationPermissionStatus(): CameraPermissionStatus {
-    return CameraModule.getLocationPermissionStatus()
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
-   *
-   * If the user has previously blocked the app from using the camera, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {
-    try {
-      return await CameraModule.requestCameraPermission()
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
-   *
-   * If the user has previously blocked the app from using the microphone, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {
-    try {
-      return await CameraModule.requestMicrophonePermission()
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-  /**
-   * Shows a "request permission" alert to the user, and resolves with the new location permission status.
-   *
-   * If the user has previously blocked the app from using the location, the alert will not be shown
-   * and `"denied"` will be returned.
-   *
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
-   * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
-   */
-  public static async requestLocationPermission(): Promise<CameraPermissionRequestResult> {
-    try {
-      return await CameraModule.requestLocationPermission()
-    } catch (e) {
-      throw tryParseNativeCameraError(e)
-    }
-  }
-  //#endregion
-
-  //#region Events (Wrapped to maintain reference equality)
-  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {
-    const error = event.nativeEvent
-    const cause = isErrorWithCause(error.cause) ? error.cause : undefined
-    // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
-    const cameraError = new CameraRuntimeError(error.code, error.message, cause)
-
-    if (this.props.onError != null) {
-      this.props.onError(cameraError)
-    } else {
-      // User didn't pass an `onError` handler, so just log it to console
-      console.error(cameraError)
-    }
-  }
-
-  private onInitialized(): void {
-    this.props.onInitialized?.()
-  }
-
-  private onStarted(): void {
-    this.props.onStarted?.()
-  }
-
-  private onStopped(): void {
-    this.props.onStopped?.()
-  }
-
-  private onPreviewStarted(): void {
-    this.props.onPreviewStarted?.()
-  }
-
-  private onPreviewStopped(): void {
-    this.props.onPreviewStopped?.()
-  }
-
-  private onShutter(event: NativeSyntheticEvent<OnShutterEvent>): void {
-    this.props.onShutter?.(event.nativeEvent)
-  }
-
-  private onOutputOrientationChanged({ nativeEvent: { outputOrientation } }: NativeSyntheticEvent<OutputOrientationChangedEvent>): void {
-    this.rotationHelper.outputOrientation = outputOrientation
-    this.props.onOutputOrientationChanged?.(outputOrientation)
-    this.maybeUpdateUIRotation()
-  }
-
-  private onPreviewOrientationChanged({ nativeEvent: { previewOrientation } }: NativeSyntheticEvent<PreviewOrientationChangedEvent>): void {
-    this.rotationHelper.previewOrientation = previewOrientation
-    this.props.onPreviewOrientationChanged?.(previewOrientation)
-    this.maybeUpdateUIRotation()
-
-    if (isSkiaFrameProcessor(this.props.frameProcessor)) {
-      // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
-      this.props.frameProcessor.previewOrientation.value = previewOrientation
-    }
-  }
-
-  private maybeUpdateUIRotation(): void {
-    const uiRotation = this.rotationHelper.uiRotation
-    if (uiRotation !== this.lastUIRotation) {
-      this.props.onUIRotationChanged?.(uiRotation)
-      this.lastUIRotation = uiRotation
-    }
-  }
-  //#endregion
-
-  private onCodeScanned(event: NativeSyntheticEvent<OnCodeScannedEvent>): void {
-    const codeScanner = this.props.codeScanner
-    if (codeScanner == null) return
-
-    codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame)
-  }
-
-  //#region Lifecycle
-  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {
-    VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor)
-  }
-
-  private unsetFrameProcessor(): void {
-    VisionCameraProxy.removeFrameProcessor(this.handle)
-  }
-
-  private onViewReady(): void {
-    this.isNativeViewMounted = true
-    if (this.props.frameProcessor != null) {
-      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
-      this.setFrameProcessor(this.props.frameProcessor.frameProcessor)
-      this.lastFrameProcessor = this.props.frameProcessor.frameProcessor
-    }
-  }
-
-  private onAverageFpsChanged({ nativeEvent: { averageFps } }: NativeSyntheticEvent<AverageFpsChangedEvent>): void {
-    this.setState((state) => {
-      const averageFpsSamples = [...state.averageFpsSamples, averageFps]
-      while (averageFpsSamples.length >= MAX_BARS + 1) {
-        // we keep a maximum of 30 FPS samples in our history
-        averageFpsSamples.shift()
-      }
-
-      return {
-        ...state,
-        averageFpsSamples: averageFpsSamples,
-      }
-    })
-  }
-
-  /** @internal */
-  componentDidUpdate(): void {
-    if (!this.isNativeViewMounted) return
-    const frameProcessor = this.props.frameProcessor
-    if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
-      // frameProcessor argument identity changed. Update native to reflect the change.
-      if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor)
-      else this.unsetFrameProcessor()
-
-      this.lastFrameProcessor = frameProcessor?.frameProcessor
-    }
-  }
-  //#endregion
-
-  /** @internal */
-  public render(): React.ReactNode {
-    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
-    const { device, frameProcessor, codeScanner, enableFpsGraph, fps, videoBitRate, ...props } = this.props
-
-    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
-    if (device == null) {
-      throw new CameraRuntimeError(
-        'device/no-device',
-        'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices',
-      )
-    }
-
-    const shouldEnableBufferCompression = props.video === true && frameProcessor == null
-    const torch = this.state.isRecordingWithFlash ? 'on' : props.torch
-    const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor)
-    const shouldBeMirrored = device.position === 'front'
-
-    // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
-    const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0]
-    const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1]
-
-    // bitrate is number (override) or string (multiplier)
-    let bitRateMultiplier: number | undefined
-    let bitRateOverride: number | undefined
-    if (typeof videoBitRate === 'number') {
-      // If the user passed an absolute number as a bit-rate, we just use this as a full override.
-      bitRateOverride = videoBitRate
-    } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
-      // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
-      bitRateMultiplier = this.getBitRateMultiplier(videoBitRate)
-    }
-
-    return (
-      <NativeCameraView
-        {...props}
-        cameraId={device.id}
-        ref={this.ref}
-        torch={torch}
-        minFps={minFps}
-        maxFps={maxFps}
-        isMirrored={props.isMirrored ?? shouldBeMirrored}
-        onViewReady={this.onViewReady}
-        onAverageFpsChanged={enableFpsGraph ? this.onAverageFpsChanged : undefined}
-        onInitialized={this.onInitialized}
-        onCodeScanned={this.onCodeScanned}
-        onStarted={this.onStarted}
-        onStopped={this.onStopped}
-        onPreviewStarted={this.onPreviewStarted}
-        onPreviewStopped={this.onPreviewStopped}
-        onShutter={this.onShutter}
-        videoBitRateMultiplier={bitRateMultiplier}
-        videoBitRateOverride={bitRateOverride}
-        onOutputOrientationChanged={this.onOutputOrientationChanged}
-        onPreviewOrientationChanged={this.onPreviewOrientationChanged}
-        onError={this.onError}
-        codeScannerOptions={codeScanner}
-        enableFrameProcessor={frameProcessor != null}
-        enableBufferCompression={props.enableBufferCompression ?? shouldEnableBufferCompression}
-        preview={isRenderingWithSkia ? false : (props.preview ?? true)}>
-        {isRenderingWithSkia && (
-          <SkiaCameraCanvas
-            style={styles.customPreviewView}
-            offscreenTextures={frameProcessor.offscreenTextures}
-            resizeMode={props.resizeMode}
-          />
-        )}
-        {enableFpsGraph && (
-          <FpsGraph style={styles.fpsGraph} averageFpsSamples={this.state.averageFpsSamples} targetMaxFps={props.format?.maxFps ?? 60} />
-        )}
-      </NativeCameraView>
-    )
-  }
+    /** @internal */
+    static displayName = 'Camera';
+    /** @internal */
+    displayName = Camera.displayName;
+    private lastFrameProcessor: ((frame: Frame) => void) | undefined;
+    private isNativeViewMounted = false;
+    private lastUIRotation: number | undefined = undefined;
+    private rotationHelper = new RotationHelper();
+
+    private readonly ref: React.RefObject<RefType>;
+
+    /** @internal */
+    constructor(props: CameraProps) {
+        super(props);
+        this.onViewReady = this.onViewReady.bind(this);
+        this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);
+        this.onInitialized = this.onInitialized.bind(this);
+        this.onStarted = this.onStarted.bind(this);
+        this.onStopped = this.onStopped.bind(this);
+        this.onPreviewStarted = this.onPreviewStarted.bind(this);
+        this.onPreviewStopped = this.onPreviewStopped.bind(this);
+        this.onShutter = this.onShutter.bind(this);
+        this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);
+        this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);
+        this.onError = this.onError.bind(this);
+        this.onCodeScanned = this.onCodeScanned.bind(this);
+        this.ref = React.createRef<RefType>();
+        this.lastFrameProcessor = undefined;
+        this.state = {
+            isRecordingWithFlash: false,
+            averageFpsSamples: [],
+        };
+    }
+
+    private get handle(): number {
+        const nodeHandle = findNodeHandle(this.ref.current);
+        if (nodeHandle == null || nodeHandle === -1) {
+            throw new CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
+        }
+
+        return nodeHandle;
+    }
+
+    //#region View-specific functions (UIViewManager)
+    /**
+     * Take a single photo and write it's content to a temporary file.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const photo = await camera.current.takePhoto({
+     *   flash: 'on',
+     *   enableAutoRedEyeReduction: true
+     * })
+     * ```
+     */
+    public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {
+        try {
+            return await CameraModule.takePhoto(this.handle, options ?? {});
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Captures a snapshot of the Camera view and write it's content to a temporary file.
+     *
+     * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.
+     * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * const snapshot = await camera.current.takeSnapshot({
+     *   quality: 100
+     * })
+     * ```
+     */
+    public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {
+        try {
+            return await CameraModule.takeSnapshot(this.handle, options ?? {});
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    private getBitRateMultiplier(bitRate: CameraProps['videoBitRate']): number {
+        if (typeof bitRate === 'number' || bitRate == null) return 1;
+        switch (bitRate) {
+            case 'extra-low':
+                return 0.6;
+            case 'low':
+                return 0.8;
+            case 'normal':
+                return 1;
+            case 'high':
+                return 1.2;
+            case 'extra-high':
+                return 1.4;
+        }
+    }
+
+    /**
+     * Start a new video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(() => {
+     *   camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    public startRecording(options: RecordVideoOptions): void {
+        const {onRecordingError, onRecordingFinished, ...passThruOptions} = options;
+        if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')
+            throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
+
+        if (options.flash === 'on') {
+            // Enable torch for video recording
+            this.setState({
+                isRecordingWithFlash: true,
+            });
+        }
+
+        const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {
+            if (this.state.isRecordingWithFlash) {
+                // disable torch again if it was enabled
+                this.setState({
+                    isRecordingWithFlash: false,
+                });
+            }
+
+            if (error != null) return onRecordingError(error);
+            if (video != null) return onRecordingFinished(video);
+        };
+
+        const nativeRecordVideoOptions: NativeRecordVideoOptions = passThruOptions;
+        try {
+            // TODO: Use TurboModules to make this awaitable.
+            CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Pauses the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    public async pauseRecording(): Promise<void> {
+        try {
+            return await CameraModule.pauseRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Resumes a currently paused video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * // Start
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * await timeout(1000)
+     * // Pause
+     * await camera.current.pauseRecording()
+     * await timeout(500)
+     * // Resume
+     * await camera.current.resumeRecording()
+     * await timeout(2000)
+     * // Stop
+     * await camera.current.stopRecording()
+     * ```
+     */
+    public async resumeRecording(): Promise<void> {
+        try {
+            return await CameraModule.resumeRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Stop the current video recording.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => console.error(error),
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.stopRecording()
+     * }, 5000)
+     * ```
+     */
+    public async stopRecording(): Promise<void> {
+        try {
+            return await CameraModule.stopRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Cancel the current video recording. The temporary video file will be deleted,
+     * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.
+     *
+     * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.
+     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
+     *
+     * @example
+     * ```ts
+     * await camera.current.startRecording({
+     *   onRecordingFinished: (video) => console.log(video),
+     *   onRecordingError: (error) => {
+     *     if (error.code === 'capture/recording-canceled') {
+     *       // recording was canceled.
+     *     } else {
+     *       console.error(error)
+     *     }
+     *   },
+     * })
+     * setTimeout(async () => {
+     *   await camera.current.cancelRecording()
+     * }, 5000)
+     * ```
+     */
+    public async cancelRecording(): Promise<void> {
+        try {
+            return await CameraModule.cancelRecording(this.handle);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+
+    /**
+     * Focus the camera to a specific point in the coordinate system.
+     * @param {Point} point The point to focus to. This should be relative
+     * to the Camera view's coordinate system and is expressed in points.
+     *  * `(0, 0)` means **top left**.
+     *  * `(CameraView.width, CameraView.height)` means **bottom right**.
+     *
+     * Make sure the value doesn't exceed the CameraView's dimensions.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     * @example
+     * ```ts
+     * await camera.current.focus({
+     *   x: tapEvent.x,
+     *   y: tapEvent.y
+     * })
+     * ```
+     */
+    public async focus(point: Point): Promise<void> {
+        try {
+            return await CameraModule.focus(this.handle, point);
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    //#endregion
+
+    //#region Static Functions (NativeModule)
+    /**
+     * Get a list of all available camera devices on the current phone.
+     *
+     * If you use Hooks, use the `useCameraDevices(..)` hook instead.
+     *
+     * * For Camera Devices attached to the phone, it is safe to assume that this will never change.
+     * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices
+     * could change over time when the external Camera device gets plugged in or plugged out, so
+     * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.
+     *
+     * @example
+     * ```ts
+     * const devices = Camera.getAvailableCameraDevices()
+     * const backCameras = devices.filter((d) => d.position === "back")
+     * const frontCameras = devices.filter((d) => d.position === "front")
+     * ```
+     */
+    public static getAvailableCameraDevices(): CameraDevice[] {
+        return CameraDevices.getAvailableCameraDevices();
+    }
+    /**
+     * Adds a listener that gets called everytime the Camera Devices change, for example
+     * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.
+     *
+     * If you use Hooks, use the `useCameraDevices()` hook instead.
+     */
+    public static addCameraDevicesChangedListener(listener: (newDevices: CameraDevice[]) => void): EmitterSubscription {
+        return CameraDevices.addCameraDevicesChangedListener(listener);
+    }
+    /**
+     * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure
+     * the user has permitted the app to use the camera.
+     *
+     * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.
+     */
+    public static getCameraPermissionStatus(): CameraPermissionStatus {
+        return CameraModule.getCameraPermissionStatus();
+    }
+    /**
+     * Gets the current Microphone-Recording Permission Status.
+     * Check this before enabling the `audio={...}` property to make sure the
+     * user has permitted the app to use the microphone.
+     *
+     * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.
+     */
+    public static getMicrophonePermissionStatus(): CameraPermissionStatus {
+        return CameraModule.getMicrophonePermissionStatus();
+    }
+    /**
+     * Gets the current Location Permission Status.
+     * Check this before enabling the `location={...}` property to make sure the
+     * the user has permitted the app to use the location.
+     *
+     * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.
+     *
+     * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.
+     * See [the "GPS Location Tags" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.
+     */
+    public static getLocationPermissionStatus(): CameraPermissionStatus {
+        return CameraModule.getLocationPermissionStatus();
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new camera permission status.
+     *
+     * If the user has previously blocked the app from using the camera, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {
+        try {
+            return await CameraModule.requestCameraPermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new microphone permission status.
+     *
+     * If the user has previously blocked the app from using the microphone, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {
+        try {
+            return await CameraModule.requestMicrophonePermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    /**
+     * Shows a "request permission" alert to the user, and resolves with the new location permission status.
+     *
+     * If the user has previously blocked the app from using the location, the alert will not be shown
+     * and `"denied"` will be returned.
+     *
+     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.
+     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
+     */
+    public static async requestLocationPermission(): Promise<CameraPermissionRequestResult> {
+        try {
+            return await CameraModule.requestLocationPermission();
+        } catch (e) {
+            throw tryParseNativeCameraError(e);
+        }
+    }
+    //#endregion
+
+    //#region Events (Wrapped to maintain reference equality)
+    private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {
+        const error = event.nativeEvent;
+        const cause = isErrorWithCause(error.cause) ? error.cause : undefined;
+        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+        const cameraError = new CameraRuntimeError(error.code, error.message, cause);
+
+        if (this.props.onError != null) {
+            this.props.onError(cameraError);
+        } else {
+            // User didn't pass an `onError` handler, so just log it to console
+            console.error(cameraError);
+        }
+    }
+
+    private onInitialized(): void {
+        this.props.onInitialized?.();
+    }
+
+    private onStarted(): void {
+        this.props.onStarted?.();
+    }
+
+    private onStopped(): void {
+        this.props.onStopped?.();
+    }
+
+    private onPreviewStarted(): void {
+        this.props.onPreviewStarted?.();
+    }
+
+    private onPreviewStopped(): void {
+        this.props.onPreviewStopped?.();
+    }
+
+    private onShutter(event: NativeSyntheticEvent<OnShutterEvent>): void {
+        this.props.onShutter?.(event.nativeEvent);
+    }
+
+    private onOutputOrientationChanged({nativeEvent: {outputOrientation}}: NativeSyntheticEvent<OutputOrientationChangedEvent>): void {
+        this.rotationHelper.outputOrientation = outputOrientation;
+        this.props.onOutputOrientationChanged?.(outputOrientation);
+        this.maybeUpdateUIRotation();
+    }
+
+    private onPreviewOrientationChanged({nativeEvent: {previewOrientation}}: NativeSyntheticEvent<PreviewOrientationChangedEvent>): void {
+        this.rotationHelper.previewOrientation = previewOrientation;
+        this.props.onPreviewOrientationChanged?.(previewOrientation);
+        this.maybeUpdateUIRotation();
+
+        if (isSkiaFrameProcessor(this.props.frameProcessor)) {
+            // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.
+            this.props.frameProcessor.previewOrientation.value = previewOrientation;
+        }
+    }
+
+    private maybeUpdateUIRotation(): void {
+        const uiRotation = this.rotationHelper.uiRotation;
+        if (uiRotation !== this.lastUIRotation) {
+            this.props.onUIRotationChanged?.(uiRotation);
+            this.lastUIRotation = uiRotation;
+        }
+    }
+    //#endregion
+
+    private onCodeScanned(event: NativeSyntheticEvent<OnCodeScannedEvent>): void {
+        const codeScanner = this.props.codeScanner;
+        if (codeScanner == null) return;
+
+        codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);
+    }
+
+    //#region Lifecycle
+    private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {
+        VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);
+    }
+
+    private unsetFrameProcessor(): void {
+        VisionCameraProxy.removeFrameProcessor(this.handle);
+    }
+
+    private onViewReady(): void {
+        this.isNativeViewMounted = true;
+        if (this.props.frameProcessor != null) {
+            // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
+            this.setFrameProcessor(this.props.frameProcessor.frameProcessor);
+            this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;
+        }
+    }
+
+    private onAverageFpsChanged({nativeEvent: {averageFps}}: NativeSyntheticEvent<AverageFpsChangedEvent>): void {
+        this.setState((state) => {
+            const averageFpsSamples = [...state.averageFpsSamples, averageFps];
+            while (averageFpsSamples.length >= MAX_BARS + 1) {
+                // we keep a maximum of 30 FPS samples in our history
+                averageFpsSamples.shift();
+            }
+
+            return {
+                ...state,
+                averageFpsSamples: averageFpsSamples,
+            };
+        });
+    }
+
+    /** @internal */
+    componentDidUpdate(): void {
+        if (!this.isNativeViewMounted) return;
+        const frameProcessor = this.props.frameProcessor;
+        if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {
+            // frameProcessor argument identity changed. Update native to reflect the change.
+            if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);
+            else this.unsetFrameProcessor();
+
+            this.lastFrameProcessor = frameProcessor?.frameProcessor;
+        }
+    }
+    //#endregion
+
+    /** @internal */
+    public render(): React.ReactNode {
+        // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
+        const {device, frameProcessor, codeScanner, enableFpsGraph, fps, videoBitRate, ...props} = this.props;
+
+        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
+        if (device == null) {
+            throw new CameraRuntimeError(
+                'device/no-device',
+                'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices',
+            );
+        }
+
+        const shouldEnableBufferCompression = props.video === true && frameProcessor == null;
+        const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;
+        const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);
+        const shouldBeMirrored = device.position === 'front';
+
+        // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple
+        const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];
+        const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];
+
+        // bitrate is number (override) or string (multiplier)
+        let bitRateMultiplier: number | undefined;
+        let bitRateOverride: number | undefined;
+        if (typeof videoBitRate === 'number') {
+            // If the user passed an absolute number as a bit-rate, we just use this as a full override.
+            bitRateOverride = videoBitRate;
+        } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {
+            // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it
+            bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);
+        }
+
+        return (
+            <NativeCameraView
+                {...props}
+                cameraId={device.id}
+                ref={this.ref}
+                torch={torch}
+                minFps={minFps}
+                maxFps={maxFps}
+                isMirrored={props.isMirrored ?? shouldBeMirrored}
+                onViewReady={this.onViewReady}
+                onAverageFpsChanged={enableFpsGraph ? this.onAverageFpsChanged : undefined}
+                onInitialized={this.onInitialized}
+                onCodeScanned={this.onCodeScanned}
+                onStarted={this.onStarted}
+                onStopped={this.onStopped}
+                onPreviewStarted={this.onPreviewStarted}
+                onPreviewStopped={this.onPreviewStopped}
+                onShutter={this.onShutter}
+                videoBitRateMultiplier={bitRateMultiplier}
+                videoBitRateOverride={bitRateOverride}
+                onOutputOrientationChanged={this.onOutputOrientationChanged}
+                onPreviewOrientationChanged={this.onPreviewOrientationChanged}
+                onError={this.onError}
+                codeScannerOptions={codeScanner}
+                enableFrameProcessor={frameProcessor != null}
+                enableBufferCompression={props.enableBufferCompression ?? shouldEnableBufferCompression}
+                preview={isRenderingWithSkia ? false : props.preview ?? true}
+            >
+                {isRenderingWithSkia && (
+                    <SkiaCameraCanvas
+                        style={styles.customPreviewView}
+                        offscreenTextures={frameProcessor.offscreenTextures}
+                        resizeMode={props.resizeMode}
+                    />
+                )}
+                {enableFpsGraph && (
+                    <FpsGraph
+                        style={styles.fpsGraph}
+                        averageFpsSamples={this.state.averageFpsSamples}
+                        targetMaxFps={props.format?.maxFps ?? 60}
+                    />
+                )}
+            </NativeCameraView>
+        );
+    }
 }
 //#endregion
 
 const styles = StyleSheet.create({
-  customPreviewView: {
-    flex: 1,
-  },
-  fpsGraph: {
-    elevation: 1,
-    position: 'absolute',
-    left: 15,
-    top: 30,
-  },
-})
+    customPreviewView: {
+        flex: 1,
+    },
+    fpsGraph: {
+        elevation: 1,
+        position: 'absolute',
+        left: 15,
+        top: 30,
+    },
+});
diff --git a/node_modules/react-native-vision-camera/src/specs/CameraViewNativeComponent.ts b/node_modules/react-native-vision-camera/src/specs/CameraViewNativeComponent.ts
new file mode 100644
index 0000000..b2c83cb
--- /dev/null
+++ b/node_modules/react-native-vision-camera/src/specs/CameraViewNativeComponent.ts
@@ -0,0 +1,91 @@
+/* eslint-disable @typescript-eslint/ban-types */
+import type {HostComponent, ViewProps} from 'react-native';
+import type {DirectEventHandler, Double, Int32} from 'react-native/Libraries/Types/CodegenTypes';
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+
+export type VisionCameraComponentType = HostComponent<NativeProps>;
+
+export interface NativeProps extends ViewProps {
+    enableGpuBuffers: boolean;
+    androidPreviewViewType?: string;
+    cameraId: string;
+    enableFrameProcessor: boolean;
+    enableLocation: boolean;
+    enableBufferCompression: boolean;
+    photoQualityBalance: string;
+    isActive: boolean;
+    photo?: boolean;
+    video?: boolean;
+    audio?: boolean;
+    torch?: string;
+    zoom?: Double;
+    exposure?: Double;
+    enableZoomGesture?: boolean;
+    enableFpsGraph?: boolean;
+    resizeMode?: string;
+    format?: Readonly<{
+        supportsDepthCapture?: boolean;
+        photoHeight: Double;
+        photoWidth: Double;
+        videoHeight: Double;
+        videoWidth: Double;
+        maxISO: Double;
+        minISO: Double;
+        maxFps: Double;
+        minFps: Double;
+        fieldOfView: Double;
+        supportsVideoHDR: boolean;
+        supportsPhotoHDR: boolean;
+        autoFocusSystem: string;
+        videoStabilizationModes: string[];
+        pixelFormats: string[];
+    }>;
+    pixelFormat: string;
+    fps?: Int32;
+    videoHdr?: boolean; // not sure why was int on native side
+    photoHdr?: boolean; // not sure why was int on native side
+    lowLightBoost?: boolean; // same
+    videoStabilizationMode?: string;
+    enableDepthData?: boolean;
+    enablePortraitEffectsMatteDelivery?: boolean;
+    orientation?: string;
+    codeScannerOptions?: Readonly<{
+        codeTypes?: string[];
+        interval?: Double;
+        regionOfInterest?: Readonly<{
+            x?: Double;
+            y?: Double;
+            width?: Double;
+            height?: Double;
+        }>;
+    }>;
+    onCodeScanned?: DirectEventHandler<
+        Readonly<{
+            codes?: Readonly<{
+                type?: string;
+                value?: string;
+                frame?: Readonly<{x: Double; y: Double; width: Double; height: Double}>;
+            }>;
+            frame?: Readonly<{width: Int32; height: Int32}>;
+            corners?: Readonly<{x: Double; y: Double}>;
+        }>
+    >;
+    onShutter?: DirectEventHandler<
+        Readonly<{
+            type: string;
+        }>
+    >;
+    onStarted?: DirectEventHandler<Readonly<{}>>;
+    onStopped?: DirectEventHandler<Readonly<{}>>;
+    onInitialized?: DirectEventHandler<Readonly<{}>>;
+    onError?: DirectEventHandler<
+        Readonly<{
+            code: string;
+            message: string;
+            cause: Readonly<{code: string; domain: string; message: string; details: string}>;
+        }>
+    >;
+    onViewReady: DirectEventHandler<Readonly<{}>>;
+}
+
+export default codegenNativeComponent<NativeProps>('CameraView');
