diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImagesManager.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImagesManager.kt
index 4c5a3a8..0cf3c5e 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImagesManager.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImagesManager.kt
@@ -248,10 +248,10 @@ class RNMBXImagesManager(private val mContext: ReactApplicationContext) :
                 } else {
                     val pair = array.getArray(i)
                     if (pair != null) {
-                        if (pair.size() != 2 || pair.getType(0) != ReadableType.Number || pair.getType(1) != ReadableType.Number) {
+                        if (pair?.size() != 2 || pair.getType(0) != ReadableType.Number || pair.getType(1) != ReadableType.Number) {
                             Logger.e("RNMBXImages", "each element of stretch should be pair of 2 integers but was ${pair}")
                         }
-                        result.add(ImageStretches(pair.getDouble(0).toFloat(), pair.getDouble(1).toFloat()))
+                        result.add(ImageStretches(pair!!.getDouble(0).toFloat(), pair.getDouble(1).toFloat()))
                     } else {
                         Logger.e("RNMBXImages", "each element of stretch should be an array but was null")
                     }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/RNMBXMapViewManager.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/RNMBXMapViewManager.kt
index 15f4917..f518bd5 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/RNMBXMapViewManager.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/RNMBXMapViewManager.kt
@@ -40,7 +40,7 @@ fun ReadableArray.forEachString(action: (String) -> Unit) {
 
 fun ReadableArray.asArrayString(): Array<String> {
     val result = Array<String>(size()) {
-        getString(it).toString()
+        getString(it)!!.toString()
     }
     return result
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/RNMBXStyleValue.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/RNMBXStyleValue.kt
index 8710d28..573e096 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/RNMBXStyleValue.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/RNMBXStyleValue.kt
@@ -83,7 +83,7 @@ class RNMBXStyleValue(config: ReadableMap) {
         for (i in 0 until arr.size()) {
             val item = arr.getMap(i)
             if (item != null) {
-                result.add(item.getDouble("value"))
+                result.add(item!!.getDouble("value"))
             } else {
                 Logger.e("RNMBXStyleValue", "getFloatArray: null value for item: $i")
             }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/lifecycle-compat/v25/com/rnmapbox/rnmbx/components/mapview/LifecycleCompat.kt b/node_modules/@rnmapbox/maps/android/src/main/lifecycle-compat/v25/com/rnmapbox/rnmbx/components/mapview/LifecycleCompat.kt
index 80e49ed..4691073 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/lifecycle-compat/v25/com/rnmapbox/rnmbx/components/mapview/LifecycleCompat.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/lifecycle-compat/v25/com/rnmapbox/rnmbx/components/mapview/LifecycleCompat.kt
@@ -5,7 +5,7 @@ import android.view.View
 import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.LifecycleOwner
 import androidx.lifecycle.LifecycleRegistry
-import androidx.lifecycle.ViewTreeLifecycleOwner
+import androidx.lifecycle.setViewTreeLifecycleOwner
 
 /**
  * Lifecycle compatibility for Lifecycle 2.5 and older which uses getLifecycle() method
@@ -35,13 +35,14 @@ class RNMBXLifeCycle {
                 }
 
                 // Lifecycle 2.5 and older uses method syntax
-                override fun getLifecycle(): Lifecycle {
-                    return lifecycleRegistry
+                override val lifecycle: Lifecycle
+                    get() = lifecycleRegistry
                 }
 
             }
-            ViewTreeLifecycleOwner.set(view, lifecycleOwner)
         }
+        view.setViewTreeLifecycleOwner(lifecycleOwner)
+        
         lifecycleOwner?.handleLifecycleEvent(Lifecycle.Event.ON_START)
     }
 
