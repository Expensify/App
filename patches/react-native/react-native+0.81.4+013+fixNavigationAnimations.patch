diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
index 750569f..d458d7a 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
@@ -97,6 +97,7 @@ export default class AnimatedProps extends AnimatedNode {
   #nodes: $ReadOnlyArray<AnimatedNode>;
   #props: {[string]: mixed};
   #target: ?TargetView = null;
+  #connectedToView: boolean;
 
   constructor(
     inputProps: {[string]: mixed},
@@ -110,6 +111,7 @@ export default class AnimatedProps extends AnimatedNode {
     this.#nodes = nodes;
     this.#props = props;
     this.#callback = callback;
+    this.#connectedToView = false;
   }
 
   __getValue(): Object {
@@ -248,6 +250,8 @@ export default class AnimatedProps extends AnimatedNode {
 
       if (this.#target != null) {
         this.#connectAnimatedView(this.#target);
+      } else if (!this.#connectedToView && this._animatedView) {
+        this.#connectAnimatedView(this.#target);
       }
     }
   }
@@ -272,6 +276,7 @@ export default class AnimatedProps extends AnimatedNode {
         throw new Error('Unable to locate attached view in the native tree');
       }
     }
+    this.#connectedToView = true;
     NativeAnimatedHelper.API.connectAnimatedNodeToView(
       this.__getNativeTag(),
       viewTag,
@@ -285,6 +290,7 @@ export default class AnimatedProps extends AnimatedNode {
     if (viewTag == null) {
       return;
     }
+    this.#connectedToView = false;
     NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(
       this.__getNativeTag(),
       viewTag,
